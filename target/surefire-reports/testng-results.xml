<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="378" total="667" passed="238" failed="43" skipped="8">
  <reporter-output>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Failure message after entering same org code : Duplicate org code [KG01].]]>
    </line>
    <line>
      <![CDATA[New Usernot created due to duplicate orgcode.]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[License status verified]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[System Admin is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[System User details got edited.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Actual message when user both passwords are not same: Passwords Mismatch!]]>
    </line>
    <line>
      <![CDATA[Got correct error when there is mismatch in password]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User details got edited.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked the download button]]>
    </line>
    <line>
      <![CDATA[Audit logs download started Successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 2]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 2]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Description]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Source]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[Upload button is clicked]]>
    </line>
    <line>
      <![CDATA[Upload PS button clicked]]>
    </line>
    <line>
      <![CDATA[Failure message for Invalid Artifact name: Artifact name for Process Studio distribution is case-sensitive. Please enter name as "Process Studio".]]>
    </line>
    <line>
      <![CDATA[Please upload artifacts with valid name]]>
    </line>
    <line>
      <![CDATA[Artifact name has given correctly]]>
    </line>
    <line>
      <![CDATA[Upload PS button clicked]]>
    </line>
    <line>
      <![CDATA[Success message for valid Artifact name: Artifact uploaded successfully]]>
    </line>
    <line>
      <![CDATA[Artifact uploaded successfully]]>
    </line>
    <line>
      <![CDATA[Actual Entity after uploading PS Upload: ARTIFACT]]>
    </line>
    <line>
      <![CDATA[Actual Operation after uploading PS Upload: UPLOAD]]>
    </line>
    <line>
      <![CDATA[Entry and Operation in Logs after uploading PS is verified]]>
    </line>
    <line>
      <![CDATA[Entity after uploading PS is verified]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[Upload zip button clicked]]>
    </line>
    <line>
      <![CDATA[Plugin zip started uploading]]>
    </line>
    <line>
      <![CDATA[Upgrade all plugin checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Assign to all checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Save button is selected]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[Upload zip button clicked]]>
    </line>
    <line>
      <![CDATA[Plugin zip started uploading]]>
    </line>
    <line>
      <![CDATA[Upgrade all plugin checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Assign to all checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Save button is selected]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Server Settings are not done, validated successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[When server settings are not done & user try to download agent.Popup is : It seems you have not configured the server URL for this server. Please contact administrator]]>
    </line>
    <line>
      <![CDATA[Agent can't be download due ro server settings,Error validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[System Settings saved]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Server URL field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Clean Up Requests Hours field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[System Settings saved]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Add smtp config button clicked]]>
    </line>
    <line>
      <![CDATA[Test connection successfully]]>
    </line>
    <line>
      <![CDATA[SMTP configured successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User skipped the set security question and navigated to Tenants Tab]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions set successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions can not be updated due to wrong password]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions updated successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User first skip the security question and then set security questions successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of sysadmin Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[Password policy updated]]>
    </line>
    <line>
      <![CDATA[Password History of sysadmin validated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Security questions set successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Sysadmin Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[No. of attempts is validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Last login time displayed successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Profile details validation successfully.]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[configure button is clicked]]>
    </line>
    <line>
      <![CDATA[Started configuring server url]]>
    </line>
    <line>
      <![CDATA[Server URL field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Clean Up Requests Hours field edited Successfully]]>
    </line>
    <line>
      <![CDATA[Verify button is clicked]]>
    </line>
    <line>
      <![CDATA[System Settings saved]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[LOGOUT]]>
    </line>
    <line>
      <![CDATA[UPDATE]]>
    </line>
    <line>
      <![CDATA[AUTHENTICATE]]>
    </line>
    <line>
      <![CDATA[Operations in audit logs validated in table]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Error when notification history is gretaer than wf requestNotification History Duration has be less than or equal to Workflow Requests Duration]]>
    </line>
    <line>
      <![CDATA[Expected Error when notification history is gretaer than wf request:Notification History Duration has be less than or equal to Workflow Requests Duration]]>
    </line>
    <line>
      <![CDATA[Getting correct error message.]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Purge policy saved successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Purge policy saved successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Add button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule created for day of Month]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Forgotten password link is Present]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Forgot password link clicked]]>
    </line>
    <line>
      <![CDATA[Username entered]]>
    </line>
    <line>
      <![CDATA[submitted]]>
    </line>
    <line>
      <![CDATA[security questions submitted]]>
    </line>
    <line>
      <![CDATA[Forgot password link clicked]]>
    </line>
    <line>
      <![CDATA[Username entered]]>
    </line>
    <line>
      <![CDATA[submitted]]>
    </line>
    <line>
      <![CDATA[security questions submitted]]>
    </line>
    <line>
      <![CDATA[Set new password successfully]]>
    </line>
    <line>
      <![CDATA[Password set successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Import is not possible w/o License ]]>
    </line>
    <line>
      <![CDATA[HomeTab is clicked]]>
    </line>
    <line>
      <![CDATA[Upload Licens ebox is clicked]]>
    </line>
    <line>
      <![CDATA[License file submitted]]>
    </line>
    <line>
      <![CDATA[Upload button is clicked]]>
    </line>
    <line>
      <![CDATA[License Uploaded successfully for Tenant]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Workflow Admin]]>
    </line>
    <line>
      <![CDATA[Workflow Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Workflow Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant Admin]]>
    </line>
    <line>
      <![CDATA[Tenant Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Admin]]>
    </line>
    <line>
      <![CDATA[User Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[User Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Group]]>
    </line>
    <line>
      <![CDATA[Actual Username:User group created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User group created successfully]]>
    </line>
    <line>
      <![CDATA[New user group is created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Description of user group updated]]>
    </line>
    <line>
      <![CDATA[Actual Username:Changes saved to user group]]>
    </line>
    <line>
      <![CDATA[Expected Username:Changes saved to user group]]>
    </line>
    <line>
      <![CDATA[User group got edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Users Tab clicked]]>
    </line>
    <line>
      <![CDATA[UsersGroup Tab clicked]]>
    </line>
    <line>
      <![CDATA[Show Member button is clicked]]>
    </line>
    <line>
      <![CDATA[assigning user1]]>
    </line>
    <line>
      <![CDATA[Actual Username:User(s) added to the group successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User(s) added to the group successfully]]>
    </line>
    <line>
      <![CDATA[User1 assigned and validated]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab clicked]]>
    </line>
    <line>
      <![CDATA[Users group tab clicked]]>
    </line>
    <line>
      <![CDATA[Show Member button is clicked]]>
    </line>
    <line>
      <![CDATA[Removing user1]]>
    </line>
    <line>
      <![CDATA[Actual Username:User(s) removed from the group successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User(s) removed from the group successfully]]>
    </line>
    <line>
      <![CDATA[User1 removed]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Group]]>
    </line>
    <line>
      <![CDATA[Actual Username:Duplicate user group name [HRGroup]]]>
    </line>
    <line>
      <![CDATA[Expected Username:Duplicate user group name [HRGroup]]]>
    </line>
    <line>
      <![CDATA[User group with duplicate name can not be created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Alert Message when user dont configure smtpEmail server not configured for the tenant. Email notification cannot be enabled]]>
    </line>
    <line>
      <![CDATA[Getting correct message for email notification as smtp not configured]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Icon Updation done successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Icon Updation done successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[workflowList  tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is Clicked]]>
    </line>
    <line>
      <![CDATA[Aactual Success Message after editing workflow: Workflow updated successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Message after editing workflow: Workflow updated successfully]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[workflowList  tab clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category name is entered which is only mandatory field]]>
    </line>
    <line>
      <![CDATA[Actual Category created message is :Workflow category created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category created message is :Workflow category created successfully]]>
    </line>
    <line>
      <![CDATA[Category created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit Button corresponding to required category is clicked]]>
    </line>
    <line>
      <![CDATA[Category Description is entered]]>
    </line>
    <line>
      <![CDATA[Actual Category edited message is :Workflow category updated successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category edited message is :Workflow category updated successfully]]>
    </line>
    <line>
      <![CDATA[Category edited succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Workflow which needs to move is checked]]>
    </line>
    <line>
      <![CDATA[category in which wf needs to move is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Actual message is :Workflow(s) category changed successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Workflow(s) category changed successfully]]>
    </line>
    <line>
      <![CDATA[Workflow assigned to category succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category name is entered which is only mandatory field]]>
    </line>
    <line>
      <![CDATA[Actual message is :Duplicate category name [WebGUI]]]>
    </line>
    <line>
      <![CDATA[Expected message is :Duplicate category name [WebGUI]]]>
    </line>
    <line>
      <![CDATA[Category can't be created with duplicate name]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Record for KG_Private1 credential found in table]]>
    </line>
    <line>
      <![CDATA[Credentials created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit button corresponding to credentials clicked]]>
    </line>
    <line>
      <![CDATA[Year selected from Calender]]>
    </line>
    <line>
      <![CDATA[Month selected from Calender]]>
    </line>
    <line>
      <![CDATA[Expiry Date selected from Calender]]>
    </line>
    <line>
      <![CDATA[Update button is clicked]]>
    </line>
    <line>
      <![CDATA[Credentials edited succesfully with all fields]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
    </line>
    <line>
      <![CDATA[Expected Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
    </line>
    <line>
      <![CDATA[Credentials with duplicate name can't created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Credential Pool button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Record for AE1 credential Pool found in table]]>
    </line>
    <line>
      <![CDATA[Credential Pool created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Credential Pool button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
    </line>
    <line>
      <![CDATA[Expected Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
    </line>
    <line>
      <![CDATA[Credential Pool with duplicate name can't created]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Credential which needs to add in crenetial pool is selcted]]>
    </line>
    <line>
      <![CDATA[Credential pool in which redential needs to move is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Move Button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual message is :Credential(s) moved successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Credential(s) moved successfully]]>
    </line>
    <line>
      <![CDATA[Credential moved to credential pool successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to workflow assignment Tab]]>
    </line>
    <line>
      <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
    </line>
    <line>
      <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
    </line>
    <line>
      <![CDATA[Now User needs to download agent first]]>
    </line>
    <line>
      <![CDATA[User navigated to Agent List Tab]]>
    </line>
    <line>
      <![CDATA[Agent download started]]>
    </line>
    <line>
      <![CDATA[File unzipped properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Additional status details is clicked]]>
    </line>
    <line>
      <![CDATA[Message after execution of wf:Message : Execution Successful]]>
    </line>
    <line>
      <![CDATA[Workflow status is:Complete]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[Clicked the download button]]>
    </line>
    <line>
      <![CDATA[Audit logs download started Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 2]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 2]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on Audit logs tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Entity]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Object Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Description]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Source]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Status of New Tenant user is :UNVERIFIED]]>
    </line>
    <line>
      <![CDATA[Expected Status of New Tenant user is :UNVERIFIED]]>
    </line>
    <line>
      <![CDATA[Status of newly created user is UNVERIFIED, verified successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Login into TA to verify status]]>
    </line>
    <line>
      <![CDATA[Actual Status of Tenant user after changing password is :ACTIVE]]>
    </line>
    <line>
      <![CDATA[Expected Status of Tenant user after changing password is :ACTIVE]]>
    </line>
    <line>
      <![CDATA[Status of user whose First time password changed is ACTIVE, verified successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Daily Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[End date changed]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Start day selected]]>
    </line>
    <line>
      <![CDATA[End day selected]]>
    </line>
    <line>
      <![CDATA[Schedule type selected]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[End Time is selected]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Weekly Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[End Time is selected]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Weekly Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new Button clicked]]>
    </line>
    <line>
      <![CDATA[Schedule form details started]]>
    </line>
    <line>
      <![CDATA[Run Schedule Infinitely checbox selected]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is selected]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[Schedule submitted]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[Infinite Weekly Schedule created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Add Transfer Schedule button is clicked]]>
    </line>
    <line>
      <![CDATA[User from whom schedule needs to transfer is selcted]]>
    </line>
    <line>
      <![CDATA[User to whom schedule needs to is selcted]]>
    </line>
    <line>
      <![CDATA[Transfer button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedules transferred successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedules transferred successfully]]>
    </line>
    <line>
      <![CDATA[Schedule transfered successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to AgentList tab]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to AgentList tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 3]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 3]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Agent Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Resource Utilization]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Agent Name,Status and Resource Utilization.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to AgentList tab]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Agent Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Execution Threads]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Executing Workflows]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Resource Utilization]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Selected count of No. of colums 3]]>
    </line>
    <line>
      <![CDATA[Total No of columns in table: 3]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Workflow Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All Options got deselected except Id,Workflow Name,Status.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Id]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Workflow Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Priority]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Status]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Completed]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Download button is clicked & request download started]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Agent Logs Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Request button is clicked]]>
    </line>
    <line>
      <![CDATA[agent Radio button is selected by default]]>
    </line>
    <line>
      <![CDATA[Agent is been selected]]>
    </line>
    <line>
      <![CDATA[Start Date selected]]>
    </line>
    <line>
      <![CDATA[End Date selected]]>
    </line>
    <line>
      <![CDATA[Agent log submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Agent logs request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Agents log downloaded successfully for Agent DELL@DESKTOP-5VHKQUJ]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Agent Logs Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Request button is clicked]]>
    </line>
    <line>
      <![CDATA[Request Radio Button is selected]]>
    </line>
    <line>
      <![CDATA[Request ID entered.]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Workflow logs request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Workflow log downloaded successfully for Workflow InstanceID 1]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration None selected]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at None level created successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Zip File found in File Structure:Boolean.zip]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[workflowList  tab clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Update option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name which needs to be updated]]>
    </line>
    <line>
      <![CDATA[Clicked on Update bottun]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Second workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Today selected]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Relative selected]]>
    </line>
    <line>
      <![CDATA[Create Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at None level created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Edit report is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Custom selected]]>
    </line>
    <line>
      <![CDATA[Update Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard Saved Successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard Saved Successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at Custom level updated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a Table]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Set as Default option clicked]]>
    </line>
    <line>
      <![CDATA[Report set as a default successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Pin to Home option clicked]]>
    </line>
    <line>
      <![CDATA[After Pin to Home actual message get is: Dashboard [DashboardCustom] set as home dashboard]]>
    </line>
    <line>
      <![CDATA[Report set as a default successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Make Public option clicked]]>
    </line>
    <line>
      <![CDATA[After making dashboard public actual message get is: Dashboard [DashboardCustom], Access Level set to Public]]>
    </line>
    <line>
      <![CDATA[Dashboard made as public successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Delete Dashboard option clicked]]>
    </line>
    <line>
      <![CDATA[Delete button clicked on popup]]>
    </line>
    <line>
      <![CDATA[After deleting dashboard with report, actual message get is: Dashboard Deleted successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard with report deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration None selected]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Report tab clicked]]>
    </line>
    <line>
      <![CDATA[DataSource  tab clicked]]>
    </line>
    <line>
      <![CDATA[Data-Source Form opened]]>
    </line>
    <line>
      <![CDATA[Button Clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
    </line>
    <line>
      <![CDATA[Purge policy UPDATED successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[SMTP tab clicked]]>
    </line>
    <line>
      <![CDATA[Add smtp config button clicked]]>
    </line>
    <line>
      <![CDATA[Tested connection successfully]]>
    </line>
    <line>
      <![CDATA[Smtp configured successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[SMTP tab clicked]]>
    </line>
    <line>
      <![CDATA[Edit button clicked]]>
    </line>
    <line>
      <![CDATA[Tested connection successfully]]>
    </line>
    <line>
      <![CDATA[Smtp edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Clicked save button now validate the password complexity at confirm policy popup]]>
    </line>
    <line>
      <![CDATA[Expected Arraylist is:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&, Password length should be between 6-19]]]>
    </line>
    <line>
      <![CDATA[Values in arrayList Before:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&]]]>
    </line>
    <line>
      <![CDATA[Validation done as Password complexity match while changing password]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[Password policy updated]]>
    </line>
    <line>
      <![CDATA[Password History of sysadmin validated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Policy tab clicked]]>
    </line>
    <line>
      <![CDATA[Save button clicked & Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
    </line>
    <line>
      <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
    </line>
    <line>
      <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
    </line>
    <line>
      <![CDATA[Ok button clicked in confirm policy popup]]>
    </line>
    <line>
      <![CDATA[Actual Message after password policy update:Password policy updated successfully]]>
    </line>
    <line>
      <![CDATA[Expected Message after password policy update:Password policy updated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Actual_msg:Your account is inaccessible . Please contact your Administrator.]]>
    </line>
    <line>
      <![CDATA[Expected_msg:Your account is inaccessible . Please contact your Administrator.]]>
    </line>
    <line>
      <![CDATA[No. of attempts is validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Last login time displayed successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Profile details validation successfully.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant logo uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[Tenant logo removed successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Locked button clicked]]>
    </line>
    <line>
      <![CDATA[Action is selected to UNLOCK user and next button is clicked]]>
    </line>
    <line>
      <![CDATA[MadhuRani1enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Single plugin jar uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[Tenant is created successfully, now assign specific plugin to that tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin assigned to single tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Single plugin assigned to desired tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Single plugin jar uploaded successfully]]>
    </line>
    <line>
      <![CDATA[New plugin jar is uploaded now we will assign it to all tenants]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin assigned to all tenant successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Upload Button is clicked]]>
    </line>
    <line>
      <![CDATA[Plugin Name is selected]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Chrome driver uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Opertaion of Disable all workflows is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Plugin Update checkbox selected]]>
    </line>
    <line>
      <![CDATA[Disable button is selected, now verify message]]>
    </line>
    <line>
      <![CDATA[Message get after disabling workflow: Workflow disabled]]>
    </line>
    <line>
      <![CDATA[Workflow disabled successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Opertaion of Enable all workflows is selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Plugin Update checkbox selected]]>
    </line>
    <line>
      <![CDATA[Enable button is selected, now verify message]]>
    </line>
    <line>
      <![CDATA[Message get after enabling workflow: Workflow enabled successfully]]>
    </line>
    <line>
      <![CDATA[Workflow enabled successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Upload PS button clicked]]>
    </line>
    <line>
      <![CDATA[ Actual message after updating artifact: Artifact updated successfully]]>
    </line>
    <line>
      <![CDATA[Artifact updated successfully]]>
    </line>
    <line>
      <![CDATA[Forgot password link clicked]]>
    </line>
    <line>
      <![CDATA[Username entered]]>
    </line>
    <line>
      <![CDATA[submitted]]>
    </line>
    <line>
      <![CDATA[security questions submitted]]>
    </line>
    <line>
      <![CDATA[Set new password successfully]]>
    </line>
    <line>
      <![CDATA[Password set successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: LPT-0919]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: KalyaniG]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: 10.81.24.109]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: 5901]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
    </line>
    <line>
      <![CDATA[Expected details of Integration service in table are: [LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
    </line>
    <line>
      <![CDATA[Integration service details verified in table]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button clicked, Service with IntService1 name is editing]]>
    </line>
    <line>
      <![CDATA[UserName is edited]]>
    </line>
    <line>
      <![CDATA[Update Button is clicked, now validate the change in table]]>
    </line>
    <line>
      <![CDATA[Actual Machine Name in Integration table: VM-0163 and Expected Machinename in Integrationtable: VM-0163]]>
    </line>
    <line>
      <![CDATA[Integration service edited successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Download button clicked and downloading integrtration service started]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Enable button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration service enable for Tenant1: KG01 and allowed number of configuration is: 2]]>
    </line>
    <line>
      <![CDATA[Integration service enable for Tenant2: KG02 and allowed number of configuration is: 1]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration service enabled for multiple tenant]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type created successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type updated successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User searched for functionality: Logs and Found is: Logs]]>
    </line>
    <line>
      <![CDATA[Search Functionality working properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User searched for functionality: Single Sign-On and Found is: Single Sign-On]]>
    </line>
    <line>
      <![CDATA[Search Functionality working properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: LPT-0919]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: MadhuRani2]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, MadhuRani2]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: 10.81.24.109]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, MadhuRani2, 10.81.24.109]]]>
    </line>
    <line>
      <![CDATA[Actual values in Integration table: 5901]]>
    </line>
    <line>
      <![CDATA[Actual details of Integration service in table are :[LPT-0919, MadhuRani2, 10.81.24.109, 5901]]]>
    </line>
    <line>
      <![CDATA[Expected details of Integration service in table are: [LPT-0919, MadhuRani2, 10.81.24.109, 5901]]]>
    </line>
    <line>
      <![CDATA[Integration service details verified in table]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button clicked, Service with IntService1ForMadhuRani2 name is editing]]>
    </line>
    <line>
      <![CDATA[UserName is edited]]>
    </line>
    <line>
      <![CDATA[Update Button is clicked, now validate the change in table]]>
    </line>
    <line>
      <![CDATA[Actual Machine Name in Integration table: VM-0163 and Expected Machinename in Integrationtable: VM-0163]]>
    </line>
    <line>
      <![CDATA[Integration service edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Download button clicked and downloading integrtration service started]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Type selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Service selected from dropdown]]>
    </line>
    <line>
      <![CDATA[Update response via service checkbox is already selected]]>
    </line>
    <line>
      <![CDATA[Timezone selected]]>
    </line>
    <line>
      <![CDATA[Polling schedule is set]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Single Sign-on Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenants tab is clicked]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Tenants and Expected page title is: Tenants]]>
    </line>
    <line>
      <![CDATA[Search Functionality working fine for Tenants & Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: System Users and Expected page title is: System Users]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Tenant Users and Expected page title is: Tenant Users]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Workflow Operations and Expected page title is: Workflow Operations]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on audit logs tab]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Audit Logs and Expected page title is: Audit Logs]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Artifacts and Expected page title is: Artifacts]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Plugins and Expected page title is: Plugins]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Services and Expected page title is: Services]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Plugin Files and Expected page title is: Plugin Files]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: System Settings and Expected page title is: System Settings]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Email Configuration and Expected page title is: Email Configuration]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Sysadmin Policy and Expected page title is: Sysadmin Policy]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Reset Security Questions and Expected page title is: Reset Security Questions]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Scheduler and Expected page title is: Scheduler]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Requests and Expected page title is: Requests]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Agent Logs and Expected page title is: Agent Logs]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Services and Expected page title is: Services]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Workflow Files and Expected page title is: Workflow Files]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dropdown Selector button is selected]]>
    </line>
    <line>
      <![CDATA[Native Users is Selected]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Rohil]]>
    </line>
    <line>
      <![CDATA[Omkar]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dropdown Selector button is selected]]>
    </line>
    <line>
      <![CDATA[Native Users is Selected]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Suyash]]>
    </line>
    <line>
      <![CDATA[Jitin]]>
    </line>
    <line>
      <![CDATA[Bulk User file is uploaded]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Add new button is clicked]]>
    </line>
    <line>
      <![CDATA[Create button is clicked]]>
    </line>
    <line>
      <![CDATA[Record for KG_Private2 credential found in table]]>
    </line>
    <line>
      <![CDATA[Credentials created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Configuration Parameters dropdown is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked on Credentials Radio Button]]>
    </line>
    <line>
      <![CDATA[Clicked on Credentials Pool Radio Button]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Workflow Name]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Submitted By]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Created Time]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Execution Start Time]]>
    </line>
    <line>
      <![CDATA[Field of Columns: Completed Time]]>
    </line>
    <line>
      <![CDATA[Column Value found]]>
    </line>
    <line>
      <![CDATA[All columns selected found in table.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button on popup is confirmed]]>
    </line>
    <line>
      <![CDATA[Actual message is :Credential pool [AE1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Credential pool [AE1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Credential pool deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Credentials tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button on popup is confirmed]]>
    </line>
    <line>
      <![CDATA[Actual message is :Credential [KG_Private1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Credential [KG_Private1] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Credential deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab clicked]]>
    </line>
    <line>
      <![CDATA[Users group tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Username:User group deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Username:User group deleted successfully]]>
    </line>
    <line>
      <![CDATA[User group deleted]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Home Tab is clicked]]>
    </line>
    <line>
      <![CDATA[License Details Tab is clicked]]>
    </line>
    <line>
      <![CDATA[No record(s) found!]]>
    </line>
    <line>
      <![CDATA[Actual License details :-[No record(s) found!]]]>
    </line>
    <line>
      <![CDATA[Expected License details :-[DEVELOPMENT, 10, 20, 3, 10000, 30, 15-Sep-2022, 14-Sep-2023]]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Agent Thread count:-20]]>
    </line>
    <line>
      <![CDATA[Actual Step Units count:-10000]]>
    </line>
    <line>
      <![CDATA[Actual Expiry Date:-14-Sep-2023]]>
    </line>
    <line>
      <![CDATA[License details on Homepage are validated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflows checkbox is clicked]]>
    </line>
    <line>
      <![CDATA[All workflow are selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Holiday Calender Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Holiday Calendar and Expected page title is: Holiday Calendar]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Schedule got disable]]>
    </line>
    <line>
      <![CDATA[Delete schedule button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:For automation deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:For automation deleted successfully]]>
    </line>
    <line>
      <![CDATA[Schedule deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Same plugin jar not uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Category radio button is selected]]>
    </line>
    <line>
      <![CDATA[One Category is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[actual success msg is: Duplicate plugin name [GUI-Automation]]]>
    </line>
    <line>
      <![CDATA[expected success msg is: Duplicate plugin name [GUI-Automation]]]>
    </line>
    <line>
      <![CDATA[Single plugin jar with same version is not uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Single plugin jar of lower version is uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category name is entered which is only mandatory field]]>
    </line>
    <line>
      <![CDATA[Actual Category created message is :Workflow category created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category created message is :Workflow category created successfully]]>
    </line>
    <line>
      <![CDATA[Category created succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Category radio button is selected]]>
    </line>
    <line>
      <![CDATA[One Category is selected]]>
    </line>
    <line>
      <![CDATA[Second Category is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Dashboard button is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard level is already selcted]]>
    </line>
    <line>
      <![CDATA[Dashboard duration Relative selected]]>
    </line>
    <line>
      <![CDATA[Create Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Dashboard created successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard at None level created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Chrome driver is edited successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Chrome driver is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Update Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard is saved successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugins Tab is selected]]>
    </line>
    <line>
      <![CDATA[New Plugin button clicked]]>
    </line>
    <line>
      <![CDATA[Single Plugin Jar started uploading]]>
    </line>
    <line>
      <![CDATA[Single plugin jar uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin Tab is Selected]]>
    </line>
    <line>
      <![CDATA[Plugin Assignment tab is Selected]]>
    </line>
    <line>
      <![CDATA[Save Button is Clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[HexColor of WF Slider:-#ced4da]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Plugin permission is removed so workflow cannot be made inactive]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Update Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard is saved successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Plugin Tab is Selected]]>
    </line>
    <line>
      <![CDATA[Plugin Assignment tab is Selected]]>
    </line>
    <line>
      <![CDATA[Save Button is Clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[HexColor of WF Slider:-#4492d6]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Add report is clicked]]>
    </line>
    <line>
      <![CDATA[Report Type selected successfully]]>
    </line>
    <line>
      <![CDATA[Generate on Worklfows radio button already selected]]>
    </line>
    <line>
      <![CDATA[one workflow is selected]]>
    </line>
    <line>
      <![CDATA[Generate button selected successfully]]>
    </line>
    <line>
      <![CDATA[Report added as a chart]]>
    </line>
    <line>
      <![CDATA[Report saved on screen]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Reports Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Dashboard chosed successfully]]>
    </line>
    <line>
      <![CDATA[Update Button clicked successfully]]>
    </line>
    <line>
      <![CDATA[Dashboard is saved successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Status of Integration service: Stopped and Expected Status of Integration service: table: Stopped]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Agent is in running mode]]>
    </line>
    <line>
      <![CDATA[Restart button is clicked]]>
    </line>
    <line>
      <![CDATA[Confirm Restart Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Restart button is clicked and agent is going in Stopped Status successfully]]>
    </line>
    <line>
      <![CDATA[Current status of Agent after pressing the Restart button is: Running]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Category:-Default]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Category:-WebGUI]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Upload Button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Name is selected]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Actual Filename:- WFWithConfigParam.zip Expected Filename:- WFWithConfigParam.zip]]>
    </line>
    <line>
      <![CDATA[Workflow is uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Submit button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow file is edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[File Management tab is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Workflow file is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Service Name in Integration table: IntService1ForMadhuRani2 and Expected Servicename in Integrationtable: IntService1ForMadhuRani2]]>
    </line>
    <line>
      <![CDATA[Integration service edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual Service Name in Integration table: IntService1ForMadhuRani2 and Expected Servicename in Integrationtable: IntService1ForMadhuRani2]]>
    </line>
    <line>
      <![CDATA[Integration service edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked]]>
    </line>
    <line>
      <![CDATA[Submit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Integration type updated successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked successfully]]>
    </line>
    <line>
      <![CDATA[Integration type is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Process Studio Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Process-studio download started]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Process Studio Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Process studio license is unassigned correctly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual page title displayed on screen is: Process Studio and Expected page title is: Process Studio]]>
    </line>
    <line>
      <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Additional status details is clicked]]>
    </line>
    <line>
      <![CDATA[Message after execution of wf:Error!]]>
    </line>
    <line>
      <![CDATA[Workflow status is:Failure]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Process Studio Tab is clicked]]>
    </line>
    <line>
      <![CDATA[PS download button for Linux is clicked successfully]]>
    </line>
    <line>
      <![CDATA[PS for Linux is downloaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Config Parameter is clicked]]>
    </line>
    <line>
      <![CDATA[Config Parameter is entered]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Agents tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow Assignment tab is clicked]]>
    </line>
    <line>
      <![CDATA[Edit button is selected]]>
    </line>
    <line>
      <![CDATA[Workflow is searched]]>
    </line>
    <line>
      <![CDATA[Required wf is selected]]>
    </line>
    <line>
      <![CDATA[Saved the operation]]>
    </line>
    <line>
      <![CDATA[Assignment confirmed]]>
    </line>
    <line>
      <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
    </line>
    <line>
      <![CDATA[Single workflow is successfully assigned to default agent]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Catalogue Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow whose request needs to be send is selected]]>
    </line>
    <line>
      <![CDATA[Submit request button is clicked]]>
    </line>
    <line>
      <![CDATA[OK button is clicked]]>
    </line>
    <line>
      <![CDATA[Requests Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Repeat time is selcted]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Scheduler tab clicked]]>
    </line>
    <line>
      <![CDATA[Repeat Every checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Submit button clicked]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
    </line>
    <line>
      <![CDATA[Schedule edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User is able to access the application as per his role]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant User]]>
    </line>
    <line>
      <![CDATA[Tenant User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User signed in successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Active button is clicked]]>
    </line>
    <line>
      <![CDATA[Disabled button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Actual Message on screen is: Your account is inaccessible . Please contact your Administrator. and Expected message is: Your account is inaccessible . Please contact your Administrator.]]>
    </line>
    <line>
      <![CDATA[User is disabled so cannot login and appropriate message is been displayed]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Enabled button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User signed in successfully after been Enabled]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[Tenant User created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Active button is clicked]]>
    </line>
    <line>
      <![CDATA[Disabled button is clicked]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Tenant Admin signed in successfully]]>
    </line>
    <line>
      <![CDATA[Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant Users tab is clicked]]>
    </line>
    <line>
      <![CDATA[Delete this user checkbox is selected]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Workflow Admin]]>
    </line>
    <line>
      <![CDATA[Workflow Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Workflow Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Current Tenant Role is Workflow Admin]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Users Tab is Clicked]]>
    </line>
    <line>
      <![CDATA[TenantUsers Tab is Clicked]]>
    </line>
    <line>
      <![CDATA[Edit Button is clicked]]>
    </line>
    <line>
      <![CDATA[Email Id is edited successfully]]>
    </line>
    <line>
      <![CDATA[New Role is edited successfully]]>
    </line>
    <line>
      <![CDATA[Save Button is clicked]]>
    </line>
    <line>
      <![CDATA[Tenant User details got edited.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Actual user type after edit Role:- Tenant UserExpected user type after edit Role:- Tenant User]]>
    </line>
    <line>
      <![CDATA[User is edited successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Activity Monitor]]>
    </line>
    <line>
      <![CDATA[Activity Monitor is created successfully]]>
    </line>
    <line>
      <![CDATA[Activity Monitor created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Activity Monitor role with space in username is created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Agent Admin]]>
    </line>
    <line>
      <![CDATA[Agent Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[Agent Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Agent admin role with Apostrophe in last name is created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[started creating new User Admin]]>
    </line>
    <line>
      <![CDATA[User Admin is created successfully]]>
    </line>
    <line>
      <![CDATA[User Admin created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User admin role with Email id in username is created successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[License Uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[License Uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[License Uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Export as verified checkbox is selected successfully]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Tenant created successfully]]>
    </line>
    <line>
      <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
    </line>
    <line>
      <![CDATA[New Tenant is present in the table-Validated successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[started creating new Tenant]]>
    </line>
    <line>
      <![CDATA[User is created successfully]]>
    </line>
    <line>
      <![CDATA[New user is verified and present in the webtable]]>
    </line>
    <line>
      <![CDATA[User changed first time password of User Successfully]]>
    </line>
    <line>
      <![CDATA[License Uploaded successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[Priority is set]]>
    </line>
    <line>
      <![CDATA[Expected Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Maximum Completion Time in Seconds is set]]>
    </line>
    <line>
      <![CDATA[Cleanup Requests older than Hours fields is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution Time is set]]>
    </line>
    <line>
      <![CDATA[Manual Execution time unit is set]]>
    </line>
    <line>
      <![CDATA[Save button is clicked]]>
    </line>
    <line>
      <![CDATA[Workflow updated]]>
    </line>
    <line>
      <![CDATA[Workflow is enabled successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Clicked the Dropdown button]]>
    </line>
    <line>
      <![CDATA[Clicked the Export option from dropdown]]>
    </line>
    <line>
      <![CDATA[Clicked the Workflows dropdown ]]>
    </line>
    <line>
      <![CDATA[Clicked on search bar]]>
    </line>
    <line>
      <![CDATA[Checked the Workflow name ]]>
    </line>
    <line>
      <![CDATA[Clicked on export bottun]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Workflows Tab is clicked]]>
    </line>
    <line>
      <![CDATA[Import button clicked]]>
    </line>
    <line>
      <![CDATA[Is Assisted Workflow checkbox is unselected]]>
    </line>
    <line>
      <![CDATA[Create Button is clicked]]>
    </line>
    <line>
      <![CDATA[User log in Successfully]]>
    </line>
    <line>
      <![CDATA[Actual success msg is: Integration type [RemedyForce] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected success msg is: Integration type [RemedyForce] deleted successfully]]>
    </line>
    <line>
      <![CDATA[Integration type is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Categories tab clicked]]>
    </line>
    <line>
      <![CDATA[Category from which wf needs to remove is selected]]>
    </line>
    <line>
      <![CDATA[Workflow assigned to category is removed]]>
    </line>
    <line>
      <![CDATA[Actual message is :Workflow removed from this category successfully]]>
    </line>
    <line>
      <![CDATA[Expected message is :Workflow removed from this category successfully]]>
    </line>
    <line>
      <![CDATA[Workflow removed from category succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Agent is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in running mode]]>
    </line>
    <line>
      <![CDATA[Stop Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Confirm Stop Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Actual_Message:-Stopping agent [DELL@DESKTOP-5VHKQUJ] is in progress]]>
    </line>
    <line>
      <![CDATA[Expected Message:- Stopping agent [DELL@DESKTOP-5VHKQUJ] is in progress]]>
    </line>
    <line>
      <![CDATA[Agent is stopped successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Agent is: Running]]>
    </line>
    <line>
      <![CDATA[Agent is in Stopped mode]]>
    </line>
    <line>
      <![CDATA[Delete Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Confirm Delete Button is Clicked]]>
    </line>
    <line>
      <![CDATA[Agent is deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assign To User Tab]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to workflow assignment Tab]]>
    </line>
    <line>
      <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
    </line>
    <line>
      <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
    </line>
    <line>
      <![CDATA[Now User needs to download agent first]]>
    </line>
    <line>
      <![CDATA[User navigated to Agent List Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agent Tab]]>
    </line>
    <line>
      <![CDATA[Assisted Agent download started]]>
    </line>
    <line>
      <![CDATA[File unzipped properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[Current status of Assisted Agent is: Running]]>
    </line>
    <line>
      <![CDATA[Assisted Agent is in running mode]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assign To User Tab]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User searched for functionality: Agents and Found is: Agents]]>
    </line>
    <line>
      <![CDATA[Search Functionality working properly]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assign To User Tab]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User is not assigned to Assisted agent so Agent tab is not visible]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User navigated to Agents Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Agentslist Tab]]>
    </line>
    <line>
      <![CDATA[User navigated to Assisted Agents Tab]]>
    </line>
    <line>
      <![CDATA[User clicked on Edit Btn]]>
    </line>
    <line>
      <![CDATA[Actual message displayed on screen is: Changes saved to the agent and Expected message is: Changes saved to the agent]]>
    </line>
    <line>
      <![CDATA[Edit button is clicked and Assisted agent name is changed successfully]]>
    </line>
    <line>
      <![CDATA[Edited Assisted Agent Name:- DELL@DESKTOP-5VHKQUJ]]>
    </line>
    <line>
      <![CDATA[Agent Name Changed successfully.]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Agent Logs Tab is clicked]]>
    </line>
    <line>
      <![CDATA[New Request button is clicked]]>
    </line>
    <line>
      <![CDATA[agent Radio button is selected by default]]>
    </line>
    <line>
      <![CDATA[Agent is been selected]]>
    </line>
    <line>
      <![CDATA[Start Date selected]]>
    </line>
    <line>
      <![CDATA[End Date selected]]>
    </line>
    <line>
      <![CDATA[Agent log submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Agent logs request submitted successfully]]>
    </line>
    <line>
      <![CDATA[Actual Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Expected Success Msg:Download started]]>
    </line>
    <line>
      <![CDATA[Agents log downloaded successfully for Agent DELL@DESKTOP-5VHKQUJ]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[Delete button is clicked]]>
    </line>
    <line>
      <![CDATA[Confirmed for deletion of Artifact]]>
    </line>
    <line>
      <![CDATA[ Actual message after deletion of artifact: Artifact <Process Studio> deleted successfully]]>
    </line>
    <line>
      <![CDATA[Artifact deleted successfully]]>
    </line>
    <line>
      <![CDATA[User LogIn Succesfully]]>
    </line>
    <line>
      <![CDATA[Category  tab clicked]]>
    </line>
    <line>
      <![CDATA[Actual Category deleted message is :Workflow category deleted successfully]]>
    </line>
    <line>
      <![CDATA[Expected Category deleted message is :Workflow category deleted successfully]]>
    </line>
    <line>
      <![CDATA[Category Deleted succesfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
    <line>
      <![CDATA[User logged in successfully]]>
    </line>
    <line>
      <![CDATA[Settings tab clicked]]>
    </line>
    <line>
      <![CDATA[SMTP tab clicked]]>
    </line>
    <line>
      <![CDATA[Delete button clicked]]>
    </line>
    <line>
      <![CDATA[Confirmation popup agree for deletion]]>
    </line>
    <line>
      <![CDATA[Smtp Configuration details deleted successfully]]>
    </line>
    <line>
      <![CDATA[User signed out successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2023-04-29T14:26:34 IST" name="TestSuite" finished-at="2023-04-29T19:10:00 IST" duration-ms="17005736">
    <groups>
    </groups>
    <test started-at="2023-04-29T14:26:34 IST" name="AESanity" finished-at="2023-04-29T19:10:00 IST" duration-ms="17005736">
      <class name="com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T16:45:17 IST" name="initialization" finished-at="2023-04-29T16:45:24 IST" duration-ms="6781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateFileManagementPageTATest(java.lang.reflect.Method)[pri:198, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T16:45:24 IST" name="validateFileManagementPageTATest" finished-at="2023-04-29T16:45:41 IST" duration-ms="17411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateFileManagementPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Workflow Files and Expected page title is: Workflow Files]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateFileManagementPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T16:45:41 IST" name="getResult" finished-at="2023-04-29T16:45:43 IST" duration-ms="2244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFileManagementPageTATest status=SUCCESS method=FileManagementPageTestTA.validateFileManagementPageTATest(java.lang.reflect.Method)[pri:198, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:50:22 IST" name="initialization" finished-at="2023-04-29T17:50:27 IST" duration-ms="5452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1026, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:50:27 IST" name="validateUploadWFFileManagementTest" finished-at="2023-04-29T17:50:58 IST" duration-ms="30424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateUploadWFFileManagementTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Upload Button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Name is selected]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Filename:- WFWithConfigParam.zip Expected Filename:- WFWithConfigParam.zip]]>
            </line>
            <line>
              <![CDATA[Workflow is uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadWFFileManagementTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:50:58 IST" name="getResult" finished-at="2023-04-29T17:50:58 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadWFFileManagementTest status=SUCCESS method=FileManagementPageTestTA.validateUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1026, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:50:58 IST" name="initialization" finished-at="2023-04-29T17:51:05 IST" duration-ms="6357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditWFFileManagementTest(java.lang.reflect.Method)[pri:1027, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:51:05 IST" name="validateEditWFFileManagementTest" finished-at="2023-04-29T17:51:31 IST" duration-ms="25916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateEditWFFileManagementTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow file is edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditWFFileManagementTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:51:31 IST" name="getResult" finished-at="2023-04-29T17:51:32 IST" duration-ms="1330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditWFFileManagementTest status=SUCCESS method=FileManagementPageTestTA.validateEditWFFileManagementTest(java.lang.reflect.Method)[pri:1027, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:51:32 IST" name="initialization" finished-at="2023-04-29T17:51:38 IST" duration-ms="5975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1028, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:51:38 IST" name="validateDeleteUploadWFFileManagementTest" finished-at="2023-04-29T17:51:59 IST" duration-ms="20886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA.validateDeleteUploadWFFileManagementTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Workflow file is deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteUploadWFFileManagementTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481]" started-at="2023-04-29T17:51:59 IST" name="getResult" finished-at="2023-04-29T17:51:59 IST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteUploadWFFileManagementTest status=SUCCESS method=FileManagementPageTestTA.validateDeleteUploadWFFileManagementTest(java.lang.reflect.Method)[pri:1028, instance:com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA@31d0e481] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.FileManagementPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:06:20 IST" name="initialization" finished-at="2023-04-29T16:06:23 IST" duration-ms="3724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePswdComplexityTATest(java.lang.reflect.Method)[pri:120, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:06:23 IST" name="validatePswdComplexityTATest" finished-at="2023-04-29T16:07:03 IST" duration-ms="39610" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validatePswdComplexityTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Clicked save button now validate the password complexity at confirm policy popup]]>
            </line>
            <line>
              <![CDATA[Expected Arraylist is:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&, Password length should be between 6-19]]]>
            </line>
            <line>
              <![CDATA[Values in arrayList Before:[At least 1 uppercase letter(s), At least 1 lowercase letter(s), At least 1 digit(s), At least 1 special character(s) out of @#$_!&]]]>
            </line>
            <line>
              <![CDATA[Validation done as Password complexity match while changing password]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePswdComplexityTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:07:03 IST" name="getResult" finished-at="2023-04-29T16:07:03 IST" duration-ms="207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePswdComplexityTATest status=SUCCESS method=TenantPolicyPageTestTA.validatePswdComplexityTATest(java.lang.reflect.Method)[pri:120, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d] output=Settings tab clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:07:03 IST" name="initialization" finished-at="2023-04-29T16:07:07 IST" duration-ms="4131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePasswordHistoryTATest(java.lang.reflect.Method)[pri:121, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:07:07 IST" name="validatePasswordHistoryTATest" finished-at="2023-04-29T16:08:21 IST" duration-ms="73719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validatePasswordHistoryTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[Password policy updated]]>
            </line>
            <line>
              <![CDATA[Password History of sysadmin validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePasswordHistoryTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:08:21 IST" name="getResult" finished-at="2023-04-29T16:08:21 IST" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordHistoryTATest status=SUCCESS method=TenantPolicyPageTestTA.validatePasswordHistoryTATest(java.lang.reflect.Method)[pri:121, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:08:21 IST" name="initialization" finished-at="2023-04-29T16:08:25 IST" duration-ms="3738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateNoOfAttemptsTATest(java.lang.reflect.Method)[pri:122, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:08:25 IST" name="validateNoOfAttemptsTATest" finished-at="2023-04-29T16:10:34 IST" duration-ms="129182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA.validateNoOfAttemptsTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Save button clicked & Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
            </line>
            <line>
              <![CDATA[No.of wrong attempts actually set is:4 No.of attempts set by user is:4]]>
            </line>
            <line>
              <![CDATA[Ok button clicked in confirm policy popup]]>
            </line>
            <line>
              <![CDATA[Actual Message after password policy update:Password policy updated successfully]]>
            </line>
            <line>
              <![CDATA[Expected Message after password policy update:Password policy updated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Actual_msg:Your account is inaccessible . Please contact your Administrator.]]>
            </line>
            <line>
              <![CDATA[Expected_msg:Your account is inaccessible . Please contact your Administrator.]]>
            </line>
            <line>
              <![CDATA[No. of attempts is validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateNoOfAttemptsTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d]" started-at="2023-04-29T16:10:34 IST" name="getResult" finished-at="2023-04-29T16:10:34 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNoOfAttemptsTATest status=SUCCESS method=TenantPolicyPageTestTA.validateNoOfAttemptsTATest(java.lang.reflect.Method)[pri:122, instance:com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA@112f364d] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.TenantPolicyPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T16:04:58 IST" name="initialization" finished-at="2023-04-29T16:05:03 IST" duration-ms="4010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddSmtpServerTATest(java.lang.reflect.Method)[pri:118, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T16:05:03 IST" name="validateAddSmtpServerTATest" finished-at="2023-04-29T16:05:45 IST" duration-ms="42895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateAddSmtpServerTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[SMTP tab clicked]]>
            </line>
            <line>
              <![CDATA[Add smtp config button clicked]]>
            </line>
            <line>
              <![CDATA[Tested connection successfully]]>
            </line>
            <line>
              <![CDATA[Smtp configured successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddSmtpServerTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T16:05:45 IST" name="getResult" finished-at="2023-04-29T16:05:46 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddSmtpServerTATest status=SUCCESS method=SmtpPageTestTA.validateAddSmtpServerTATest(java.lang.reflect.Method)[pri:118, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T16:05:46 IST" name="initialization" finished-at="2023-04-29T16:05:50 IST" duration-ms="3793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditSmtpServerTATest(java.lang.reflect.Method)[pri:119, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T16:05:50 IST" name="validateEditSmtpServerTATest" finished-at="2023-04-29T16:06:19 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateAddSmtpServerTATest" duration-ms="29835" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateEditSmtpServerTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[SMTP tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit button clicked]]>
            </line>
            <line>
              <![CDATA[Tested connection successfully]]>
            </line>
            <line>
              <![CDATA[Smtp edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditSmtpServerTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T16:06:19 IST" name="getResult" finished-at="2023-04-29T16:06:20 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditSmtpServerTATest status=SUCCESS method=SmtpPageTestTA.validateEditSmtpServerTATest(java.lang.reflect.Method)[pri:119, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T19:09:29 IST" name="initialization" finished-at="2023-04-29T19:09:35 IST" duration-ms="5731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteSmtpServerTATest(java.lang.reflect.Method)[pri:2500, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T19:09:35 IST" name="validateDeleteSmtpServerTATest" finished-at="2023-04-29T19:09:53 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateAddSmtpServerTATest" duration-ms="17903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA.validateDeleteSmtpServerTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[SMTP tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button clicked]]>
            </line>
            <line>
              <![CDATA[Confirmation popup agree for deletion]]>
            </line>
            <line>
              <![CDATA[Smtp Configuration details deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteSmtpServerTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0]" started-at="2023-04-29T19:09:53 IST" name="getResult" finished-at="2023-04-29T19:09:53 IST" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteSmtpServerTATest status=SUCCESS method=SmtpPageTestTA.validateDeleteSmtpServerTATest(java.lang.reflect.Method)[pri:2500, instance:com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA@362045c0] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.SmtpPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T15:42:05 IST" name="initialization" finished-at="2023-04-29T15:42:13 IST" duration-ms="8359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentLogsTest(java.lang.reflect.Method)[pri:95, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T15:42:13 IST" name="validateAgentLogsTest" finished-at="2023-04-29T15:43:19 IST" duration-ms="65123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateAgentLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Agent Logs Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Request button is clicked]]>
            </line>
            <line>
              <![CDATA[agent Radio button is selected by default]]>
            </line>
            <line>
              <![CDATA[Agent is been selected]]>
            </line>
            <line>
              <![CDATA[Start Date selected]]>
            </line>
            <line>
              <![CDATA[End Date selected]]>
            </line>
            <line>
              <![CDATA[Agent log submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Agent logs request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Agents log downloaded successfully for Agent DELL@DESKTOP-5VHKQUJ]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T15:43:19 IST" name="getResult" finished-at="2023-04-29T15:43:19 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentLogsTest status=SUCCESS method=AgentLogsPageTestTA.validateAgentLogsTest(java.lang.reflect.Method)[pri:95, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T15:43:19 IST" name="initialization" finished-at="2023-04-29T15:43:28 IST" duration-ms="8885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWorkflowLogsTest(java.lang.reflect.Method)[pri:96, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T15:43:28 IST" name="validateWorkflowLogsTest" finished-at="2023-04-29T15:44:03 IST" duration-ms="34863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateWorkflowLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Agent Logs Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Request button is clicked]]>
            </line>
            <line>
              <![CDATA[Request Radio Button is selected]]>
            </line>
            <line>
              <![CDATA[Request ID entered.]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Workflow logs request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Workflow log downloaded successfully for Workflow InstanceID 1]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWorkflowLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T15:44:03 IST" name="getResult" finished-at="2023-04-29T15:44:03 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWorkflowLogsTest status=SUCCESS method=AgentLogsPageTestTA.validateWorkflowLogsTest(java.lang.reflect.Method)[pri:96, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T16:43:56 IST" name="initialization" finished-at="2023-04-29T16:44:05 IST" duration-ms="9174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentLogsPageTATest(java.lang.reflect.Method)[pri:184, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T16:44:05 IST" name="validateAgentLogsPageTATest" finished-at="2023-04-29T16:44:24 IST" duration-ms="19133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateAgentLogsPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Agent Logs and Expected page title is: Agent Logs]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentLogsPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T16:44:24 IST" name="getResult" finished-at="2023-04-29T16:44:25 IST" duration-ms="465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentLogsPageTATest status=SUCCESS method=AgentLogsPageTestTA.validateAgentLogsPageTATest(java.lang.reflect.Method)[pri:184, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T19:07:03 IST" name="initialization" finished-at="2023-04-29T19:07:09 IST" duration-ms="6238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssistedAgentLogsTest(java.lang.reflect.Method)[pri:2008, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T19:07:09 IST" name="validateAssistedAgentLogsTest" finished-at="2023-04-29T19:08:15 IST" duration-ms="66238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA.validateAssistedAgentLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Agent Logs Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Request button is clicked]]>
            </line>
            <line>
              <![CDATA[agent Radio button is selected by default]]>
            </line>
            <line>
              <![CDATA[Agent is been selected]]>
            </line>
            <line>
              <![CDATA[Start Date selected]]>
            </line>
            <line>
              <![CDATA[End Date selected]]>
            </line>
            <line>
              <![CDATA[Agent log submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Agent logs request submitted successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Download started]]>
            </line>
            <line>
              <![CDATA[Agents log downloaded successfully for Agent DELL@DESKTOP-5VHKQUJ]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssistedAgentLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1]" started-at="2023-04-29T19:08:15 IST" name="getResult" finished-at="2023-04-29T19:08:15 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssistedAgentLogsTest status=SUCCESS method=AgentLogsPageTestTA.validateAssistedAgentLogsTest(java.lang.reflect.Method)[pri:2008, instance:com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA@5f9678e1] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.AgentLogsPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:44:03 IST" name="initialization" finished-at="2023-04-29T15:44:12 IST" duration-ms="8723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDashboardNoneTest(java.lang.reflect.Method)[pri:97, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:44:12 IST" name="validateDashboardNoneTest" finished-at="2023-04-29T15:44:45 IST" duration-ms="33170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardNoneTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration None selected]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at None level created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDashboardNoneTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:44:45 IST" name="getResult" finished-at="2023-04-29T15:44:46 IST" duration-ms="547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDashboardNoneTest status=SUCCESS method=DashboardsPageTestTA.validateDashboardNoneTest(java.lang.reflect.Method)[pri:97, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:49:44 IST" name="initialization" finished-at="2023-04-29T15:50:04 IST" duration-ms="20521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportNoneMultipleWFTest(java.lang.reflect.Method)[pri:104, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:50:04 IST" name="validateReportNoneMultipleWFTest" finished-at="2023-04-29T15:51:21 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardNoneTest" duration-ms="76855" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleWFTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Workflow Execution Summary KG] but found [Workflow Execution Summary KG (Time Unit: Seconds)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Workflow Execution Summary KG] but found [Workflow Execution Summary KG (Time Unit: Seconds)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportNoneMultipleWF(DashboardsPageTA.java:423)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleWFTest(DashboardsPageTestTA.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Second workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportNoneMultipleWFTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:51:21 IST" name="getResult" finished-at="2023-04-29T15:51:22 IST" duration-ms="834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportNoneMultipleWFTest status=FAILURE method=DashboardsPageTestTA.validateReportNoneMultipleWFTest(java.lang.reflect.Method)[pri:104, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:51:22 IST" name="initialization" finished-at="2023-04-29T15:51:35 IST" duration-ms="12651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDashboardTodayTest(java.lang.reflect.Method)[pri:105, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:51:35 IST" name="validateDashboardTodayTest" finished-at="2023-04-29T15:55:00 IST" duration-ms="205370" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardTodayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (1447a7455720379212c722b1792a82de)] -> xpath: //div/p[@class='alert-message-text']] (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (1447a7455720379212c722b1792a82de)] -> xpath: //div/p[@class='alert-message-text']] (tried for 120 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateDashboardToday(DashboardsPageTA.java:214)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardTodayTest(DashboardsPageTestTA.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div/p[@class='alert-message-text']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50965}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1447a7455720379212c722b1792a82de
*** Element info: {Using=xpath, value=//div/p[@class='alert-message-text']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Today selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDashboardTodayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:55:00 IST" name="getResult" finished-at="2023-04-29T15:55:00 IST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDashboardTodayTest status=FAILURE method=DashboardsPageTestTA.validateDashboardTodayTest(java.lang.reflect.Method)[pri:105, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:55:00 IST" name="initialization" finished-at="2023-04-29T15:55:05 IST" duration-ms="5031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportTodayTest(java.lang.reflect.Method)[pri:106, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:55:05 IST" name="validateReportTodayTest" finished-at="2023-04-29T15:56:04 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardTodayTest" duration-ms="58377" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportTodayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Workflow Executed time Report KG] but found [Workflow Executed time Report KG ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Workflow Executed time Report KG] but found [Workflow Executed time Report KG ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportToday(DashboardsPageTA.java:531)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportTodayTest(DashboardsPageTestTA.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportTodayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:56:04 IST" name="getResult" finished-at="2023-04-29T15:56:04 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportTodayTest status=FAILURE method=DashboardsPageTestTA.validateReportTodayTest(java.lang.reflect.Method)[pri:106, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:56:04 IST" name="initialization" finished-at="2023-04-29T15:56:09 IST" duration-ms="5312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDashboarRelativeTest(java.lang.reflect.Method)[pri:107, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:56:09 IST" name="validateDashboarRelativeTest" finished-at="2023-04-29T15:56:53 IST" duration-ms="43444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboarRelativeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Relative selected]]>
            </line>
            <line>
              <![CDATA[Create Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at None level created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDashboarRelativeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:56:53 IST" name="getResult" finished-at="2023-04-29T15:56:53 IST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDashboarRelativeTest status=SUCCESS method=DashboardsPageTestTA.validateDashboarRelativeTest(java.lang.reflect.Method)[pri:107, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:56:53 IST" name="initialization" finished-at="2023-04-29T15:56:57 IST" duration-ms="4024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportRelativeTest(java.lang.reflect.Method)[pri:108, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:56:57 IST" name="validateReportRelativeTest" finished-at="2023-04-29T15:57:55 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboarRelativeTest" duration-ms="57747" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportRelativeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Relative ReportKG] but found [Relative ReportKG ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Relative ReportKG] but found [Relative ReportKG ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportRelative(DashboardsPageTA.java:547)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportRelativeTest(DashboardsPageTestTA.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportRelativeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:57:55 IST" name="getResult" finished-at="2023-04-29T15:57:55 IST" duration-ms="442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportRelativeTest status=FAILURE method=DashboardsPageTestTA.validateReportRelativeTest(java.lang.reflect.Method)[pri:108, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:57:55 IST" name="initialization" finished-at="2023-04-29T15:57:59 IST" duration-ms="3972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardToCustomTest(java.lang.reflect.Method)[pri:109, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:57:59 IST" name="validateEditDashboardToCustomTest" finished-at="2023-04-29T15:59:07 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboarRelativeTest" duration-ms="67190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardToCustomTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Edit report is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Custom selected]]>
            </line>
            <line>
              <![CDATA[Update Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard Saved Successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard Saved Successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at Custom level updated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDashboardToCustomTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:59:07 IST" name="getResult" finished-at="2023-04-29T15:59:07 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDashboardToCustomTest status=SUCCESS method=DashboardsPageTestTA.validateEditDashboardToCustomTest(java.lang.reflect.Method)[pri:109, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:59:07 IST" name="initialization" finished-at="2023-04-29T15:59:11 IST" duration-ms="4464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportCustomTest(java.lang.reflect.Method)[pri:110, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T15:59:11 IST" name="validateReportCustomTest" finished-at="2023-04-29T16:00:09 IST" duration-ms="58012" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportCustomTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Custom Report KG] but found [Custom Report KG (Time Unit: Minutes)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Custom Report KG] but found [Custom Report KG (Time Unit: Minutes)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportCustom(DashboardsPageTA.java:644)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportCustomTest(DashboardsPageTestTA.java:224)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a Table]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportCustomTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:00:09 IST" name="getResult" finished-at="2023-04-29T16:00:10 IST" duration-ms="524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportCustomTest status=FAILURE method=DashboardsPageTestTA.validateReportCustomTest(java.lang.reflect.Method)[pri:110, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:00:10 IST" name="initialization" finished-at="2023-04-29T16:00:14 IST" duration-ms="4276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSetAsDefaultReportTest(java.lang.reflect.Method)[pri:111, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:00:14 IST" name="validateSetAsDefaultReportTest" finished-at="2023-04-29T16:00:37 IST" duration-ms="22876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateSetAsDefaultReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Set as Default option clicked]]>
            </line>
            <line>
              <![CDATA[Report set as a default successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSetAsDefaultReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:00:37 IST" name="getResult" finished-at="2023-04-29T16:00:37 IST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSetAsDefaultReportTest status=SUCCESS method=DashboardsPageTestTA.validateSetAsDefaultReportTest(java.lang.reflect.Method)[pri:111, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:00:37 IST" name="initialization" finished-at="2023-04-29T16:00:41 IST" duration-ms="4237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePinToHomeTest(java.lang.reflect.Method)[pri:112, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:00:41 IST" name="validatePinToHomeTest" finished-at="2023-04-29T16:01:02 IST" duration-ms="21012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validatePinToHomeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Pin to Home option clicked]]>
            </line>
            <line>
              <![CDATA[After Pin to Home actual message get is: Dashboard [DashboardCustom] set as home dashboard]]>
            </line>
            <line>
              <![CDATA[Report set as a default successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePinToHomeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:01:02 IST" name="getResult" finished-at="2023-04-29T16:01:02 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePinToHomeTest status=SUCCESS method=DashboardsPageTestTA.validatePinToHomeTest(java.lang.reflect.Method)[pri:112, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:01:02 IST" name="initialization" finished-at="2023-04-29T16:01:07 IST" duration-ms="4838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateMakePublicTest(java.lang.reflect.Method)[pri:113, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:01:07 IST" name="validateMakePublicTest" finished-at="2023-04-29T16:01:29 IST" duration-ms="21301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateMakePublicTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Make Public option clicked]]>
            </line>
            <line>
              <![CDATA[After making dashboard public actual message get is: Dashboard [DashboardCustom], Access Level set to Public]]>
            </line>
            <line>
              <![CDATA[Dashboard made as public successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateMakePublicTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:01:29 IST" name="getResult" finished-at="2023-04-29T16:01:29 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMakePublicTest status=SUCCESS method=DashboardsPageTestTA.validateMakePublicTest(java.lang.reflect.Method)[pri:113, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:01:29 IST" name="initialization" finished-at="2023-04-29T16:01:35 IST" duration-ms="6010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteDashboardWithReportTest(java.lang.reflect.Method)[pri:114, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:01:35 IST" name="validateDeleteDashboardWithReportTest" finished-at="2023-04-29T16:02:00 IST" duration-ms="24757" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDeleteDashboardWithReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Delete Dashboard option clicked]]>
            </line>
            <line>
              <![CDATA[Delete button clicked on popup]]>
            </line>
            <line>
              <![CDATA[After deleting dashboard with report, actual message get is: Dashboard Deleted successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard with report deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteDashboardWithReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:02:00 IST" name="getResult" finished-at="2023-04-29T16:02:00 IST" duration-ms="421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteDashboardWithReportTest status=SUCCESS method=DashboardsPageTestTA.validateDeleteDashboardWithReportTest(java.lang.reflect.Method)[pri:114, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:02:00 IST" name="initialization" finished-at="2023-04-29T16:02:04 IST" duration-ms="4036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteDashboardWithoutReportTest(java.lang.reflect.Method)[pri:115, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:02:04 IST" name="validateDeleteDashboardWithoutReportTest" finished-at="2023-04-29T16:02:35 IST" duration-ms="30682" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDeleteDashboardWithoutReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Dashboard not created expected [Dashboard created successfully] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Dashboard not created expected [Dashboard created successfully] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateDeleteDashboardWithoutReport(DashboardsPageTA.java:756)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDeleteDashboardWithoutReportTest(DashboardsPageTestTA.java:270)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration None selected]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteDashboardWithoutReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:02:35 IST" name="getResult" finished-at="2023-04-29T16:02:35 IST" duration-ms="578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteDashboardWithoutReportTest status=FAILURE method=DashboardsPageTestTA.validateDeleteDashboardWithoutReportTest(java.lang.reflect.Method)[pri:115, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:52:41 IST" name="initialization" finished-at="2023-04-29T16:52:54 IST" duration-ms="12704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateLabelChangeInReportTest(java.lang.reflect.Method)[pri:320, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:52:54 IST" name="ValidateLabelChangeInReportTest" finished-at="2023-04-29T16:54:09 IST" duration-ms="74922" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateLabelChangeInReportTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='Maximize']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54298}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f7731190ca04fcac0365e96597c9bd00
*** Element info: {Using=xpath, value=//div[@title='Maximize']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='Maximize']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54298}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f7731190ca04fcac0365e96597c9bd00
*** Element info: {Using=xpath, value=//div[@title='Maximize']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateLabelChangeInReport(DashboardsPageTA.java:794)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateLabelChangeInReportTest(DashboardsPageTestTA.java:280)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateLabelChangeInReportTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:54:09 IST" name="getResult" finished-at="2023-04-29T16:54:09 IST" duration-ms="536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateLabelChangeInReportTest status=FAILURE method=DashboardsPageTestTA.ValidateLabelChangeInReportTest(java.lang.reflect.Method)[pri:320, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:54:10 IST" name="initialization" finished-at="2023-04-29T16:54:23 IST" duration-ms="12802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDownloadReportPdfTest(java.lang.reflect.Method)[pri:321, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:54:23 IST" name="ValidateDownloadReportPdfTest" finished-at="2023-04-29T16:55:35 IST" duration-ms="72854" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateDownloadReportPdfTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='Download as PDF']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54356}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ec97d6132772a44372ecb4f1593848ce
*** Element info: {Using=xpath, value=//div[@title='Download as PDF']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='Download as PDF']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54356}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ec97d6132772a44372ecb4f1593848ce
*** Element info: {Using=xpath, value=//div[@title='Download as PDF']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateDownloadReportPdf(DashboardsPageTA.java:835)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.ValidateDownloadReportPdfTest(DashboardsPageTestTA.java:289)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDownloadReportPdfTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:55:35 IST" name="getResult" finished-at="2023-04-29T16:55:36 IST" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDownloadReportPdfTest status=FAILURE method=DashboardsPageTestTA.ValidateDownloadReportPdfTest(java.lang.reflect.Method)[pri:321, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:55:36 IST" name="initialization" finished-at="2023-04-29T16:55:49 IST" duration-ms="13309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateColumnHideTest(java.lang.reflect.Method)[pri:336, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:55:49 IST" name="validateColumnHideTest" finished-at="2023-04-29T16:56:27 IST" duration-ms="38021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateColumnHideTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Workflow Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Submitted By]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Created Time]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Execution Start Time]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Completed Time]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateColumnHideTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:56:27 IST" name="getResult" finished-at="2023-04-29T16:56:27 IST" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateColumnHideTest status=SUCCESS method=DashboardsPageTestTA.validateColumnHideTest(java.lang.reflect.Method)[pri:336, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:58:52 IST" name="initialization" finished-at="2023-04-29T16:59:12 IST" duration-ms="19779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateFullScreenModeTest(java.lang.reflect.Method)[pri:590, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:59:12 IST" name="validateFullScreenModeTest" finished-at="2023-04-29T16:59:34 IST" duration-ms="22025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateFullScreenModeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateFullScreenModeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T16:59:34 IST" name="getResult" finished-at="2023-04-29T16:59:36 IST" duration-ms="1394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFullScreenModeTest status=SUCCESS method=DashboardsPageTestTA.validateFullScreenModeTest(java.lang.reflect.Method)[pri:590, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:24:58 IST" name="initialization" finished-at="2023-04-29T17:25:18 IST" duration-ms="19796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportNoneSingleWFTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:25:18 IST" name="validateReportNoneSingleWFTest" finished-at="2023-04-29T17:26:26 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateDashboardNoneTest" duration-ms="67460" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneSingleWFTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Dashboard None Report For Single WF] but found [Dashboard None Report For Single WF (Time Unit: Seconds)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Dashboard None Report For Single WF] but found [Dashboard None Report For Single WF (Time Unit: Seconds)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportNoneSingleWF(DashboardsPageTA.java:442)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneSingleWFTest(DashboardsPageTestTA.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportNoneSingleWFTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:26:26 IST" name="getResult" finished-at="2023-04-29T17:26:31 IST" duration-ms="5389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportNoneSingleWFTest status=FAILURE method=DashboardsPageTestTA.validateReportNoneSingleWFTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:28:13 IST" name="initialization" finished-at="2023-04-29T17:28:40 IST" duration-ms="26919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportNoneSingleCategoryTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:28:40 IST" name="validateReportNoneSingleCategoryTest" finished-at="2023-04-29T17:29:53 IST" duration-ms="72878" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneSingleCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Dashboard None Report For Single Category] but found [Dashboard None Report For Single Category (Time Unit: Seconds)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Dashboard None Report For Single Category] but found [Dashboard None Report For Single Category (Time Unit: Seconds)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportNoneSingleCategory(DashboardsPageTA.java:461)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneSingleCategoryTest(DashboardsPageTestTA.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Category radio button is selected]]>
            </line>
            <line>
              <![CDATA[One Category is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportNoneSingleCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:29:53 IST" name="getResult" finished-at="2023-04-29T17:29:54 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportNoneSingleCategoryTest status=FAILURE method=DashboardsPageTestTA.validateReportNoneSingleCategoryTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:31:29 IST" name="initialization" finished-at="2023-04-29T17:31:43 IST" duration-ms="13509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateReportNoneMultipleCategoryTest(java.lang.reflect.Method)[pri:1003, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:31:43 IST" name="validateReportNoneMultipleCategoryTest" finished-at="2023-04-29T17:33:39 IST" duration-ms="115634" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Agent-wise Workflow Average Execution Time] but found [Agent-wise Workflow Average Execution Time (Time Unit: Seconds)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Agent-wise Workflow Average Execution Time] but found [Agent-wise Workflow Average Execution Time (Time Unit: Seconds)]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateReportNoneMultipleCategory(DashboardsPageTA.java:492)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateReportNoneMultipleCategoryTest(DashboardsPageTestTA.java:82)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category name is entered which is only mandatory field]]>
            </line>
            <line>
              <![CDATA[Actual Category created message is :Workflow category created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category created message is :Workflow category created successfully]]>
            </line>
            <line>
              <![CDATA[Category created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Category radio button is selected]]>
            </line>
            <line>
              <![CDATA[One Category is selected]]>
            </line>
            <line>
              <![CDATA[Second Category is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateReportNoneMultipleCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:33:39 IST" name="getResult" finished-at="2023-04-29T17:33:39 IST" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateReportNoneMultipleCategoryTest status=FAILURE method=DashboardsPageTestTA.validateReportNoneMultipleCategoryTest(java.lang.reflect.Method)[pri:1003, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:33:39 IST" name="initialization" finished-at="2023-04-29T17:33:54 IST" duration-ms="14797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardRelativeDurationHourTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:33:54 IST" name="validateEditDashboardRelativeDurationHourTest" finished-at="2023-04-29T17:34:43 IST" duration-ms="48691" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationHourTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:56273}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e1c6441046215af166bd9931f8c750cc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:56273}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e1c6441046215af166bd9931f8c750cc
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.editRelativeDashboard(DashboardsPageTA.java:250)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateEditDashboardRelativeDurationHour(DashboardsPageTA.java:299)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationHourTest(DashboardsPageTestTA.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[New Dashboard button is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard level is already selcted]]>
            </line>
            <line>
              <![CDATA[Dashboard duration Relative selected]]>
            </line>
            <line>
              <![CDATA[Create Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Dashboard created successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard at None level created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationHourTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:34:43 IST" name="getResult" finished-at="2023-04-29T17:34:43 IST" duration-ms="737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDashboardRelativeDurationHourTest status=FAILURE method=DashboardsPageTestTA.validateEditDashboardRelativeDurationHourTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:36:19 IST" name="initialization" finished-at="2023-04-29T17:36:25 IST" duration-ms="6662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRelativeReportDurationHourTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:36:25 IST" name="validateRelativeReportDurationHourTest" finished-at="2023-04-29T17:37:28 IST" duration-ms="63254" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationHourTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Dashboard Relative Report for Duration hour] but found [Dashboard Relative Report for Duration hour ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Dashboard Relative Report for Duration hour] but found [Dashboard Relative Report for Duration hour ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.addRelativeReport(DashboardsPageTA.java:294)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateRelativeReportDurationHour(DashboardsPageTA.java:304)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationHourTest(DashboardsPageTestTA.java:146)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRelativeReportDurationHourTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:37:28 IST" name="getResult" finished-at="2023-04-29T17:37:30 IST" duration-ms="1236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRelativeReportDurationHourTest status=FAILURE method=DashboardsPageTestTA.validateRelativeReportDurationHourTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:37:30 IST" name="initialization" finished-at="2023-04-29T17:37:51 IST" duration-ms="20999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardRelativeDurationDayTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:37:51 IST" name="validateEditDashboardRelativeDurationDayTest" finished-at="2023-04-29T17:38:24 IST" duration-ms="33487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationDayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Update Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard is saved successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationDayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:38:24 IST" name="getResult" finished-at="2023-04-29T17:38:27 IST" duration-ms="2530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDashboardRelativeDurationDayTest status=SUCCESS method=DashboardsPageTestTA.validateEditDashboardRelativeDurationDayTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:41:23 IST" name="initialization" finished-at="2023-04-29T17:41:37 IST" duration-ms="14226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRelativeReportDurationDayTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:41:37 IST" name="validateRelativeReportDurationDayTest" finished-at="2023-04-29T17:42:41 IST" duration-ms="63472" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationDayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Dashboard Relative Report for Duration day] but found [Dashboard Relative Report for Duration day ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Dashboard Relative Report for Duration day] but found [Dashboard Relative Report for Duration day ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.addRelativeReport(DashboardsPageTA.java:294)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateRelativeReportDurationDay(DashboardsPageTA.java:312)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationDayTest(DashboardsPageTestTA.java:165)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRelativeReportDurationDayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:42:41 IST" name="getResult" finished-at="2023-04-29T17:42:41 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRelativeReportDurationDayTest status=FAILURE method=DashboardsPageTestTA.validateRelativeReportDurationDayTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:43:11 IST" name="initialization" finished-at="2023-04-29T17:43:18 IST" duration-ms="6433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardRelativeDurationMonthTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:43:18 IST" name="validateEditDashboardRelativeDurationMonthTest" finished-at="2023-04-29T17:43:49 IST" duration-ms="31840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationMonthTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Update Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard is saved successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationMonthTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:43:49 IST" name="getResult" finished-at="2023-04-29T17:43:50 IST" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDashboardRelativeDurationMonthTest status=SUCCESS method=DashboardsPageTestTA.validateEditDashboardRelativeDurationMonthTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:44:48 IST" name="initialization" finished-at="2023-04-29T17:44:54 IST" duration-ms="5635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRelativeReportDurationMonthTest(java.lang.reflect.Method)[pri:1009, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:44:54 IST" name="validateRelativeReportDurationMonthTest" finished-at="2023-04-29T17:45:58 IST" duration-ms="64129" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationMonthTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Report doesn't displayed on screen successfully expected [Dashboard Relative Report for Duration Month] but found [Dashboard Relative Report for Duration Month ()]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Report doesn't displayed on screen successfully expected [Dashboard Relative Report for Duration Month] but found [Dashboard Relative Report for Duration Month ()]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.createdReportValidation(DashboardsPageTA.java:513)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.addRelativeReport(DashboardsPageTA.java:294)
at com.ae.qa.pagesTenantAdmin.DashboardsPageTA.validateRelativeReportDurationMonth(DashboardsPageTA.java:320)
at com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateRelativeReportDurationMonthTest(DashboardsPageTestTA.java:184)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Add report is clicked]]>
            </line>
            <line>
              <![CDATA[Report Type selected successfully]]>
            </line>
            <line>
              <![CDATA[Generate on Worklfows radio button already selected]]>
            </line>
            <line>
              <![CDATA[one workflow is selected]]>
            </line>
            <line>
              <![CDATA[Generate button selected successfully]]>
            </line>
            <line>
              <![CDATA[Report added as a chart]]>
            </line>
            <line>
              <![CDATA[Report saved on screen]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRelativeReportDurationMonthTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:45:58 IST" name="getResult" finished-at="2023-04-29T17:45:58 IST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRelativeReportDurationMonthTest status=FAILURE method=DashboardsPageTestTA.validateRelativeReportDurationMonthTest(java.lang.reflect.Method)[pri:1009, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:45:58 IST" name="initialization" finished-at="2023-04-29T17:46:05 IST" duration-ms="6972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDashboardRelativeDurationYearTest(java.lang.reflect.Method)[pri:1010, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:46:05 IST" name="validateEditDashboardRelativeDurationYearTest" finished-at="2023-04-29T17:46:38 IST" duration-ms="32768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA.validateEditDashboardRelativeDurationYearTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Reports Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dashboard chosed successfully]]>
            </line>
            <line>
              <![CDATA[Update Button clicked successfully]]>
            </line>
            <line>
              <![CDATA[Dashboard is saved successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDashboardRelativeDurationYearTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84]" started-at="2023-04-29T17:46:38 IST" name="getResult" finished-at="2023-04-29T17:46:38 IST" duration-ms="170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDashboardRelativeDurationYearTest status=SUCCESS method=DashboardsPageTestTA.validateEditDashboardRelativeDurationYearTest(java.lang.reflect.Method)[pri:1010, instance:com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA@c4ed84] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.DashboardsPageTestTA -->
      <class name="com.ae.qa.testcases.IntegrationServicePageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:22:12 IST" name="initialization" finished-at="2023-04-29T16:22:18 IST" duration-ms="5507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationServicesTest(java.lang.reflect.Method)[pri:138, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:22:18 IST" name="validateAddIntegrationServicesTest" finished-at="2023-04-29T16:23:24 IST" duration-ms="66483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateAddIntegrationServicesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: LPT-0919]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: KalyaniG]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: 10.81.24.109]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: 5901]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
            </line>
            <line>
              <![CDATA[Expected details of Integration service in table are: [LPT-0919, KalyaniG, 10.81.24.109, 5901]]]>
            </line>
            <line>
              <![CDATA[Integration service details verified in table]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationServicesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:23:24 IST" name="getResult" finished-at="2023-04-29T16:23:24 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationServicesTest status=SUCCESS method=IntegrationServicePageTest.validateAddIntegrationServicesTest(java.lang.reflect.Method)[pri:138, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:23:25 IST" name="initialization" finished-at="2023-04-29T16:23:30 IST" duration-ms="5183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationServicesTest(java.lang.reflect.Method)[pri:139, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:23:30 IST" name="validateEditIntegrationServicesTest" finished-at="2023-04-29T16:23:59 IST" duration-ms="29798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateEditIntegrationServicesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button clicked, Service with IntService1 name is editing]]>
            </line>
            <line>
              <![CDATA[UserName is edited]]>
            </line>
            <line>
              <![CDATA[Update Button is clicked, now validate the change in table]]>
            </line>
            <line>
              <![CDATA[Actual Machine Name in Integration table: VM-0163 and Expected Machinename in Integrationtable: VM-0163]]>
            </line>
            <line>
              <![CDATA[Integration service edited successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationServicesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:23:59 IST" name="getResult" finished-at="2023-04-29T16:24:00 IST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationServicesTest status=SUCCESS method=IntegrationServicePageTest.validateEditIntegrationServicesTest(java.lang.reflect.Method)[pri:139, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:24:00 IST" name="initialization" finished-at="2023-04-29T16:24:05 IST" duration-ms="5142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadIntegrationServicesTest(java.lang.reflect.Method)[pri:140, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:24:05 IST" name="validateDownloadIntegrationServicesTest" finished-at="2023-04-29T16:24:28 IST" duration-ms="22795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateDownloadIntegrationServicesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Download button clicked and downloading integrtration service started]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadIntegrationServicesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:24:28 IST" name="getResult" finished-at="2023-04-29T16:24:28 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadIntegrationServicesTest status=SUCCESS method=IntegrationServicePageTest.validateDownloadIntegrationServicesTest(java.lang.reflect.Method)[pri:140, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:24:28 IST" name="initialization" finished-at="2023-04-29T16:24:33 IST" duration-ms="5352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEnableIntForMultipleTATest(java.lang.reflect.Method)[pri:141, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:24:33 IST" name="validateEnableIntForMultipleTATest" finished-at="2023-04-29T16:25:04 IST" duration-ms="30899" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateEnableIntForMultipleTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:52498}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bad32d32646b800d61b4c7d4c65ac7d6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:52498}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bad32d32646b800d61b4c7d4c65ac7d6
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.ae.qa.pages.IntegrationServicesPage.validateEnableIntForMultipleTA(IntegrationServicesPage.java:227)
at com.ae.qa.testcases.IntegrationServicePageTest.validateEnableIntForMultipleTATest(IntegrationServicePageTest.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Enable button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration service enable for Tenant1: KG01 and allowed number of configuration is: 2]]>
            </line>
            <line>
              <![CDATA[Integration service enable for Tenant2: KG02 and allowed number of configuration is: 1]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration service enabled for multiple tenant]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEnableIntForMultipleTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:25:04 IST" name="getResult" finished-at="2023-04-29T16:25:06 IST" duration-ms="1634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEnableIntForMultipleTATest status=FAILURE method=IntegrationServicePageTest.validateEnableIntForMultipleTATest(java.lang.reflect.Method)[pri:141, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:38:51 IST" name="initialization" finished-at="2023-04-29T16:39:01 IST" duration-ms="9855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationServicesPageTest(java.lang.reflect.Method)[pri:162, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:39:01 IST" name="validateIntegrationServicesPageTest" finished-at="2023-04-29T16:39:25 IST" duration-ms="24552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateIntegrationServicesPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Services and Expected page title is: Services]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationServicesPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T16:39:25 IST" name="getResult" finished-at="2023-04-29T16:39:26 IST" duration-ms="229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationServicesPageTest status=SUCCESS method=IntegrationServicePageTest.validateIntegrationServicesPageTest(java.lang.reflect.Method)[pri:162, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T17:46:38 IST" name="initialization" finished-at="2023-04-29T17:46:48 IST" duration-ms="9391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationServiceStatusTest(java.lang.reflect.Method)[pri:1011, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T17:46:48 IST" name="validateIntegrationServiceStatusTest" finished-at="2023-04-29T17:47:15 IST" duration-ms="27029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationServicePageTest.validateIntegrationServiceStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Status of Integration service: Stopped and Expected Status of Integration service: table: Stopped]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationServiceStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6]" started-at="2023-04-29T17:47:15 IST" name="getResult" finished-at="2023-04-29T17:47:15 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationServiceStatusTest status=SUCCESS method=IntegrationServicePageTest.validateIntegrationServiceStatusTest(java.lang.reflect.Method)[pri:1011, instance:com.ae.qa.testcases.IntegrationServicePageTest@241e8ea6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.IntegrationServicePageTest -->
      <class name="com.ae.qa.testcases.PurgeSchedulePageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T15:01:28 IST" name="initialization" finished-at="2023-04-29T15:01:32 IST" duration-ms="3832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgingScheduleDayTest(java.lang.reflect.Method)[pri:36, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T15:01:32 IST" name="validatePurgingScheduleDayTest" finished-at="2023-04-29T15:02:16 IST" duration-ms="44190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgingScheduleDayTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Add button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule created for day of Month]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgingScheduleDayTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T15:02:16 IST" name="getResult" finished-at="2023-04-29T15:02:16 IST" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgingScheduleDayTest status=SUCCESS method=PurgeSchedulePageTest.validatePurgingScheduleDayTest(java.lang.reflect.Method)[pri:36, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T15:02:16 IST" name="initialization" finished-at="2023-04-29T15:02:20 IST" duration-ms="3584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgingScheduleWeekendTest(java.lang.reflect.Method)[pri:37, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T15:02:20 IST" name="validatePurgingScheduleWeekendTest" finished-at="2023-04-29T15:02:46 IST" duration-ms="26341" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgingScheduleWeekendTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Schedule not created for day of week expected [Schedule created successfully] but found [Next fire time is too close to update/create time, skipping it. Setting the Next fire time as [Mon, 05-Jun-2023 02:02 AM IST]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Schedule not created for day of week expected [Schedule created successfully] but found [Next fire time is too close to update/create time, skipping it. Setting the Next fire time as [Mon, 05-Jun-2023 02:02 AM IST]]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pages.PurgeSchedulePage.validatePurgingScheduleWeekend(PurgeSchedulePage.java:158)
at com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgingScheduleWeekendTest(PurgeSchedulePageTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgingScheduleWeekendTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T15:02:46 IST" name="getResult" finished-at="2023-04-29T15:02:47 IST" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgingScheduleWeekendTest status=FAILURE method=PurgeSchedulePageTest.validatePurgingScheduleWeekendTest(java.lang.reflect.Method)[pri:37, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T16:38:15 IST" name="initialization" finished-at="2023-04-29T16:38:23 IST" duration-ms="8169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgeSchedulePageTest(java.lang.reflect.Method)[pri:161, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T16:38:23 IST" name="validatePurgeSchedulePageTest" finished-at="2023-04-29T16:38:50 IST" duration-ms="27648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgeSchedulePageTest.validatePurgeSchedulePageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgeSchedulePageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e]" started-at="2023-04-29T16:38:50 IST" name="getResult" finished-at="2023-04-29T16:38:51 IST" duration-ms="657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgeSchedulePageTest status=SUCCESS method=PurgeSchedulePageTest.validatePurgeSchedulePageTest(java.lang.reflect.Method)[pri:161, instance:com.ae.qa.testcases.PurgeSchedulePageTest@6d23017e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PurgeSchedulePageTest -->
      <class name="com.ae.qa.testcases.SecurityQuestionsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:47:53 IST" name="initialization" finished-at="2023-04-29T14:47:58 IST" duration-ms="5111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSkipQuesTest(java.lang.reflect.Method)[pri:21, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:47:58 IST" name="validateSkipQuesTest" finished-at="2023-04-29T14:48:22 IST" duration-ms="23855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSkipQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User skipped the set security question and navigated to Tenants Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSkipQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:48:22 IST" name="getResult" finished-at="2023-04-29T14:48:22 IST" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSkipQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateSkipQuesTest(java.lang.reflect.Method)[pri:21, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:48:22 IST" name="initialization" finished-at="2023-04-29T14:48:26 IST" duration-ms="3978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSecurityQuesTest(java.lang.reflect.Method)[pri:22, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:48:26 IST" name="validateSecurityQuesTest" finished-at="2023-04-29T14:49:05 IST" duration-ms="38637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSecurityQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions set successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSecurityQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:49:05 IST" name="getResult" finished-at="2023-04-29T14:49:05 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSecurityQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateSecurityQuesTest(java.lang.reflect.Method)[pri:22, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:49:05 IST" name="initialization" finished-at="2023-04-29T14:49:09 IST" duration-ms="4073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdatingSecQuesWithWrongPswdTest(java.lang.reflect.Method)[pri:23, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:49:09 IST" name="validateUpdatingSecQuesWithWrongPswdTest" finished-at="2023-04-29T14:49:45 IST" duration-ms="36011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateUpdatingSecQuesWithWrongPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions can not be updated due to wrong password]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdatingSecQuesWithWrongPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:49:45 IST" name="getResult" finished-at="2023-04-29T14:49:46 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdatingSecQuesWithWrongPswdTest status=SUCCESS method=SecurityQuestionsPageTest.validateUpdatingSecQuesWithWrongPswdTest(java.lang.reflect.Method)[pri:23, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:49:46 IST" name="initialization" finished-at="2023-04-29T14:49:49 IST" duration-ms="3714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdatingSecurityQuesTest(java.lang.reflect.Method)[pri:24, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:49:49 IST" name="validateUpdatingSecurityQuesTest" finished-at="2023-04-29T14:50:23 IST" duration-ms="34149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateUpdatingSecurityQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions updated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdatingSecurityQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:50:23 IST" name="getResult" finished-at="2023-04-29T14:50:24 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdatingSecurityQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateUpdatingSecurityQuesTest(java.lang.reflect.Method)[pri:24, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:50:24 IST" name="initialization" finished-at="2023-04-29T14:50:29 IST" duration-ms="5691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSkipThenSetQuesTest(java.lang.reflect.Method)[pri:25, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:50:29 IST" name="validateSkipThenSetQuesTest" finished-at="2023-04-29T14:51:17 IST" duration-ms="48009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSkipThenSetQuesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User first skip the security question and then set security questions successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSkipThenSetQuesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T14:51:17 IST" name="getResult" finished-at="2023-04-29T14:51:17 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSkipThenSetQuesTest status=SUCCESS method=SecurityQuestionsPageTest.validateSkipThenSetQuesTest(java.lang.reflect.Method)[pri:25, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57] output=User changed first time password of sysadmin Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T16:42:32 IST" name="initialization" finished-at="2023-04-29T16:42:39 IST" duration-ms="7318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSecurityQuestionsPageTest(java.lang.reflect.Method)[pri:168, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T16:42:39 IST" name="validateSecurityQuestionsPageTest" finished-at="2023-04-29T16:43:04 IST" duration-ms="25284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SecurityQuestionsPageTest.validateSecurityQuestionsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Reset Security Questions and Expected page title is: Reset Security Questions]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSecurityQuestionsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57]" started-at="2023-04-29T16:43:04 IST" name="getResult" finished-at="2023-04-29T16:43:05 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSecurityQuestionsPageTest status=SUCCESS method=SecurityQuestionsPageTest.validateSecurityQuestionsPageTest(java.lang.reflect.Method)[pri:168, instance:com.ae.qa.testcases.SecurityQuestionsPageTest@66746f57] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SecurityQuestionsPageTest -->
      <class name="com.ae.qa.testcases.SysadminPolicyPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:51:17 IST" name="initialization" finished-at="2023-04-29T14:51:21 IST" duration-ms="3915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePswdComplexityTest(java.lang.reflect.Method)[pri:26, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:51:21 IST" name="validatePswdComplexityTest" finished-at="2023-04-29T14:52:02 IST" duration-ms="40377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validatePswdComplexityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePswdComplexityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:52:02 IST" name="getResult" finished-at="2023-04-29T14:52:02 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePswdComplexityTest status=SUCCESS method=SysadminPolicyPageTest.validatePswdComplexityTest(java.lang.reflect.Method)[pri:26, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:52:02 IST" name="initialization" finished-at="2023-04-29T14:52:06 IST" duration-ms="3970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePasswordHistoryTest(java.lang.reflect.Method)[pri:27, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:52:06 IST" name="validatePasswordHistoryTest" finished-at="2023-04-29T14:53:56 IST" duration-ms="110442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validatePasswordHistoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Below validation validates number of password to be checked is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[Password policy updated]]>
            </line>
            <line>
              <![CDATA[Password History of sysadmin validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePasswordHistoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:53:56 IST" name="getResult" finished-at="2023-04-29T14:53:56 IST" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordHistoryTest status=SUCCESS method=SysadminPolicyPageTest.validatePasswordHistoryTest(java.lang.reflect.Method)[pri:27, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020] output=User changed first time password of sysadmin Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:53:56 IST" name="initialization" finished-at="2023-04-29T14:54:01 IST" duration-ms="4103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateNoOfAttemptsTest(java.lang.reflect.Method)[pri:28, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:54:01 IST" name="validateNoOfAttemptsTest" finished-at="2023-04-29T14:57:00 IST" duration-ms="179454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validateNoOfAttemptsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Security questions set successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Sysadmin Policy tab clicked]]>
            </line>
            <line>
              <![CDATA[Below validation validates no.of attempts for wrong password is equal to what user set in confirm Policy pop-up]]>
            </line>
            <line>
              <![CDATA[No. of attempts is validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateNoOfAttemptsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T14:57:00 IST" name="getResult" finished-at="2023-04-29T14:57:00 IST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNoOfAttemptsTest status=SUCCESS method=SysadminPolicyPageTest.validateNoOfAttemptsTest(java.lang.reflect.Method)[pri:28, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T16:41:55 IST" name="initialization" finished-at="2023-04-29T16:42:03 IST" duration-ms="8268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSysadminPolicyPageTest(java.lang.reflect.Method)[pri:167, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T16:42:03 IST" name="validateSysadminPolicyPageTest" finished-at="2023-04-29T16:42:30 IST" duration-ms="27163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SysadminPolicyPageTest.validateSysadminPolicyPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Sysadmin Policy and Expected page title is: Sysadmin Policy]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSysadminPolicyPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020]" started-at="2023-04-29T16:42:30 IST" name="getResult" finished-at="2023-04-29T16:42:32 IST" duration-ms="1402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSysadminPolicyPageTest status=SUCCESS method=SysadminPolicyPageTest.validateSysadminPolicyPageTest(java.lang.reflect.Method)[pri:167, instance:com.ae.qa.testcases.SysadminPolicyPageTest@447a020] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SysadminPolicyPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T15:26:38 IST" name="initialization" finished-at="2023-04-29T15:26:49 IST" duration-ms="10238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestTest(java.lang.reflect.Method)[pri:73, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T15:26:49 IST" name="validateSubmitRequestTest" finished-at="2023-04-29T15:27:11 IST" duration-ms="22349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA.validateSubmitRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T15:27:11 IST" name="getResult" finished-at="2023-04-29T15:27:11 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSubmitRequestTest status=SUCCESS method=CataloguePageTestTA.validateSubmitRequestTest(java.lang.reflect.Method)[pri:73, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T17:47:57 IST" name="initialization" finished-at="2023-04-29T17:48:03 IST" duration-ms="6338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestDefaultCategoryTest(java.lang.reflect.Method)[pri:1024, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T17:48:03 IST" name="validateSubmitRequestDefaultCategoryTest" finished-at="2023-04-29T17:49:49 IST" duration-ms="105733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA.validateSubmitRequestDefaultCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Category:-Default]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestDefaultCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T17:49:49 IST" name="getResult" finished-at="2023-04-29T17:49:49 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSubmitRequestDefaultCategoryTest status=SUCCESS method=CataloguePageTestTA.validateSubmitRequestDefaultCategoryTest(java.lang.reflect.Method)[pri:1024, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T17:49:49 IST" name="initialization" finished-at="2023-04-29T17:49:57 IST" duration-ms="7498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestCustomCategoryTest(java.lang.reflect.Method)[pri:1025, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T17:49:57 IST" name="validateSubmitRequestCustomCategoryTest" finished-at="2023-04-29T17:50:21 IST" duration-ms="24542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA.validateSubmitRequestCustomCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Category:-WebGUI]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestCustomCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973]" started-at="2023-04-29T17:50:22 IST" name="getResult" finished-at="2023-04-29T17:50:22 IST" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSubmitRequestCustomCategoryTest status=SUCCESS method=CataloguePageTestTA.validateSubmitRequestCustomCategoryTest(java.lang.reflect.Method)[pri:1025, instance:com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA@340b9973] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.CataloguePageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:12:46 IST" name="initialization" finished-at="2023-04-29T15:12:51 IST" duration-ms="5333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowTest(java.lang.reflect.Method)[pri:54, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:12:51 IST" name="validateImportWorkflowTest" finished-at="2023-04-29T15:13:44 IST" duration-ms="52627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Alert Message when user dont configure smtpEmail server not configured for the tenant. Email notification cannot be enabled]]>
            </line>
            <line>
              <![CDATA[Getting correct message for email notification as smtp not configured]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:13:44 IST" name="getResult" finished-at="2023-04-29T15:13:44 IST" duration-ms="256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowTest(java.lang.reflect.Method)[pri:54, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:13:44 IST" name="initialization" finished-at="2023-04-29T15:13:48 IST" duration-ms="3798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUploadInvalidIconTest(java.lang.reflect.Method)[pri:55, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:13:48 IST" name="ValidateUploadInvalidIconTest" finished-at="2023-04-29T15:14:09 IST" duration-ms="20903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUploadInvalidIconTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Icon Updation done successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUploadInvalidIconTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:14:09 IST" name="getResult" finished-at="2023-04-29T15:14:09 IST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUploadInvalidIconTest status=SUCCESS method=WorkflowListPageTestTA.ValidateUploadInvalidIconTest(java.lang.reflect.Method)[pri:55, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:14:09 IST" name="initialization" finished-at="2023-04-29T15:14:13 IST" duration-ms="3874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUploadIconTest(java.lang.reflect.Method)[pri:56, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:14:13 IST" name="ValidateUploadIconTest" finished-at="2023-04-29T15:14:37 IST" duration-ms="23991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUploadIconTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Icon Updation done successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUploadIconTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:14:37 IST" name="getResult" finished-at="2023-04-29T15:14:37 IST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUploadIconTest status=SUCCESS method=WorkflowListPageTestTA.ValidateUploadIconTest(java.lang.reflect.Method)[pri:56, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:14:37 IST" name="initialization" finished-at="2023-04-29T15:14:41 IST" duration-ms="3918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditManualExecutionTest(java.lang.reflect.Method)[pri:57, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:14:41 IST" name="ValidateEditManualExecutionTest" finished-at="2023-04-29T15:15:14 IST" duration-ms="32664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateEditManualExecutionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[workflowList  tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is Clicked]]>
            </line>
            <line>
              <![CDATA[Aactual Success Message after editing workflow: Workflow updated successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Message after editing workflow: Workflow updated successfully]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditManualExecutionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:15:14 IST" name="getResult" finished-at="2023-04-29T15:15:14 IST" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditManualExecutionTest status=SUCCESS method=WorkflowListPageTestTA.ValidateEditManualExecutionTest(java.lang.reflect.Method)[pri:57, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:15:14 IST" name="initialization" finished-at="2023-04-29T15:15:18 IST" duration-ms="3942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateExportWorkflowTest(java.lang.reflect.Method)[pri:58, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:15:18 IST" name="ValidateExportWorkflowTest" finished-at="2023-04-29T15:15:48 IST" duration-ms="29737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateExportWorkflowTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[workflowList  tab clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateExportWorkflowTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:15:48 IST" name="getResult" finished-at="2023-04-29T15:15:48 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateExportWorkflowTest status=SUCCESS method=WorkflowListPageTestTA.ValidateExportWorkflowTest(java.lang.reflect.Method)[pri:58, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:44:46 IST" name="initialization" finished-at="2023-04-29T15:44:53 IST" duration-ms="7854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithConfigParamTest(java.lang.reflect.Method)[pri:98, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:44:53 IST" name="validateImportWorkflowWithConfigParamTest" finished-at="2023-04-29T15:45:49 IST" duration-ms="55737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithConfigParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithConfigParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:45:49 IST" name="getResult" finished-at="2023-04-29T15:45:49 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithConfigParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithConfigParamTest(java.lang.reflect.Method)[pri:98, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:45:49 IST" name="initialization" finished-at="2023-04-29T15:45:56 IST" duration-ms="6672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithRuntimeParamTest(java.lang.reflect.Method)[pri:99, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:45:56 IST" name="validateImportWorkflowWithRuntimeParamTest" finished-at="2023-04-29T15:46:22 IST" duration-ms="25534" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithRuntimeParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\kalyani.gomkale\Downloads\AE_Automation_UploadFiles\WFWithRuntimeParam.zip
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50571}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4454337c3bc51b4a0ec8f5375f510354]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\kalyani.gomkale\Downloads\AE_Automation_UploadFiles\WFWithRuntimeParam.zip
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50571}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4454337c3bc51b4a0ec8f5375f510354
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:106)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.sendKeys(Unknown Source)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.ImportForm(WorkflowListPageTA.java:250)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateImportWorkflowWithRuntimeParam(WorkflowListPageTA.java:334)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithRuntimeParamTest(WorkflowListPageTestTA.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithRuntimeParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:46:22 IST" name="getResult" finished-at="2023-04-29T15:46:22 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithRuntimeParamTest status=FAILURE method=WorkflowListPageTestTA.validateImportWorkflowWithRuntimeParamTest(java.lang.reflect.Method)[pri:99, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:46:22 IST" name="initialization" finished-at="2023-04-29T15:46:27 IST" duration-ms="5163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithConfigRuntimeParamTest(java.lang.reflect.Method)[pri:100, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:46:27 IST" name="validateImportWorkflowWithConfigRuntimeParamTest" finished-at="2023-04-29T15:47:22 IST" duration-ms="54865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithConfigRuntimeParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithConfigRuntimeParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:47:22 IST" name="getResult" finished-at="2023-04-29T15:47:22 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithConfigRuntimeParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithConfigRuntimeParamTest(java.lang.reflect.Method)[pri:100, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:47:22 IST" name="initialization" finished-at="2023-04-29T15:47:28 IST" duration-ms="6061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithCredConfigParamTest(java.lang.reflect.Method)[pri:101, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:47:28 IST" name="validateImportWorkflowWithCredConfigParamTest" finished-at="2023-04-29T15:48:28 IST" duration-ms="59431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithCredConfigParamTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithCredConfigParamTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:48:28 IST" name="getResult" finished-at="2023-04-29T15:48:28 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithCredConfigParamTest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithCredConfigParamTest(java.lang.reflect.Method)[pri:101, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:48:28 IST" name="initialization" finished-at="2023-04-29T15:48:35 IST" duration-ms="6829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateShowFileStructureTest(java.lang.reflect.Method)[pri:102, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:48:35 IST" name="ValidateShowFileStructureTest" finished-at="2023-04-29T15:49:03 IST" duration-ms="28359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateShowFileStructureTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Zip File found in File Structure:Boolean.zip]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateShowFileStructureTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:49:03 IST" name="getResult" finished-at="2023-04-29T15:49:03 IST" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateShowFileStructureTest status=SUCCESS method=WorkflowListPageTestTA.ValidateShowFileStructureTest(java.lang.reflect.Method)[pri:102, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:49:03 IST" name="initialization" finished-at="2023-04-29T15:49:09 IST" duration-ms="5441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUpdateWFWithConfigWFTest(java.lang.reflect.Method)[pri:103, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:49:09 IST" name="ValidateUpdateWFWithConfigWFTest" finished-at="2023-04-29T15:49:43 IST" duration-ms="34155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.ValidateUpdateWFWithConfigWFTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[workflowList  tab clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Update option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name which needs to be updated]]>
            </line>
            <line>
              <![CDATA[Clicked on Update bottun]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUpdateWFWithConfigWFTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T15:49:43 IST" name="getResult" finished-at="2023-04-29T15:49:44 IST" duration-ms="704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUpdateWFWithConfigWFTest status=SUCCESS method=WorkflowListPageTestTA.ValidateUpdateWFWithConfigWFTest(java.lang.reflect.Method)[pri:103, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T16:50:28 IST" name="initialization" finished-at="2023-04-29T16:50:40 IST" duration-ms="11304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportWorkflowWithConfigParamCredAndCredpoolTATest(java.lang.reflect.Method)[pri:305, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T16:50:40 IST" name="validateImportWorkflowWithConfigParamCredAndCredpoolTATest" finished-at="2023-04-29T16:52:41 IST" duration-ms="121059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWorkflowWithConfigParamCredAndCredpoolTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Record for KG_Private2 credential found in table]]>
            </line>
            <line>
              <![CDATA[Credentials created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Configuration Parameters dropdown is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked on Credentials Radio Button]]>
            </line>
            <line>
              <![CDATA[Clicked on Credentials Pool Radio Button]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportWorkflowWithConfigParamCredAndCredpoolTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T16:52:41 IST" name="getResult" finished-at="2023-04-29T16:52:41 IST" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportWorkflowWithConfigParamCredAndCredpoolTATest status=SUCCESS method=WorkflowListPageTestTA.validateImportWorkflowWithConfigParamCredAndCredpoolTATest(java.lang.reflect.Method)[pri:305, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:17:17 IST" name="initialization" finished-at="2023-04-29T18:17:33 IST" duration-ms="15204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditWFtoSequentialTest(java.lang.reflect.Method)[pri:1051, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:17:33 IST" name="validateEditWFtoSequentialTest" finished-at="2023-04-29T18:18:42 IST" duration-ms="68958" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateEditWFtoSequentialTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate element with text: 
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate element with text: 
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:147)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateEditWFtoSequential(WorkflowListPageTA.java:1273)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateEditWFtoSequentialTest(WorkflowListPageTestTA.java:264)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditWFtoSequentialTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:18:42 IST" name="getResult" finished-at="2023-04-29T18:18:42 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditWFtoSequentialTest status=FAILURE method=WorkflowListPageTestTA.validateEditWFtoSequentialTest(java.lang.reflect.Method)[pri:1051, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:18:42 IST" name="initialization" finished-at="2023-04-29T18:18:50 IST" duration-ms="8191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportWFUATTest(java.lang.reflect.Method)[pri:1300, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:18:50 IST" name="validateExportWFUATTest" finished-at="2023-04-29T18:22:17 IST" duration-ms="206749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFUATTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[License Uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportWFUATTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:22:17 IST" name="getResult" finished-at="2023-04-29T18:22:17 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportWFUATTest status=SUCCESS method=WorkflowListPageTestTA.validateExportWFUATTest(java.lang.reflect.Method)[pri:1300, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:22:19 IST" name="initialization" finished-at="2023-04-29T18:22:29 IST" duration-ms="9798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportExportedWFUATTest(java.lang.reflect.Method)[pri:1301, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:22:29 IST" name="validateImportExportedWFUATTest" finished-at="2023-04-29T18:24:26 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFUATTest" duration-ms="117247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportExportedWFUATTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportExportedWFUATTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:24:26 IST" name="getResult" finished-at="2023-04-29T18:24:27 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportExportedWFUATTest status=SUCCESS method=WorkflowListPageTestTA.validateImportExportedWFUATTest(java.lang.reflect.Method)[pri:1301, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:24:27 IST" name="initialization" finished-at="2023-04-29T18:24:40 IST" duration-ms="13924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportWFSubscriptionTest(java.lang.reflect.Method)[pri:1302, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:24:40 IST" name="validateExportWFSubscriptionTest" finished-at="2023-04-29T18:28:12 IST" duration-ms="211980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFSubscriptionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[License Uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportWFSubscriptionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:28:12 IST" name="getResult" finished-at="2023-04-29T18:28:13 IST" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportWFSubscriptionTest status=SUCCESS method=WorkflowListPageTestTA.validateExportWFSubscriptionTest(java.lang.reflect.Method)[pri:1302, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:28:13 IST" name="initialization" finished-at="2023-04-29T18:28:25 IST" duration-ms="12263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportExportedWFSubscriptionTest(java.lang.reflect.Method)[pri:1303, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:28:25 IST" name="validateImportExportedWFSubscriptionTest" finished-at="2023-04-29T18:30:31 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFSubscriptionTest" duration-ms="125993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportExportedWFSubscriptionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportExportedWFSubscriptionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:30:31 IST" name="getResult" finished-at="2023-04-29T18:30:31 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportExportedWFSubscriptionTest status=SUCCESS method=WorkflowListPageTestTA.validateImportExportedWFSubscriptionTest(java.lang.reflect.Method)[pri:1303, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:30:31 IST" name="initialization" finished-at="2023-04-29T18:30:57 IST" duration-ms="25871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportWFEnterpriseTest(java.lang.reflect.Method)[pri:1304, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:30:57 IST" name="validateExportWFEnterpriseTest" finished-at="2023-04-29T18:34:21 IST" duration-ms="203845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFEnterpriseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[License Uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportWFEnterpriseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:34:21 IST" name="getResult" finished-at="2023-04-29T18:34:21 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportWFEnterpriseTest status=SUCCESS method=WorkflowListPageTestTA.validateExportWFEnterpriseTest(java.lang.reflect.Method)[pri:1304, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:34:21 IST" name="initialization" finished-at="2023-04-29T18:34:31 IST" duration-ms="9437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateImportExportedWFEnterpriseTest(java.lang.reflect.Method)[pri:1305, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:34:31 IST" name="validateImportExportedWFEnterpriseTest" finished-at="2023-04-29T18:36:26 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFEnterpriseTest" duration-ms="115468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportExportedWFEnterpriseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateImportExportedWFEnterpriseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:36:26 IST" name="getResult" finished-at="2023-04-29T18:36:26 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateImportExportedWFEnterpriseTest status=SUCCESS method=WorkflowListPageTestTA.validateImportExportedWFEnterpriseTest(java.lang.reflect.Method)[pri:1305, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:36:27 IST" name="initialization" finished-at="2023-04-29T18:36:31 IST" duration-ms="4441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportVerifiedWFUATTest(java.lang.reflect.Method)[pri:1306, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:36:31 IST" name="validateExportVerifiedWFUATTest" finished-at="2023-04-29T18:36:59 IST" duration-ms="28147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportVerifiedWFUATTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Export as verified checkbox is selected successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportVerifiedWFUATTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:36:59 IST" name="getResult" finished-at="2023-04-29T18:36:59 IST" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportVerifiedWFUATTest status=SUCCESS method=WorkflowListPageTestTA.validateExportVerifiedWFUATTest(java.lang.reflect.Method)[pri:1306, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:36:59 IST" name="initialization" finished-at="2023-04-29T18:37:06 IST" duration-ms="6432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportUATWFAndImportInDevelopmentTest(java.lang.reflect.Method)[pri:1308, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:37:06 IST" name="validateExportUATWFAndImportInDevelopmentTest" finished-at="2023-04-29T18:38:04 IST" duration-ms="58266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportUATWFAndImportInDevelopmentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportUATWFAndImportInDevelopmentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:38:04 IST" name="getResult" finished-at="2023-04-29T18:38:04 IST" duration-ms="484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportUATWFAndImportInDevelopmentTest status=SUCCESS method=WorkflowListPageTestTA.validateExportUATWFAndImportInDevelopmentTest(java.lang.reflect.Method)[pri:1308, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:38:04 IST" name="initialization" finished-at="2023-04-29T18:38:21 IST" duration-ms="16045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportUATWFAndImportInSubscriptionTestTest(java.lang.reflect.Method)[pri:1309, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:38:21 IST" name="validateExportUATWFAndImportInSubscriptionTestTest" finished-at="2023-04-29T18:39:25 IST" duration-ms="64333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportUATWFAndImportInSubscriptionTestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportUATWFAndImportInSubscriptionTestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:39:25 IST" name="getResult" finished-at="2023-04-29T18:39:27 IST" duration-ms="1854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportUATWFAndImportInSubscriptionTestTest status=SUCCESS method=WorkflowListPageTestTA.validateExportUATWFAndImportInSubscriptionTestTest(java.lang.reflect.Method)[pri:1309, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:39:27 IST" name="initialization" finished-at="2023-04-29T18:39:40 IST" duration-ms="13181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportSubscriptionWFAndImportInDevelopmentTest(java.lang.reflect.Method)[pri:1310, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:39:40 IST" name="validateExportSubscriptionWFAndImportInDevelopmentTest" finished-at="2023-04-29T18:40:34 IST" duration-ms="53929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportSubscriptionWFAndImportInDevelopmentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportSubscriptionWFAndImportInDevelopmentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:40:34 IST" name="getResult" finished-at="2023-04-29T18:40:34 IST" duration-ms="660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportSubscriptionWFAndImportInDevelopmentTest status=SUCCESS method=WorkflowListPageTestTA.validateExportSubscriptionWFAndImportInDevelopmentTest(java.lang.reflect.Method)[pri:1310, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:40:34 IST" name="initialization" finished-at="2023-04-29T18:40:48 IST" duration-ms="13915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportUATWFAndImportInEnterpriseTest(java.lang.reflect.Method)[pri:1311, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:40:48 IST" name="validateExportUATWFAndImportInEnterpriseTest" finished-at="2023-04-29T18:42:14 IST" duration-ms="85455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportUATWFAndImportInEnterpriseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportUATWFAndImportInEnterpriseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:42:14 IST" name="getResult" finished-at="2023-04-29T18:42:18 IST" duration-ms="3644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportUATWFAndImportInEnterpriseTest status=SUCCESS method=WorkflowListPageTestTA.validateExportUATWFAndImportInEnterpriseTest(java.lang.reflect.Method)[pri:1311, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:42:18 IST" name="initialization" finished-at="2023-04-29T18:42:33 IST" duration-ms="15256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateDevelopmentSameCustomerTest(java.lang.reflect.Method)[pri:1313, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:42:33 IST" name="validateCreateDevelopmentSameCustomerTest" finished-at="2023-04-29T18:44:32 IST" duration-ms="119350" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateCreateDevelopmentSameCustomerTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:59731}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9ac2b806662f246b38bfe9fa77ed7386]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:59731}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9ac2b806662f246b38bfe9fa77ed7386
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateCreateTenantAdminWithUploadLicense(WorkflowListPageTA.java:1499)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateCreateDevelopmentSameCustomerTest(WorkflowListPageTestTA.java:401)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateDevelopmentSameCustomerTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:44:32 IST" name="getResult" finished-at="2023-04-29T18:44:35 IST" duration-ms="2640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateDevelopmentSameCustomerTest status=FAILURE method=WorkflowListPageTestTA.validateCreateDevelopmentSameCustomerTest(java.lang.reflect.Method)[pri:1313, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:44:35 IST" name="initialization" finished-at="2023-04-29T18:44:52 IST" duration-ms="17363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateEnterpriseSameCustomerTest(java.lang.reflect.Method)[pri:1314, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:44:52 IST" name="validateCreateEnterpriseSameCustomerTest" finished-at="2023-04-29T18:46:50 IST" duration-ms="118373" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateCreateEnterpriseSameCustomerTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:59811}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 05cbaf3c4291ab6a1a3405a4c7a51bb2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:59811}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 05cbaf3c4291ab6a1a3405a4c7a51bb2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateCreateTenantAdminWithUploadLicense(WorkflowListPageTA.java:1499)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateCreateEnterpriseSameCustomerTest(WorkflowListPageTestTA.java:411)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateEnterpriseSameCustomerTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:46:50 IST" name="getResult" finished-at="2023-04-29T18:46:52 IST" duration-ms="1305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateEnterpriseSameCustomerTest status=FAILURE method=WorkflowListPageTestTA.validateCreateEnterpriseSameCustomerTest(java.lang.reflect.Method)[pri:1314, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:46:52 IST" name="initialization" finished-at="2023-04-29T18:47:11 IST" duration-ms="18795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateUATSameCustomerTest(java.lang.reflect.Method)[pri:1315, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:47:11 IST" name="validateCreateUATSameCustomerTest" finished-at="2023-04-29T18:49:53 IST" duration-ms="162416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateCreateUATSameCustomerTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[License Uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateUATSameCustomerTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:49:53 IST" name="getResult" finished-at="2023-04-29T18:49:54 IST" duration-ms="672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateUATSameCustomerTest status=SUCCESS method=WorkflowListPageTestTA.validateCreateUATSameCustomerTest(java.lang.reflect.Method)[pri:1315, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:49:54 IST" name="initialization" finished-at="2023-04-29T18:50:10 IST" duration-ms="16755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportWFDevelopmentAndImportInUATSATest(java.lang.reflect.Method)[pri:1316, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:50:10 IST" name="validateExportWFDevelopmentAndImportInUATSATest" finished-at="2023-04-29T18:53:40 IST" duration-ms="209132" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFDevelopmentAndImportInUATSATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.id: wfPriority' (tried for 100 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.id: wfPriority' (tried for 100 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.ImportWorkflow(WorkflowListPageTA.java:1330)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateExportImportWFforSameCustomer(WorkflowListPageTA.java:1521)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFDevelopmentAndImportInUATSATest(WorkflowListPageTestTA.java:432)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#wfPriority"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60000}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1e7649748c3803f9298f53a39bf5a548
*** Element info: {Using=id, value=wfPriority}
at jdk.internal.reflect.GeneratedConstructorAccessor90.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportWFDevelopmentAndImportInUATSATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:53:40 IST" name="getResult" finished-at="2023-04-29T18:53:42 IST" duration-ms="2056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportWFDevelopmentAndImportInUATSATest status=FAILURE method=WorkflowListPageTestTA.validateExportWFDevelopmentAndImportInUATSATest(java.lang.reflect.Method)[pri:1316, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:53:42 IST" name="initialization" finished-at="2023-04-29T18:53:56 IST" duration-ms="14602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportWFDevelopmentAndImportInEnterpriseSATest(java.lang.reflect.Method)[pri:1317, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:53:56 IST" name="validateExportWFDevelopmentAndImportInEnterpriseSATest" finished-at="2023-04-29T18:54:08 IST" duration-ms="11996" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFDevelopmentAndImportInEnterpriseSATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span class="fa fa-download"></span> is not clickable at point (1241, 94). Other element would receive the click: <div class="modal-backdrop fade show"></div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60088}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 66d8db14e011fb8248cacdbc0530ca47]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span class="fa fa-download"></span> is not clickable at point (1241, 94). Other element would receive the click: <div class="modal-backdrop fade show"></div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60088}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 66d8db14e011fb8248cacdbc0530ca47
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.ImportWorkflow(WorkflowListPageTA.java:1299)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateExportImportWFforSameCustomer(WorkflowListPageTA.java:1521)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFDevelopmentAndImportInEnterpriseSATest(WorkflowListPageTestTA.java:443)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportWFDevelopmentAndImportInEnterpriseSATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:54:08 IST" name="getResult" finished-at="2023-04-29T18:54:16 IST" duration-ms="7869" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportWFDevelopmentAndImportInEnterpriseSATest status=FAILURE method=WorkflowListPageTestTA.validateExportWFDevelopmentAndImportInEnterpriseSATest(java.lang.reflect.Method)[pri:1317, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:54:16 IST" name="initialization" finished-at="2023-04-29T18:54:34 IST" duration-ms="17861" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateExportWFUATAndImportInEnterpriseSATest(java.lang.reflect.Method)[pri:1318, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:54:34 IST" name="validateExportWFUATAndImportInEnterpriseSATest" finished-at="2023-04-29T18:58:09 IST" duration-ms="215499" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFUATAndImportInEnterpriseSATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[target frame detached
  (failed to check if window was closed: disconnected: Unable to receive message from renderer)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60135}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7cbf25769d94e56ebe87f11f0ad372ce
*** Element info: {Using=id, value=wfPriority}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: target frame detached
  (failed to check if window was closed: disconnected: Unable to receive message from renderer)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60135}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7cbf25769d94e56ebe87f11f0ad372ce
*** Element info: {Using=id, value=wfPriority}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.ImportWorkflow(WorkflowListPageTA.java:1330)
at com.ae.qa.pagesTenantAdmin.WorkflowListPageTA.validateExportImportWFforSameCustomer(WorkflowListPageTA.java:1555)
at com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateExportWFUATAndImportInEnterpriseSATest(WorkflowListPageTestTA.java:454)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Clicked the Dropdown button]]>
            </line>
            <line>
              <![CDATA[Clicked the Export option from dropdown]]>
            </line>
            <line>
              <![CDATA[Clicked the Workflows dropdown ]]>
            </line>
            <line>
              <![CDATA[Clicked on search bar]]>
            </line>
            <line>
              <![CDATA[Checked the Workflow name ]]>
            </line>
            <line>
              <![CDATA[Clicked on export bottun]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateExportWFUATAndImportInEnterpriseSATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T18:58:09 IST" name="getResult" finished-at="2023-04-29T18:58:09 IST" duration-ms="26" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateExportWFUATAndImportInEnterpriseSATest status=FAILURE method=WorkflowListPageTestTA.validateExportWFUATAndImportInEnterpriseSATest(java.lang.reflect.Method)[pri:1318, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60135}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7cbf25769d94e56ebe87f11f0ad372ce]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60135}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7cbf25769d94e56ebe87f11f0ad372ce
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateImportWFAssistedAgent(java.lang.reflect.Method)[pri:2006, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T19:07:03 IST" name="validateImportWFAssistedAgent" finished-at="2023-04-29T19:07:03 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA.validateImportWFAssistedAgent(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60135}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7cbf25769d94e56ebe87f11f0ad372ce]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:60135}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7cbf25769d94e56ebe87f11f0ad372ce
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateImportWFAssistedAgent -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T19:07:03 IST" name="initialization" finished-at="2023-04-29T19:07:03 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA@301ec38b]" started-at="2023-04-29T19:07:03 IST" name="getResult" finished-at="2023-04-29T19:07:03 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.WorkflowListPageTestTA -->
      <class name="com.ae.qa.testcases.PluginAssignmentsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:14:09 IST" name="initialization" finished-at="2023-04-29T16:14:12 IST" duration-ms="3834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssignPluginSingleTenantTest(java.lang.reflect.Method)[pri:129, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:14:12 IST" name="validateAssignPluginSingleTenantTest" finished-at="2023-04-29T16:15:32 IST" duration-ms="79643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateAssignPluginSingleTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[Tenant is created successfully, now assign specific plugin to that tenant]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin assigned to single tenant]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssignPluginSingleTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:15:32 IST" name="getResult" finished-at="2023-04-29T16:15:32 IST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssignPluginSingleTenantTest status=SUCCESS method=PluginAssignmentsPageTest.validateAssignPluginSingleTenantTest(java.lang.reflect.Method)[pri:129, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:15:32 IST" name="initialization" finished-at="2023-04-29T16:15:36 IST" duration-ms="3961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssignTenantSinglePluginTest(java.lang.reflect.Method)[pri:130, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:15:36 IST" name="validateAssignTenantSinglePluginTest" finished-at="2023-04-29T16:16:19 IST" duration-ms="43150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateAssignTenantSinglePluginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Single plugin assigned to desired tenant]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssignTenantSinglePluginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:16:19 IST" name="getResult" finished-at="2023-04-29T16:16:20 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssignTenantSinglePluginTest status=SUCCESS method=PluginAssignmentsPageTest.validateAssignTenantSinglePluginTest(java.lang.reflect.Method)[pri:130, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:16:20 IST" name="initialization" finished-at="2023-04-29T16:16:24 IST" duration-ms="4791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAssignPluginAllTenantTest(java.lang.reflect.Method)[pri:131, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:16:24 IST" name="validateAssignPluginAllTenantTest" finished-at="2023-04-29T16:17:29 IST" duration-ms="64735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateAssignPluginAllTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Single plugin jar uploaded successfully]]>
            </line>
            <line>
              <![CDATA[New plugin jar is uploaded now we will assign it to all tenants]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin assigned to all tenant successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAssignPluginAllTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:17:29 IST" name="getResult" finished-at="2023-04-29T16:17:29 IST" duration-ms="115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAssignPluginAllTenantTest status=SUCCESS method=PluginAssignmentsPageTest.validateAssignPluginAllTenantTest(java.lang.reflect.Method)[pri:131, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:37:19 IST" name="initialization" finished-at="2023-04-29T16:37:30 IST" duration-ms="11675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePluginAssignmentsPageTest(java.lang.reflect.Method)[pri:159, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:37:30 IST" name="validatePluginAssignmentsPageTest" finished-at="2023-04-29T16:37:34 IST" duration-ms="4090" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validatePluginAssignmentsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53068}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6465d10b187ec4fc982b582b9b61050e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:53068}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6465d10b187ec4fc982b582b9b61050e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:326)
at jdk.internal.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
at com.ae.qa.pages.PluginAssignmentsPage.validatePluginAssignmentsPage(PluginAssignmentsPage.java:698)
at com.ae.qa.testcases.PluginAssignmentsPageTest.validatePluginAssignmentsPageTest(PluginAssignmentsPageTest.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePluginAssignmentsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T16:37:34 IST" name="getResult" finished-at="2023-04-29T16:37:37 IST" duration-ms="2201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePluginAssignmentsPageTest status=FAILURE method=PluginAssignmentsPageTest.validatePluginAssignmentsPageTest(java.lang.reflect.Method)[pri:159, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:38:27 IST" name="initialization" finished-at="2023-04-29T17:38:41 IST" duration-ms="13767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFInActiveAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:38:41 IST" name="validateWFInActiveAfterSysadminRemovesPluginPermissionTest" finished-at="2023-04-29T17:41:23 IST" duration-ms="161649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFInActiveAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Single plugin jar uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin Tab is Selected]]>
            </line>
            <line>
              <![CDATA[Plugin Assignment tab is Selected]]>
            </line>
            <line>
              <![CDATA[Save Button is Clicked]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[HexColor of WF Slider:-#ced4da]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFInActiveAfterSysadminRemovesPluginPermissionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:41:23 IST" name="getResult" finished-at="2023-04-29T17:41:23 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFInActiveAfterSysadminRemovesPluginPermissionTest status=SUCCESS method=PluginAssignmentsPageTest.validateWFInActiveAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1006, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:42:41 IST" name="initialization" finished-at="2023-04-29T17:42:49 IST" duration-ms="7763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFFailureAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:42:49 IST" name="validateWFFailureAfterSysadminRemovesPluginPermissionTest" finished-at="2023-04-29T17:43:09 IST" depends-on-methods="com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFInActiveAfterSysadminRemovesPluginPermissionTest" duration-ms="20148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFFailureAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Plugin permission is removed so workflow cannot be made inactive]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFFailureAfterSysadminRemovesPluginPermissionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:43:09 IST" name="getResult" finished-at="2023-04-29T17:43:11 IST" duration-ms="1809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFFailureAfterSysadminRemovesPluginPermissionTest status=SUCCESS method=PluginAssignmentsPageTest.validateWFFailureAfterSysadminRemovesPluginPermissionTest(java.lang.reflect.Method)[pri:1007, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:43:50 IST" name="initialization" finished-at="2023-04-29T17:43:56 IST" duration-ms="6089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:43:56 IST" name="validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest" finished-at="2023-04-29T17:44:48 IST" depends-on-methods="com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFFailureAfterSysadminRemovesPluginPermissionTest" duration-ms="52077" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginAssignmentsPageTest.validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugin Tab is Selected]]>
            </line>
            <line>
              <![CDATA[Plugin Assignment tab is Selected]]>
            </line>
            <line>
              <![CDATA[Save Button is Clicked]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[HexColor of WF Slider:-#4492d6]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80]" started-at="2023-04-29T17:44:48 IST" name="getResult" finished-at="2023-04-29T17:44:48 IST" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest status=SUCCESS method=PluginAssignmentsPageTest.validateWFActiveSuccessAfterSysadminAssignPluginPermissionTest(java.lang.reflect.Method)[pri:1008, instance:com.ae.qa.testcases.PluginAssignmentsPageTest@6d9f7a80] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PluginAssignmentsPageTest -->
      <class name="com.ae.qa.testcases.TenantsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:27:15 IST" name="initialization" finished-at="2023-04-29T14:27:36 IST" duration-ms="20917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddNewTenant(java.lang.reflect.Method)[pri:2, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:27:36 IST" name="validateAddNewTenant" finished-at="2023-04-29T14:28:14 IST" duration-ms="38116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateAddNewTenant(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddNewTenant -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:28:14 IST" name="getResult" finished-at="2023-04-29T14:28:14 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewTenant status=SUCCESS method=TenantsPageTest.validateAddNewTenant(java.lang.reflect.Method)[pri:2, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:28:14 IST" name="initialization" finished-at="2023-04-29T14:28:20 IST" duration-ms="5369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateaddNewTenantsWithDuplicateOrgCode(java.lang.reflect.Method)[pri:3, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:28:20 IST" name="validateaddNewTenantsWithDuplicateOrgCode" finished-at="2023-04-29T14:29:00 IST" duration-ms="40810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateaddNewTenantsWithDuplicateOrgCode(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Failure message after entering same org code : Duplicate org code [KG01].]]>
            </line>
            <line>
              <![CDATA[New Usernot created due to duplicate orgcode.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateaddNewTenantsWithDuplicateOrgCode -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:29:00 IST" name="getResult" finished-at="2023-04-29T14:29:01 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateaddNewTenantsWithDuplicateOrgCode status=SUCCESS method=TenantsPageTest.validateaddNewTenantsWithDuplicateOrgCode(java.lang.reflect.Method)[pri:3, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:29:01 IST" name="initialization" finished-at="2023-04-29T14:29:06 IST" duration-ms="5674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifyLicenseInfoTest(java.lang.reflect.Method)[pri:4, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:29:06 IST" name="verifyLicenseInfoTest" finished-at="2023-04-29T14:29:29 IST" duration-ms="22874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.verifyLicenseInfoTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[License status verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyLicenseInfoTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T14:29:29 IST" name="getResult" finished-at="2023-04-29T14:29:30 IST" duration-ms="786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLicenseInfoTest status=SUCCESS method=TenantsPageTest.verifyLicenseInfoTest(java.lang.reflect.Method)[pri:4, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T16:33:25 IST" name="initialization" finished-at="2023-04-29T16:33:31 IST" duration-ms="5904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTenantsPageTest(java.lang.reflect.Method)[pri:152, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T16:33:31 IST" name="validateTenantsPageTest" finished-at="2023-04-29T16:33:57 IST" duration-ms="25525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateTenantsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenants tab is clicked]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Tenants and Expected page title is: Tenants]]>
            </line>
            <line>
              <![CDATA[Search Functionality working fine for Tenants & Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTenantsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T16:33:57 IST" name="getResult" finished-at="2023-04-29T16:33:58 IST" duration-ms="1103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTenantsPageTest status=SUCCESS method=TenantsPageTest.validateTenantsPageTest(java.lang.reflect.Method)[pri:152, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:02:27 IST" name="initialization" finished-at="2023-04-29T17:02:38 IST" duration-ms="11455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateAllotmentBasedTenantTest(java.lang.reflect.Method)[pri:702, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:02:38 IST" name="validateCreateAllotmentBasedTenantTest" finished-at="2023-04-29T17:03:54 IST" duration-ms="75999" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateCreateAllotmentBasedTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#licenseCategory"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54712}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b80f45554fa43e3453dab2d34bfcc0f2
*** Element info: {Using=id, value=licenseCategory}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#licenseCategory"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54712}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b80f45554fa43e3453dab2d34bfcc0f2
*** Element info: {Using=id, value=licenseCategory}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getTagName(Unknown Source)
at org.openqa.selenium.support.ui.Select.<init>(Select.java:45)
at com.ae.qa.pages.TenantsPage.validateCreateAllotmentBasedTenant(TenantsPage.java:377)
at com.ae.qa.testcases.TenantsPageTest.validateCreateAllotmentBasedTenantTest(TenantsPageTest.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateAllotmentBasedTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:03:54 IST" name="getResult" finished-at="2023-04-29T17:03:55 IST" duration-ms="744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateAllotmentBasedTenantTest status=FAILURE method=TenantsPageTest.validateCreateAllotmentBasedTenantTest(java.lang.reflect.Method)[pri:702, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:06:23 IST" name="initialization" finished-at="2023-04-29T17:06:36 IST" duration-ms="12801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAllocateConsumptionBasedTest(java.lang.reflect.Method)[pri:705, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:06:36 IST" name="validateAllocateConsumptionBasedTest" finished-at="2023-04-29T17:06:52 IST" duration-ms="16202" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateAllocateConsumptionBasedTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: received Inspector.detached event
  (failed to check if window was closed: disconnected: unable to send message to renderer)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
*** Element info: {Using=xpath, value=//span[(text()='Tenants')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: received Inspector.detached event
  (failed to check if window was closed: disconnected: unable to send message to renderer)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
*** Element info: {Using=xpath, value=//span[(text()='Tenants')]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pages.TenantsPage.validateAllocateConsumptionBased(TenantsPage.java:416)
at com.ae.qa.testcases.TenantsPageTest.validateAllocateConsumptionBasedTest(TenantsPageTest.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAllocateConsumptionBasedTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:06:52 IST" name="getResult" finished-at="2023-04-29T17:06:52 IST" duration-ms="9" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAllocateConsumptionBasedTest status=FAILURE method=TenantsPageTest.validateAllocateConsumptionBasedTest(java.lang.reflect.Method)[pri:705, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:06:53 IST" name="initialization" finished-at="2023-04-29T17:06:53 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAmendLicenseTest(java.lang.reflect.Method)[pri:706, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:06:53 IST" name="validateAmendLicenseTest" finished-at="2023-04-29T17:06:53 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateAmendLicenseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAmendLicenseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:06:53 IST" name="getResult" finished-at="2023-04-29T17:06:53 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:15 IST" name="initialization" finished-at="2023-04-29T17:47:15 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDisableTenantTest(java.lang.reflect.Method)[pri:1013, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="validateDisableTenantTest" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateDisableTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="getResult" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="initialization" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestDisabledTenantTest(java.lang.reflect.Method)[pri:1014, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="validateSubmitRequestDisabledTenantTest" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateSubmitRequestDisabledTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestDisabledTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="getResult" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="initialization" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSubmitRequestEnableTenantTest(java.lang.reflect.Method)[pri:1015, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="validateSubmitRequestEnableTenantTest" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateSubmitRequestEnableTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSubmitRequestEnableTenantTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="initialization" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="getResult" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDisableAllomentBasedTenantTest(java.lang.reflect.Method)[pri:1016, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="validateDisableAllomentBasedTenantTest" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateDisableAllomentBasedTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDisableAllomentBasedTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="getResult" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="initialization" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEnableAllomentBasedTenantTest(java.lang.reflect.Method)[pri:1017, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="validateEnableAllomentBasedTenantTest" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantsPageTest.validateEnableAllomentBasedTenantTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54848}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: eace795d75e2de03276cf407347afe63
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEnableAllomentBasedTenantTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantsPageTest@232a7d73]" started-at="2023-04-29T17:47:16 IST" name="getResult" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.TenantsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:23:00 IST" name="initialization" finished-at="2023-04-29T15:23:04 IST" duration-ms="4012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadAgentTest(java.lang.reflect.Method)[pri:70, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:23:04 IST" name="validateDownloadAgentTest" finished-at="2023-04-29T15:25:17 IST" duration-ms="132390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDownloadAgentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to workflow assignment Tab]]>
            </line>
            <line>
              <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
            </line>
            <line>
              <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
            </line>
            <line>
              <![CDATA[Now User needs to download agent first]]>
            </line>
            <line>
              <![CDATA[User navigated to Agent List Tab]]>
            </line>
            <line>
              <![CDATA[Agent download started]]>
            </line>
            <line>
              <![CDATA[File unzipped properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadAgentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:25:17 IST" name="getResult" finished-at="2023-04-29T15:25:17 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadAgentTest status=SUCCESS method=AgentListPageTestTA.validateDownloadAgentTest(java.lang.reflect.Method)[pri:70, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:25:17 IST" name="initialization" finished-at="2023-04-29T15:25:36 IST" duration-ms="18706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCheckStatusOfAgent(java.lang.reflect.Method)[pri:71, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:25:36 IST" name="validateCheckStatusOfAgent" finished-at="2023-04-29T15:25:56 IST" duration-ms="20042" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateCheckStatusOfAgent(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:49329}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5a57b66b7991eea99b9451a6ceb5e8d2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:49329}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5a57b66b7991eea99b9451a6ceb5e8d2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pagesTenantAdmin.AgentListPageTA.checkStatusOfAgent(AgentListPageTA.java:152)
at com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateCheckStatusOfAgent(AgentListPageTestTA.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCheckStatusOfAgent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:25:56 IST" name="getResult" finished-at="2023-04-29T15:25:59 IST" duration-ms="2868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckStatusOfAgent status=FAILURE method=AgentListPageTestTA.validateCheckStatusOfAgent(java.lang.reflect.Method)[pri:71, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:38:44 IST" name="initialization" finished-at="2023-04-29T15:38:48 IST" duration-ms="3808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInAgentList(java.lang.reflect.Method)[pri:88, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:38:48 IST" name="validatecheckColumnsInAgentList" finished-at="2023-04-29T15:39:09 IST" duration-ms="20949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatecheckColumnsInAgentList(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User navigated to AgentList tab]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInAgentList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:39:09 IST" name="getResult" finished-at="2023-04-29T15:39:09 IST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInAgentList status=SUCCESS method=AgentListPageTestTA.validatecheckColumnsInAgentList(java.lang.reflect.Method)[pri:88, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:39:09 IST" name="initialization" finished-at="2023-04-29T15:39:13 IST" duration-ms="3983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInAgentListTA(java.lang.reflect.Method)[pri:89, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:39:13 IST" name="validatedeselectAllInAgentListTA" finished-at="2023-04-29T15:39:34 IST" duration-ms="21427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatedeselectAllInAgentListTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User navigated to AgentList tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 3]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 3]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Agent Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Resource Utilization]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Agent Name,Status and Resource Utilization.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInAgentListTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:39:34 IST" name="getResult" finished-at="2023-04-29T15:39:35 IST" duration-ms="608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInAgentListTA status=SUCCESS method=AgentListPageTestTA.validatedeselectAllInAgentListTA(java.lang.reflect.Method)[pri:89, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:39:35 IST" name="initialization" finished-at="2023-04-29T15:39:40 IST" duration-ms="5079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSpecificColumnInAgentList(java.lang.reflect.Method)[pri:90, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:39:40 IST" name="validateSpecificColumnInAgentList" finished-at="2023-04-29T15:40:07 IST" duration-ms="27246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateSpecificColumnInAgentList(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User navigated to AgentList tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Agent Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Execution Threads]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Executing Workflows]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Resource Utilization]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSpecificColumnInAgentList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T15:40:07 IST" name="getResult" finished-at="2023-04-29T15:40:07 IST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSpecificColumnInAgentList status=SUCCESS method=AgentListPageTestTA.validateSpecificColumnInAgentList(java.lang.reflect.Method)[pri:90, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T17:47:16 IST" name="initialization" finished-at="2023-04-29T17:47:22 IST" duration-ms="5584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentRestartTest(java.lang.reflect.Method)[pri:1019, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T17:47:22 IST" name="validateAgentRestartTest" finished-at="2023-04-29T17:47:57 IST" duration-ms="34598" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateAgentRestartTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57031}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 83c4099e4001086b63b1177f6101fc7b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57031}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 83c4099e4001086b63b1177f6101fc7b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pagesTenantAdmin.AgentListPageTA.validateAgentRestart(AgentListPageTA.java:643)
at com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateAgentRestartTest(AgentListPageTestTA.java:138)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Agent is in running mode]]>
            </line>
            <line>
              <![CDATA[Restart button is clicked]]>
            </line>
            <line>
              <![CDATA[Confirm Restart Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Restart button is clicked and agent is going in Stopped Status successfully]]>
            </line>
            <line>
              <![CDATA[Current status of Agent after pressing the Restart button is: Running]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentRestartTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T17:47:57 IST" name="getResult" finished-at="2023-04-29T17:47:57 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentRestartTest status=FAILURE method=AgentListPageTestTA.validateAgentRestartTest(java.lang.reflect.Method)[pri:1019, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T18:59:40 IST" name="initialization" finished-at="2023-04-29T18:59:49 IST" duration-ms="8855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteAgentTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T18:59:49 IST" name="validateDeleteAgentTest" finished-at="2023-04-29T19:01:07 IST" duration-ms="77602" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDeleteAgentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Agent is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in running mode]]>
            </line>
            <line>
              <![CDATA[Stop Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Confirm Stop Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Actual_Message:-Stopping agent [DELL@DESKTOP-5VHKQUJ] is in progress]]>
            </line>
            <line>
              <![CDATA[Expected Message:- Stopping agent [DELL@DESKTOP-5VHKQUJ] is in progress]]>
            </line>
            <line>
              <![CDATA[Agent is stopped successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Agent is: Running]]>
            </line>
            <line>
              <![CDATA[Agent is in Stopped mode]]>
            </line>
            <line>
              <![CDATA[Delete Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Confirm Delete Button is Clicked]]>
            </line>
            <line>
              <![CDATA[Agent is deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteAgentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:01:07 IST" name="getResult" finished-at="2023-04-29T19:01:07 IST" duration-ms="483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteAgentTest status=SUCCESS method=AgentListPageTestTA.validateDeleteAgentTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:01:07 IST" name="initialization" finished-at="2023-04-29T19:01:18 IST" duration-ms="10941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2001, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:01:18 IST" name="validateassignAssistedAgentToUser" finished-at="2023-04-29T19:01:49 IST" duration-ms="30972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateassignAssistedAgentToUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assign To User Tab]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateassignAssistedAgentToUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:01:49 IST" name="getResult" finished-at="2023-04-29T19:01:50 IST" duration-ms="636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateassignAssistedAgentToUser status=SUCCESS method=AgentListPageTestTA.validateassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2001, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:01:50 IST" name="initialization" finished-at="2023-04-29T19:01:56 IST" duration-ms="6372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadAssistedAgentTest(java.lang.reflect.Method)[pri:2002, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:01:56 IST" name="validateDownloadAssistedAgentTest" finished-at="2023-04-29T19:04:13 IST" duration-ms="136367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateDownloadAssistedAgentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to workflow assignment Tab]]>
            </line>
            <line>
              <![CDATA[When Agent is not registered and user try to assign workflow to agent then get error message as: No agent registered]]>
            </line>
            <line>
              <![CDATA[Getting correct error when user didnt register agent & try to assign workflow]]>
            </line>
            <line>
              <![CDATA[Now User needs to download agent first]]>
            </line>
            <line>
              <![CDATA[User navigated to Agent List Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agent Tab]]>
            </line>
            <line>
              <![CDATA[Assisted Agent download started]]>
            </line>
            <line>
              <![CDATA[File unzipped properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadAssistedAgentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:04:13 IST" name="getResult" finished-at="2023-04-29T19:04:13 IST" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadAssistedAgentTest status=SUCCESS method=AgentListPageTestTA.validateDownloadAssistedAgentTest(java.lang.reflect.Method)[pri:2002, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:04:13 IST" name="initialization" finished-at="2023-04-29T19:04:20 IST" duration-ms="7239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckStatusOfAssistedAgent(java.lang.reflect.Method)[pri:2003, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:04:20 IST" name="validatecheckStatusOfAssistedAgent" finished-at="2023-04-29T19:04:51 IST" duration-ms="30580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validatecheckStatusOfAssistedAgent(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[Current status of Assisted Agent is: Running]]>
            </line>
            <line>
              <![CDATA[Assisted Agent is in running mode]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckStatusOfAssistedAgent -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:04:51 IST" name="getResult" finished-at="2023-04-29T19:04:52 IST" duration-ms="884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckStatusOfAssistedAgent status=SUCCESS method=AgentListPageTestTA.validatecheckStatusOfAssistedAgent(java.lang.reflect.Method)[pri:2003, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:04:52 IST" name="initialization" finished-at="2023-04-29T19:05:02 IST" duration-ms="10433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateunassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2004, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:05:02 IST" name="validateunassignAssistedAgentToUser" finished-at="2023-04-29T19:06:29 IST" duration-ms="86657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.validateunassignAssistedAgentToUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assign To User Tab]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User searched for functionality: Agents and Found is: Agents]]>
            </line>
            <line>
              <![CDATA[Search Functionality working properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assign To User Tab]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User is not assigned to Assisted agent so Agent tab is not visible]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateunassignAssistedAgentToUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:06:29 IST" name="getResult" finished-at="2023-04-29T19:06:29 IST" duration-ms="636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateunassignAssistedAgentToUser status=SUCCESS method=AgentListPageTestTA.validateunassignAssistedAgentToUser(java.lang.reflect.Method)[pri:2004, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:06:29 IST" name="initialization" finished-at="2023-04-29T19:06:35 IST" duration-ms="5220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditAssistedAgentName(java.lang.reflect.Method)[pri:2005, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:06:35 IST" name="ValidateEditAssistedAgentName" finished-at="2023-04-29T19:07:02 IST" duration-ms="27814" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA.ValidateEditAssistedAgentName(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Agentslist Tab]]>
            </line>
            <line>
              <![CDATA[User navigated to Assisted Agents Tab]]>
            </line>
            <line>
              <![CDATA[User clicked on Edit Btn]]>
            </line>
            <line>
              <![CDATA[Actual message displayed on screen is: Changes saved to the agent and Expected message is: Changes saved to the agent]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked and Assisted agent name is changed successfully]]>
            </line>
            <line>
              <![CDATA[Edited Assisted Agent Name:- DELL@DESKTOP-5VHKQUJ]]>
            </line>
            <line>
              <![CDATA[Agent Name Changed successfully.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditAssistedAgentName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39]" started-at="2023-04-29T19:07:02 IST" name="getResult" finished-at="2023-04-29T19:07:03 IST" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditAssistedAgentName status=SUCCESS method=AgentListPageTestTA.ValidateEditAssistedAgentName(java.lang.reflect.Method)[pri:2005, instance:com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA@4a194c39] output=User navigated to Agents Tab]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.AgentListPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.HomePageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T15:05:31 IST" name="initialization" finished-at="2023-04-29T15:05:37 IST" duration-ms="5550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadLicenseTest(java.lang.reflect.Method)[pri:43, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T15:05:37 IST" name="validateUploadLicenseTest" finished-at="2023-04-29T15:06:13 IST" duration-ms="36391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateUploadLicenseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Import is not possible w/o License ]]>
            </line>
            <line>
              <![CDATA[HomeTab is clicked]]>
            </line>
            <line>
              <![CDATA[Upload Licens ebox is clicked]]>
            </line>
            <line>
              <![CDATA[License file submitted]]>
            </line>
            <line>
              <![CDATA[Upload button is clicked]]>
            </line>
            <line>
              <![CDATA[License Uploaded successfully for Tenant]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadLicenseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T15:06:13 IST" name="getResult" finished-at="2023-04-29T15:06:14 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadLicenseTest status=SUCCESS method=HomePageTestTA.validateUploadLicenseTest(java.lang.reflect.Method)[pri:43, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb] output=Workflows Tab is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T16:27:02 IST" name="initialization" finished-at="2023-04-29T16:27:08 IST" duration-ms="6604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSearchFunctionalityTATest(java.lang.reflect.Method)[pri:145, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T16:27:08 IST" name="validateSearchFunctionalityTATest" finished-at="2023-04-29T16:27:20 IST" duration-ms="11686" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateSearchFunctionalityTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User searched for functionality: Single Sign-On and Found is: Single Sign-On]]>
            </line>
            <line>
              <![CDATA[Search Functionality working properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSearchFunctionalityTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T16:27:20 IST" name="getResult" finished-at="2023-04-29T16:27:20 IST" duration-ms="115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchFunctionalityTATest status=SUCCESS method=HomePageTestTA.validateSearchFunctionalityTATest(java.lang.reflect.Method)[pri:145, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T17:06:53 IST" name="initialization" finished-at="2023-04-29T17:07:07 IST" duration-ms="13886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLicenseDetailTabTest(java.lang.reflect.Method)[pri:707, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T17:07:07 IST" name="validateLicenseDetailTabTest" finished-at="2023-04-29T17:07:23 IST" duration-ms="16104" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateLicenseDetailTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.ae.qa.pagesTenantAdmin.HomePageTA.validateLicenseDetailTab(HomePageTA.java:245)
at com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateLicenseDetailTabTest(HomePageTestTA.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Home Tab is clicked]]>
            </line>
            <line>
              <![CDATA[License Details Tab is clicked]]>
            </line>
            <line>
              <![CDATA[No record(s) found!]]>
            </line>
            <line>
              <![CDATA[Actual License details :-[No record(s) found!]]]>
            </line>
            <line>
              <![CDATA[Expected License details :-[DEVELOPMENT, 10, 20, 3, 10000, 30, 15-Sep-2022, 14-Sep-2023]]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLicenseDetailTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T17:07:23 IST" name="getResult" finished-at="2023-04-29T17:07:25 IST" duration-ms="2025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLicenseDetailTabTest status=FAILURE method=HomePageTestTA.validateLicenseDetailTabTest(java.lang.reflect.Method)[pri:707, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T17:07:26 IST" name="initialization" finished-at="2023-04-29T17:07:42 IST" duration-ms="15947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLicenseDetailHomepageTest(java.lang.reflect.Method)[pri:708, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T17:07:42 IST" name="validateLicenseDetailHomepageTest" finished-at="2023-04-29T17:07:55 IST" duration-ms="13448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HomePageTestTA.validateLicenseDetailHomepageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Agent Thread count:-20]]>
            </line>
            <line>
              <![CDATA[Actual Step Units count:-10000]]>
            </line>
            <line>
              <![CDATA[Actual Expiry Date:-14-Sep-2023]]>
            </line>
            <line>
              <![CDATA[License details on Homepage are validated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLicenseDetailHomepageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb]" started-at="2023-04-29T17:07:55 IST" name="getResult" finished-at="2023-04-29T17:07:59 IST" duration-ms="3138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLicenseDetailHomepageTest status=SUCCESS method=HomePageTestTA.validateLicenseDetailHomepageTest(java.lang.reflect.Method)[pri:708, instance:com.ae.qa.testcasesTenantAdmin.HomePageTestTA@1817f1eb] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.HomePageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.InformationPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:10:34 IST" name="initialization" finished-at="2023-04-29T16:10:38 IST" duration-ms="3936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLastLoginTATest(java.lang.reflect.Method)[pri:123, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:10:38 IST" name="validateLastLoginTATest" finished-at="2023-04-29T16:10:59 IST" duration-ms="20791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateLastLoginTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Last login time displayed successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLastLoginTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:10:59 IST" name="getResult" finished-at="2023-04-29T16:10:59 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLastLoginTATest status=SUCCESS method=InformationPageTestTA.validateLastLoginTATest(java.lang.reflect.Method)[pri:123, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:10:59 IST" name="initialization" finished-at="2023-04-29T16:11:03 IST" duration-ms="4171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateViewProfileTATest(java.lang.reflect.Method)[pri:124, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:11:03 IST" name="validateViewProfileTATest" finished-at="2023-04-29T16:11:49 IST" duration-ms="45673" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateViewProfileTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Profile details validation successfully.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateViewProfileTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:11:49 IST" name="getResult" finished-at="2023-04-29T16:11:50 IST" duration-ms="505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateViewProfileTATest status=SUCCESS method=InformationPageTestTA.validateViewProfileTATest(java.lang.reflect.Method)[pri:124, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:11:50 IST" name="initialization" finished-at="2023-04-29T16:11:54 IST" duration-ms="4253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSetTenantLogo(java.lang.reflect.Method)[pri:125, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:11:54 IST" name="validateSetTenantLogo" finished-at="2023-04-29T16:12:22 IST" duration-ms="28600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateSetTenantLogo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant logo uploaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSetTenantLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:12:22 IST" name="getResult" finished-at="2023-04-29T16:12:23 IST" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSetTenantLogo status=SUCCESS method=InformationPageTestTA.validateSetTenantLogo(java.lang.reflect.Method)[pri:125, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:12:23 IST" name="initialization" finished-at="2023-04-29T16:12:29 IST" duration-ms="6521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveTenantLogo(java.lang.reflect.Method)[pri:126, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:12:29 IST" name="validateRemoveTenantLogo" finished-at="2023-04-29T16:12:51 IST" duration-ms="21572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateRemoveTenantLogo(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
            <line>
              <![CDATA[Tenant logo removed successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveTenantLogo -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:12:51 IST" name="getResult" finished-at="2023-04-29T16:12:51 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveTenantLogo status=SUCCESS method=InformationPageTestTA.validateRemoveTenantLogo(java.lang.reflect.Method)[pri:126, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:45:43 IST" name="initialization" finished-at="2023-04-29T16:45:55 IST" duration-ms="11352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAboutTabTest(java.lang.reflect.Method)[pri:300, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:45:55 IST" name="validateAboutTabTest" finished-at="2023-04-29T16:46:23 IST" duration-ms="27867" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.InformationPageTestTA.validateAboutTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAboutTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64]" started-at="2023-04-29T16:46:23 IST" name="getResult" finished-at="2023-04-29T16:46:24 IST" duration-ms="1150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAboutTabTest status=SUCCESS method=InformationPageTestTA.validateAboutTabTest(java.lang.reflect.Method)[pri:300, instance:com.ae.qa.testcasesTenantAdmin.InformationPageTestTA@5ccbeb64] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.InformationPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@5a9d6f02]" started-at="2023-04-29T16:04:16 IST" name="initialization" finished-at="2023-04-29T16:04:20 IST" duration-ms="4786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdationPurgePolicyDurationTATest(java.lang.reflect.Method)[pri:117, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@5a9d6f02]" started-at="2023-04-29T16:04:20 IST" name="validateUpdationPurgePolicyDurationTATest" finished-at="2023-04-29T16:04:58 IST" duration-ms="37958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA.validateUpdationPurgePolicyDurationTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Purge policy UPDATED successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdationPurgePolicyDurationTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@5a9d6f02]" started-at="2023-04-29T16:04:58 IST" name="getResult" finished-at="2023-04-29T16:04:58 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdationPurgePolicyDurationTATest status=SUCCESS method=PurgePolicyPageTestTA.validateUpdationPurgePolicyDurationTATest(java.lang.reflect.Method)[pri:117, instance:com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA@5a9d6f02] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.PurgePolicyPageTestTA -->
      <class name="com.ae.qa.testcases.InformationPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:57:00 IST" name="initialization" finished-at="2023-04-29T14:57:05 IST" duration-ms="5129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLastLoginTest(java.lang.reflect.Method)[pri:29, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:57:05 IST" name="validateLastLoginTest" finished-at="2023-04-29T14:57:34 IST" duration-ms="29094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateLastLoginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Last login time displayed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLastLoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:57:34 IST" name="getResult" finished-at="2023-04-29T14:57:35 IST" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLastLoginTest status=SUCCESS method=InformationPageTest.validateLastLoginTest(java.lang.reflect.Method)[pri:29, instance:com.ae.qa.testcases.InformationPageTest@7f36662c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:57:35 IST" name="initialization" finished-at="2023-04-29T14:57:39 IST" duration-ms="4075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateViewProfileTest(java.lang.reflect.Method)[pri:30, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:57:39 IST" name="validateViewProfileTest" finished-at="2023-04-29T14:58:25 IST" duration-ms="46259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateViewProfileTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Profile details validation successfully.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateViewProfileTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:58:25 IST" name="getResult" finished-at="2023-04-29T14:58:25 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateViewProfileTest status=SUCCESS method=InformationPageTest.validateViewProfileTest(java.lang.reflect.Method)[pri:30, instance:com.ae.qa.testcases.InformationPageTest@7f36662c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:58:25 IST" name="initialization" finished-at="2023-04-29T14:58:30 IST" duration-ms="4534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateChangePasswordTest(java.lang.reflect.Method)[pri:31, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:58:30 IST" name="validateChangePasswordTest" finished-at="2023-04-29T14:59:00 IST" duration-ms="29932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateChangePasswordTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateChangePasswordTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T14:59:00 IST" name="getResult" finished-at="2023-04-29T14:59:00 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateChangePasswordTest status=SUCCESS method=InformationPageTest.validateChangePasswordTest(java.lang.reflect.Method)[pri:31, instance:com.ae.qa.testcases.InformationPageTest@7f36662c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T16:46:24 IST" name="initialization" finished-at="2023-04-29T16:46:37 IST" duration-ms="12806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAboutTabTest(java.lang.reflect.Method)[pri:301, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T16:46:37 IST" name="validateAboutTabTest" finished-at="2023-04-29T16:47:05 IST" duration-ms="28156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.InformationPageTest.validateAboutTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAboutTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.InformationPageTest@7f36662c]" started-at="2023-04-29T16:47:05 IST" name="getResult" finished-at="2023-04-29T16:47:06 IST" duration-ms="761" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAboutTabTest status=SUCCESS method=InformationPageTest.validateAboutTabTest(java.lang.reflect.Method)[pri:301, instance:com.ae.qa.testcases.InformationPageTest@7f36662c] output=User log in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.InformationPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:54:04 IST" name="initialization" finished-at="2023-04-29T17:54:11 IST" duration-ms="6792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadandAssignPSTest(java.lang.reflect.Method)[pri:1034, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:54:11 IST" name="validateDownloadandAssignPSTest" finished-at="2023-04-29T17:55:05 IST" duration-ms="54575" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateDownloadandAssignPSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button type="button" class="btn btn-primary btn-height">...</button> is not clickable at point (1311, 157). Other element would receive the click: <div style="position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(255, 255, 255, 0.4 ); z-index: 1200;">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57500}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2748e4832f4758210e2c89eef6585b61]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button type="button" class="btn btn-primary btn-height">...</button> is not clickable at point (1311, 157). Other element would receive the click: <div style="position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(255, 255, 255, 0.4 ); z-index: 1200;">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57500}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2748e4832f4758210e2c89eef6585b61
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.ProcessStudioPageTA.validateDownloadandAssignPS(ProcessStudioPageTA.java:70)
at com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateDownloadandAssignPSTest(ProcessStudioPageTestTA.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Process Studio Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Process-studio download started]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadandAssignPSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:55:06 IST" name="getResult" finished-at="2023-04-29T17:55:07 IST" duration-ms="764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadandAssignPSTest status=FAILURE method=ProcessStudioPageTestTA.validateDownloadandAssignPSTest(java.lang.reflect.Method)[pri:1034, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:55:07 IST" name="initialization" finished-at="2023-04-29T17:55:32 IST" duration-ms="25105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUnAssignPSTest(java.lang.reflect.Method)[pri:1035, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:55:32 IST" name="validateUnAssignPSTest" finished-at="2023-04-29T17:56:05 IST" duration-ms="33748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateUnAssignPSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Process Studio Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Process studio license is unassigned correctly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUnAssignPSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:56:05 IST" name="getResult" finished-at="2023-04-29T17:56:06 IST" duration-ms="305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnAssignPSTest status=SUCCESS method=ProcessStudioPageTestTA.validateUnAssignPSTest(java.lang.reflect.Method)[pri:1035, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:56:06 IST" name="initialization" finished-at="2023-04-29T17:56:17 IST" duration-ms="11113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateProcessStudioPageTATest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:56:17 IST" name="validateProcessStudioPageTATest" finished-at="2023-04-29T17:56:36 IST" duration-ms="19182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateProcessStudioPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Process Studio and Expected page title is: Process Studio]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProcessStudioPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:56:36 IST" name="getResult" finished-at="2023-04-29T17:56:38 IST" duration-ms="1905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProcessStudioPageTATest status=SUCCESS method=ProcessStudioPageTestTA.validateProcessStudioPageTATest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:59:31 IST" name="initialization" finished-at="2023-04-29T17:59:38 IST" duration-ms="7193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateProcessStudioDownloadLinuxTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T17:59:38 IST" name="validateProcessStudioDownloadLinuxTest" finished-at="2023-04-29T18:00:06 IST" duration-ms="27756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA.validateProcessStudioDownloadLinuxTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Process Studio Tab is clicked]]>
            </line>
            <line>
              <![CDATA[PS download button for Linux is clicked successfully]]>
            </line>
            <line>
              <![CDATA[PS for Linux is downloaded successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateProcessStudioDownloadLinuxTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7]" started-at="2023-04-29T18:00:06 IST" name="getResult" finished-at="2023-04-29T18:00:09 IST" duration-ms="2825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateProcessStudioDownloadLinuxTest status=SUCCESS method=ProcessStudioPageTestTA.validateProcessStudioDownloadLinuxTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA@4dc8caa7] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.ProcessStudioPageTestTA -->
      <class name="com.ae.qa.testcases.SystemUsersPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:29:30 IST" name="initialization" finished-at="2023-04-29T14:29:36 IST" duration-ms="5606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="creatingSystemAdminTest(java.lang.reflect.Method)[pri:5, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:29:36 IST" name="creatingSystemAdminTest" finished-at="2023-04-29T14:30:46 IST" duration-ms="70789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.creatingSystemAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[System Admin is verified and present in the webtable]]>
            </line>
          </reporter-output>
        </test-method> <!-- creatingSystemAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:30:46 IST" name="getResult" finished-at="2023-04-29T14:30:47 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=creatingSystemAdminTest status=SUCCESS method=SystemUsersPageTest.creatingSystemAdminTest(java.lang.reflect.Method)[pri:5, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:30:47 IST" name="initialization" finished-at="2023-04-29T14:30:52 IST" duration-ms="4920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditSystemUsers(java.lang.reflect.Method)[pri:6, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:30:52 IST" name="validateEditSystemUsers" finished-at="2023-04-29T14:31:57 IST" duration-ms="65798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateEditSystemUsers(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[System User details got edited.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditSystemUsers -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:31:57 IST" name="getResult" finished-at="2023-04-29T14:31:58 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditSystemUsers status=SUCCESS method=SystemUsersPageTest.validateEditSystemUsers(java.lang.reflect.Method)[pri:6, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:31:58 IST" name="initialization" finished-at="2023-04-29T14:32:02 IST" duration-ms="4127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePasswordMismatch(java.lang.reflect.Method)[pri:7, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:32:02 IST" name="validatePasswordMismatch" finished-at="2023-04-29T14:33:02 IST" duration-ms="59859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validatePasswordMismatch(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Actual message when user both passwords are not same: Passwords Mismatch!]]>
            </line>
            <line>
              <![CDATA[Got correct error when there is mismatch in password]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePasswordMismatch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T14:33:02 IST" name="getResult" finished-at="2023-04-29T14:33:02 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePasswordMismatch status=SUCCESS method=SystemUsersPageTest.validatePasswordMismatch(java.lang.reflect.Method)[pri:7, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T16:33:58 IST" name="initialization" finished-at="2023-04-29T16:34:04 IST" duration-ms="5950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSystemUsersPageTest(java.lang.reflect.Method)[pri:153, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T16:34:04 IST" name="validateSystemUsersPageTest" finished-at="2023-04-29T16:34:30 IST" duration-ms="26601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateSystemUsersPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: System Users and Expected page title is: System Users]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSystemUsersPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T16:34:30 IST" name="getResult" finished-at="2023-04-29T16:34:31 IST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSystemUsersPageTest status=SUCCESS method=SystemUsersPageTest.validateSystemUsersPageTest(java.lang.reflect.Method)[pri:153, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:03:55 IST" name="initialization" finished-at="2023-04-29T17:04:09 IST" duration-ms="13643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreatingTenantLicenseAdminTest(java.lang.reflect.Method)[pri:703, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:04:09 IST" name="validateCreatingTenantLicenseAdminTest" finished-at="2023-04-29T17:05:25 IST" duration-ms="76304" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateCreatingTenantLicenseAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='options-list']/li/label[contains(text(),'SYSADMIN')]/span"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54758}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1bb9381e7e77cbdd6732bd36cf9a7ea6
*** Element info: {Using=xpath, value=//div[@id='options-list']/li/label[contains(text(),'SYSADMIN')]/span}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='options-list']/li/label[contains(text(),'SYSADMIN')]/span"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54758}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1bb9381e7e77cbdd6732bd36cf9a7ea6
*** Element info: {Using=xpath, value=//div[@id='options-list']/li/label[contains(text(),'SYSADMIN')]/span}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.ae.qa.pages.SystemUsersPage.creation(SystemUsersPage.java:114)
at com.ae.qa.pages.SystemUsersPage.creatingTenantLicenseAdmin(SystemUsersPage.java:162)
at com.ae.qa.testcases.SystemUsersPageTest.validateCreatingTenantLicenseAdminTest(SystemUsersPageTest.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreatingTenantLicenseAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:05:25 IST" name="getResult" finished-at="2023-04-29T17:05:25 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreatingTenantLicenseAdminTest status=FAILURE method=SystemUsersPageTest.validateCreatingTenantLicenseAdminTest(java.lang.reflect.Method)[pri:703, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:05:25 IST" name="initialization" finished-at="2023-04-29T17:05:37 IST" duration-ms="11650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditTenantLicenseAdminTest(java.lang.reflect.Method)[pri:704, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:05:37 IST" name="validateEditTenantLicenseAdminTest" finished-at="2023-04-29T17:06:23 IST" duration-ms="45705" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateEditTenantLicenseAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate an element using xpath=//table/tr/td/label[@title='TLAdmin01']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath=//table/tr/td/label[@title='TLAdmin01']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.ae.qa.pages.SystemUsersPage.validateEditTenantLicenseAdmin(SystemUsersPage.java:191)
at com.ae.qa.testcases.SystemUsersPageTest.validateEditTenantLicenseAdminTest(SystemUsersPageTest.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditTenantLicenseAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:06:23 IST" name="getResult" finished-at="2023-04-29T17:06:23 IST" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditTenantLicenseAdminTest status=FAILURE method=SystemUsersPageTest.validateEditTenantLicenseAdminTest(java.lang.reflect.Method)[pri:704, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54808}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e0cd5630d22e1c617b158d790994d645]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54808}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e0cd5630d22e1c617b158d790994d645
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="validateDeleteSystemAdminTest(java.lang.reflect.Method)[pri:1018, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:47:16 IST" name="validateDeleteSystemAdminTest" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemUsersPageTest.validateDeleteSystemAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54808}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e0cd5630d22e1c617b158d790994d645]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54808}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e0cd5630d22e1c617b158d790994d645
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.ae.qa.base.TestBase.getScreenShot(TestBase.java:114)
at com.ae.qa.base.TestBase.getResult(TestBase.java:204)
at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteSystemAdminTest -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:47:16 IST" name="initialization" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemUsersPageTest@4b41e4dd]" started-at="2023-04-29T17:47:16 IST" name="getResult" finished-at="2023-04-29T17:47:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SystemUsersPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T16:29:26 IST" name="initialization" finished-at="2023-04-29T16:29:32 IST" duration-ms="5763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationTypesTATest(java.lang.reflect.Method)[pri:149, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T16:29:32 IST" name="validateAddIntegrationTypesTATest" finished-at="2023-04-29T16:30:03 IST" duration-ms="31061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateAddIntegrationTypesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationTypesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T16:30:03 IST" name="getResult" finished-at="2023-04-29T16:30:03 IST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationTypesTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateAddIntegrationTypesTATest(java.lang.reflect.Method)[pri:149, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T16:44:51 IST" name="initialization" finished-at="2023-04-29T16:45:00 IST" duration-ms="8517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationTypesPageTATest(java.lang.reflect.Method)[pri:196, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T16:45:00 IST" name="validateIntegrationTypesPageTATest" finished-at="2023-04-29T16:45:17 IST" duration-ms="16901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateIntegrationTypesPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationTypesPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T16:45:17 IST" name="getResult" finished-at="2023-04-29T16:45:17 IST" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationTypesPageTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateIntegrationTypesPageTATest(java.lang.reflect.Method)[pri:196, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T17:53:03 IST" name="initialization" finished-at="2023-04-29T17:53:09 IST" duration-ms="5846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationTypesTATest(java.lang.reflect.Method)[pri:1031, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T17:53:09 IST" name="validateEditIntegrationTypesTATest" finished-at="2023-04-29T17:53:41 IST" duration-ms="31904" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateEditIntegrationTypesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type updated successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationTypesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T17:53:41 IST" name="getResult" finished-at="2023-04-29T17:53:42 IST" duration-ms="536" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationTypesTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateEditIntegrationTypesTATest(java.lang.reflect.Method)[pri:1031, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T17:53:42 IST" name="initialization" finished-at="2023-04-29T17:53:48 IST" duration-ms="6586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteIntegrationTypeTATest(java.lang.reflect.Method)[pri:1032, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T17:53:48 IST" name="validateDeleteIntegrationTypeTATest" finished-at="2023-04-29T17:54:04 IST" duration-ms="15329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA.validateDeleteIntegrationTypeTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Integration type is deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteIntegrationTypeTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589]" started-at="2023-04-29T17:54:04 IST" name="getResult" finished-at="2023-04-29T17:54:04 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteIntegrationTypeTATest status=SUCCESS method=IntegrationTypesPageTestTA.validateDeleteIntegrationTypeTATest(java.lang.reflect.Method)[pri:1032, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA@3bcbb589] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.IntegrationTypesPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:27:59 IST" name="initialization" finished-at="2023-04-29T15:28:04 IST" duration-ms="5152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedownloadingAuditLogsTA(java.lang.reflect.Method)[pri:75, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:28:04 IST" name="validatedownloadingAuditLogsTA" finished-at="2023-04-29T15:28:36 IST" duration-ms="32179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.validatedownloadingAuditLogsTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked the download button]]>
            </line>
            <line>
              <![CDATA[Audit logs download started Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedownloadingAuditLogsTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:28:36 IST" name="getResult" finished-at="2023-04-29T15:28:36 IST" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedownloadingAuditLogsTA status=SUCCESS method=AuditLogsPageTestTA.validatedownloadingAuditLogsTA(java.lang.reflect.Method)[pri:75, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:28:36 IST" name="initialization" finished-at="2023-04-29T15:28:41 IST" duration-ms="4439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInAuditLogsTA(java.lang.reflect.Method)[pri:76, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:28:41 IST" name="validatecheckColumnsInAuditLogsTA" finished-at="2023-04-29T15:29:02 IST" duration-ms="21373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.validatecheckColumnsInAuditLogsTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInAuditLogsTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:29:02 IST" name="getResult" finished-at="2023-04-29T15:29:02 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInAuditLogsTA status=SUCCESS method=AuditLogsPageTestTA.validatecheckColumnsInAuditLogsTA(java.lang.reflect.Method)[pri:76, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:29:02 IST" name="initialization" finished-at="2023-04-29T15:29:10 IST" duration-ms="7811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInAuditLogsTA(java.lang.reflect.Method)[pri:77, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:29:10 IST" name="validatedeselectAllInAuditLogsTA" finished-at="2023-04-29T15:29:30 IST" duration-ms="19648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.validatedeselectAllInAuditLogsTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 2]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 2]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Entity and ObjectId.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInAuditLogsTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:29:30 IST" name="getResult" finished-at="2023-04-29T15:29:30 IST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInAuditLogsTA status=SUCCESS method=AuditLogsPageTestTA.validatedeselectAllInAuditLogsTA(java.lang.reflect.Method)[pri:77, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:29:30 IST" name="initialization" finished-at="2023-04-29T15:29:40 IST" duration-ms="9921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifySpecificColumnTestTA(java.lang.reflect.Method)[pri:78, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:29:40 IST" name="verifySpecificColumnTestTA" finished-at="2023-04-29T15:30:00 IST" duration-ms="19634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA.verifySpecificColumnTestTA(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on Audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Description]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Source]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifySpecificColumnTestTA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb]" started-at="2023-04-29T15:30:00 IST" name="getResult" finished-at="2023-04-29T15:30:00 IST" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecificColumnTestTA status=SUCCESS method=AuditLogsPageTestTA.verifySpecificColumnTestTA(java.lang.reflect.Method)[pri:78, instance:com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA@5669c5fb] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.AuditLogsPageTestTA -->
      <class name="com.ae.qa.testcases.PluginsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T14:40:20 IST" name="initialization" finished-at="2023-04-29T14:40:26 IST" duration-ms="5260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadPluginsTest(java.lang.reflect.Method)[pri:15, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T14:40:26 IST" name="validateUploadPluginsTest" finished-at="2023-04-29T14:44:01 IST" duration-ms="215798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadPluginsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[Upload zip button clicked]]>
            </line>
            <line>
              <![CDATA[Plugin zip started uploading]]>
            </line>
            <line>
              <![CDATA[Upgrade all plugin checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Assign to all checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Save button is selected]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[Upload zip button clicked]]>
            </line>
            <line>
              <![CDATA[Plugin zip started uploading]]>
            </line>
            <line>
              <![CDATA[Upgrade all plugin checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Assign to all checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Save button is selected]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadPluginsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T14:44:01 IST" name="getResult" finished-at="2023-04-29T14:44:02 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadPluginsTest status=SUCCESS method=PluginsPageTest.validateUploadPluginsTest(java.lang.reflect.Method)[pri:15, instance:com.ae.qa.testcases.PluginsPageTest@40844aab] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T16:13:28 IST" name="initialization" finished-at="2023-04-29T16:13:34 IST" duration-ms="5960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadSinglePluginsTest(java.lang.reflect.Method)[pri:128, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T16:13:34 IST" name="validateUploadSinglePluginsTest" finished-at="2023-04-29T16:14:08 IST" duration-ms="34441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadSinglePluginsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Single plugin jar uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadSinglePluginsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T16:14:08 IST" name="getResult" finished-at="2023-04-29T16:14:09 IST" duration-ms="508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadSinglePluginsTest status=SUCCESS method=PluginsPageTest.validateUploadSinglePluginsTest(java.lang.reflect.Method)[pri:128, instance:com.ae.qa.testcases.PluginsPageTest@40844aab] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T16:36:43 IST" name="initialization" finished-at="2023-04-29T16:36:54 IST" duration-ms="10678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePluginsPageTest(java.lang.reflect.Method)[pri:158, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T16:36:54 IST" name="validatePluginsPageTest" finished-at="2023-04-29T16:37:19 IST" duration-ms="24701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validatePluginsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Plugins and Expected page title is: Plugins]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePluginsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T16:37:19 IST" name="getResult" finished-at="2023-04-29T16:37:19 IST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePluginsPageTest status=SUCCESS method=PluginsPageTest.validatePluginsPageTest(java.lang.reflect.Method)[pri:158, instance:com.ae.qa.testcases.PluginsPageTest@40844aab] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:26:31 IST" name="initialization" finished-at="2023-04-29T17:26:48 IST" duration-ms="17096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadSameSinglePluginTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:26:48 IST" name="validateUploadSameSinglePluginTest" finished-at="2023-04-29T17:28:12 IST" duration-ms="84348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadSameSinglePluginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Plugins Tab is selected]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[Single Plugin Jar started uploading]]>
            </line>
            <line>
              <![CDATA[Same plugin jar not uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadSameSinglePluginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:28:12 IST" name="getResult" finished-at="2023-04-29T17:28:13 IST" duration-ms="909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadSameSinglePluginTest status=SUCCESS method=PluginsPageTest.validateUploadSameSinglePluginTest(java.lang.reflect.Method)[pri:1000, instance:com.ae.qa.testcases.PluginsPageTest@40844aab] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:29:54 IST" name="initialization" finished-at="2023-04-29T17:30:04 IST" duration-ms="10235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadSinglePluginSameVersionTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:30:04 IST" name="validateUploadSinglePluginSameVersionTest" finished-at="2023-04-29T17:30:48 IST" duration-ms="44328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateUploadSinglePluginSameVersionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[New Plugin button clicked]]>
            </line>
            <line>
              <![CDATA[actual success msg is: Duplicate plugin name [GUI-Automation]]]>
            </line>
            <line>
              <![CDATA[expected success msg is: Duplicate plugin name [GUI-Automation]]]>
            </line>
            <line>
              <![CDATA[Single plugin jar with same version is not uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadSinglePluginSameVersionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:30:48 IST" name="getResult" finished-at="2023-04-29T17:30:49 IST" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadSinglePluginSameVersionTest status=SUCCESS method=PluginsPageTest.validateUploadSinglePluginSameVersionTest(java.lang.reflect.Method)[pri:1001, instance:com.ae.qa.testcases.PluginsPageTest@40844aab] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:30:49 IST" name="initialization" finished-at="2023-04-29T17:30:56 IST" duration-ms="7507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSinglePluginUploadLowerVersionTest(java.lang.reflect.Method)[pri:1002, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:30:56 IST" name="validateSinglePluginUploadLowerVersionTest" finished-at="2023-04-29T17:31:29 IST" duration-ms="32513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PluginsPageTest.validateSinglePluginUploadLowerVersionTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Single plugin jar of lower version is uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSinglePluginUploadLowerVersionTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PluginsPageTest@40844aab]" started-at="2023-04-29T17:31:29 IST" name="getResult" finished-at="2023-04-29T17:31:29 IST" duration-ms="466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSinglePluginUploadLowerVersionTest status=SUCCESS method=PluginsPageTest.validateSinglePluginUploadLowerVersionTest(java.lang.reflect.Method)[pri:1002, instance:com.ae.qa.testcases.PluginsPageTest@40844aab] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PluginsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:18:43 IST" name="initialization" finished-at="2023-04-29T15:18:47 IST" duration-ms="3974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateCredentialsTest(java.lang.reflect.Method)[pri:64, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:18:47 IST" name="ValidateCreateCredentialsTest" finished-at="2023-04-29T15:19:29 IST" duration-ms="41908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateCreateCredentialsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Record for KG_Private1 credential found in table]]>
            </line>
            <line>
              <![CDATA[Credentials created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateCredentialsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:19:29 IST" name="getResult" finished-at="2023-04-29T15:19:29 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateCredentialsTest status=SUCCESS method=CredentialsPageTestTA.ValidateCreateCredentialsTest(java.lang.reflect.Method)[pri:64, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:19:29 IST" name="initialization" finished-at="2023-04-29T15:19:33 IST" duration-ms="3714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditCredentialsTest(java.lang.reflect.Method)[pri:65, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:19:33 IST" name="ValidateEditCredentialsTest" finished-at="2023-04-29T15:20:30 IST" duration-ms="56742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateEditCredentialsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit button corresponding to credentials clicked]]>
            </line>
            <line>
              <![CDATA[Year selected from Calender]]>
            </line>
            <line>
              <![CDATA[Month selected from Calender]]>
            </line>
            <line>
              <![CDATA[Expiry Date selected from Calender]]>
            </line>
            <line>
              <![CDATA[Update button is clicked]]>
            </line>
            <line>
              <![CDATA[Credentials edited succesfully with all fields]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditCredentialsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:20:30 IST" name="getResult" finished-at="2023-04-29T15:20:30 IST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditCredentialsTest status=SUCCESS method=CredentialsPageTestTA.ValidateEditCredentialsTest(java.lang.reflect.Method)[pri:65, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:20:30 IST" name="initialization" finished-at="2023-04-29T15:20:34 IST" duration-ms="3679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDuplicateCredentialsTest(java.lang.reflect.Method)[pri:66, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:20:34 IST" name="ValidateDuplicateCredentialsTest" finished-at="2023-04-29T15:21:14 IST" duration-ms="40725" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDuplicateCredentialsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
            </line>
            <line>
              <![CDATA[Expected Duplicate Category message is :Duplicate credential name [KG_Private1]]]>
            </line>
            <line>
              <![CDATA[Credentials with duplicate name can't created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDuplicateCredentialsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:21:14 IST" name="getResult" finished-at="2023-04-29T15:21:15 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDuplicateCredentialsTest status=SUCCESS method=CredentialsPageTestTA.ValidateDuplicateCredentialsTest(java.lang.reflect.Method)[pri:66, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:21:15 IST" name="initialization" finished-at="2023-04-29T15:21:18 IST" duration-ms="3743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateCredentialPoolTest(java.lang.reflect.Method)[pri:67, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:21:18 IST" name="ValidateCreateCredentialPoolTest" finished-at="2023-04-29T15:21:54 IST" duration-ms="35310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateCreateCredentialPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Credential Pool button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Record for AE1 credential Pool found in table]]>
            </line>
            <line>
              <![CDATA[Credential Pool created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateCredentialPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:21:54 IST" name="getResult" finished-at="2023-04-29T15:21:54 IST" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateCredentialPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateCreateCredentialPoolTest(java.lang.reflect.Method)[pri:67, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:21:54 IST" name="initialization" finished-at="2023-04-29T15:21:58 IST" duration-ms="4370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDuplicateCredentialPoolTest(java.lang.reflect.Method)[pri:68, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:21:58 IST" name="ValidateDuplicateCredentialPoolTest" finished-at="2023-04-29T15:22:29 IST" duration-ms="31238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDuplicateCredentialPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Credential Pool button is clicked]]>
            </line>
            <line>
              <![CDATA[Create button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
            </line>
            <line>
              <![CDATA[Expected Duplicate Category Pool message is :Duplicate credential pool name [AE1]]]>
            </line>
            <line>
              <![CDATA[Credential Pool with duplicate name can't created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDuplicateCredentialPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:22:29 IST" name="getResult" finished-at="2023-04-29T15:22:29 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDuplicateCredentialPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateDuplicateCredentialPoolTest(java.lang.reflect.Method)[pri:68, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:22:29 IST" name="initialization" finished-at="2023-04-29T15:22:33 IST" duration-ms="3659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateMoveCredentialToPoolTest(java.lang.reflect.Method)[pri:69, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:22:33 IST" name="ValidateMoveCredentialToPoolTest" finished-at="2023-04-29T15:23:00 IST" duration-ms="27193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateMoveCredentialToPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Credential which needs to add in crenetial pool is selcted]]>
            </line>
            <line>
              <![CDATA[Credential pool in which redential needs to move is selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Move Button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual message is :Credential(s) moved successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Credential(s) moved successfully]]>
            </line>
            <line>
              <![CDATA[Credential moved to credential pool successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateMoveCredentialToPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T15:23:00 IST" name="getResult" finished-at="2023-04-29T15:23:00 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateMoveCredentialToPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateMoveCredentialToPoolTest(java.lang.reflect.Method)[pri:69, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T16:56:27 IST" name="initialization" finished-at="2023-04-29T16:56:36 IST" duration-ms="8107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeleteCredentialPoolTest(java.lang.reflect.Method)[pri:551, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T16:56:36 IST" name="ValidateDeleteCredentialPoolTest" finished-at="2023-04-29T16:57:28 IST" duration-ms="52421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDeleteCredentialPoolTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button on popup is confirmed]]>
            </line>
            <line>
              <![CDATA[Actual message is :Credential pool [AE1] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Credential pool [AE1] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Credential pool deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeleteCredentialPoolTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T16:57:28 IST" name="getResult" finished-at="2023-04-29T16:57:28 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeleteCredentialPoolTest status=SUCCESS method=CredentialsPageTestTA.ValidateDeleteCredentialPoolTest(java.lang.reflect.Method)[pri:551, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T16:57:28 IST" name="initialization" finished-at="2023-04-29T16:57:43 IST" duration-ms="14607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeleteCredentialTest(java.lang.reflect.Method)[pri:552, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T16:57:43 IST" name="ValidateDeleteCredentialTest" finished-at="2023-04-29T16:58:13 IST" duration-ms="30531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA.ValidateDeleteCredentialTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Credentials tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button on popup is confirmed]]>
            </line>
            <line>
              <![CDATA[Actual message is :Credential [KG_Private1] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Credential [KG_Private1] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Credential deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeleteCredentialTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2]" started-at="2023-04-29T16:58:13 IST" name="getResult" finished-at="2023-04-29T16:58:15 IST" duration-ms="1787" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeleteCredentialTest status=SUCCESS method=CredentialsPageTestTA.ValidateDeleteCredentialTest(java.lang.reflect.Method)[pri:552, instance:com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA@c5dc4a2] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.CredentialsPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.LoginPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@54dcfa5a]" started-at="2023-04-29T15:05:14 IST" name="initialization" finished-at="2023-04-29T15:05:18 IST" duration-ms="3964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateFirstTimeTALoginTest(java.lang.reflect.Method)[pri:42, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@54dcfa5a]" started-at="2023-04-29T15:05:18 IST" name="ValidateFirstTimeTALoginTest" finished-at="2023-04-29T15:05:31 IST" duration-ms="12849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.LoginPageTestTA.ValidateFirstTimeTALoginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateFirstTimeTALoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@54dcfa5a]" started-at="2023-04-29T15:05:31 IST" name="getResult" finished-at="2023-04-29T15:05:31 IST" duration-ms="215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateFirstTimeTALoginTest status=SUCCESS method=LoginPageTestTA.ValidateFirstTimeTALoginTest(java.lang.reflect.Method)[pri:42, instance:com.ae.qa.testcasesTenantAdmin.LoginPageTestTA@54dcfa5a] output=User changed first time password of User Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.LoginPageTestTA -->
      <class name="com.ae.qa.testcases.PurgePolicyPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T14:59:43 IST" name="initialization" finished-at="2023-04-29T14:59:48 IST" duration-ms="5702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWFReqLessThanNotfTest(java.lang.reflect.Method)[pri:33, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T14:59:48 IST" name="validateWFReqLessThanNotfTest" finished-at="2023-04-29T15:00:23 IST" duration-ms="34381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validateWFReqLessThanNotfTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Error when notification history is gretaer than wf requestNotification History Duration has be less than or equal to Workflow Requests Duration]]>
            </line>
            <line>
              <![CDATA[Expected Error when notification history is gretaer than wf request:Notification History Duration has be less than or equal to Workflow Requests Duration]]>
            </line>
            <line>
              <![CDATA[Getting correct error message.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWFReqLessThanNotfTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:00:23 IST" name="getResult" finished-at="2023-04-29T15:00:23 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWFReqLessThanNotfTest status=SUCCESS method=PurgePolicyPageTest.validateWFReqLessThanNotfTest(java.lang.reflect.Method)[pri:33, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:00:23 IST" name="initialization" finished-at="2023-04-29T15:00:27 IST" duration-ms="3978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgePolicyDurationTest(java.lang.reflect.Method)[pri:34, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:00:27 IST" name="validatePurgePolicyDurationTest" finished-at="2023-04-29T15:00:53 IST" duration-ms="26479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validatePurgePolicyDurationTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Purge policy saved successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgePolicyDurationTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:00:53 IST" name="getResult" finished-at="2023-04-29T15:00:53 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgePolicyDurationTest status=SUCCESS method=PurgePolicyPageTest.validatePurgePolicyDurationTest(java.lang.reflect.Method)[pri:34, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:00:53 IST" name="initialization" finished-at="2023-04-29T15:00:57 IST" duration-ms="4078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUpdatePurgePolicyEntityTest(java.lang.reflect.Method)[pri:35, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:00:57 IST" name="validateUpdatePurgePolicyEntityTest" finished-at="2023-04-29T15:01:28 IST" depends-on-methods="com.ae.qa.testcases.PurgePolicyPageTest.validatePurgePolicyDurationTest" duration-ms="30394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validateUpdatePurgePolicyEntityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Expected success message after setting purging policy:Policy saved successfully]]>
            </line>
            <line>
              <![CDATA[Purge policy saved successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUpdatePurgePolicyEntityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T15:01:28 IST" name="getResult" finished-at="2023-04-29T15:01:28 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdatePurgePolicyEntityTest status=SUCCESS method=PurgePolicyPageTest.validateUpdatePurgePolicyEntityTest(java.lang.reflect.Method)[pri:35, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T16:37:37 IST" name="initialization" finished-at="2023-04-29T16:37:50 IST" duration-ms="12863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatePurgePolicyPageTest(java.lang.reflect.Method)[pri:160, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T16:37:50 IST" name="validatePurgePolicyPageTest" finished-at="2023-04-29T16:38:14 IST" duration-ms="24675" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.PurgePolicyPageTest.validatePurgePolicyPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Purging Configuration and Expected page title is: Purging Configuration]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatePurgePolicyPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3]" started-at="2023-04-29T16:38:14 IST" name="getResult" finished-at="2023-04-29T16:38:15 IST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePurgePolicyPageTest status=SUCCESS method=PurgePolicyPageTest.validatePurgePolicyPageTest(java.lang.reflect.Method)[pri:160, instance:com.ae.qa.testcases.PurgePolicyPageTest@28e8dde3] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.PurgePolicyPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@189aa67a]" started-at="2023-04-29T16:02:35 IST" name="initialization" finished-at="2023-04-29T16:02:40 IST" duration-ms="4095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateDataSourcePostgresTest(java.lang.reflect.Method)[pri:116, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@189aa67a]" started-at="2023-04-29T16:02:40 IST" name="validateCreateDataSourcePostgresTest" finished-at="2023-04-29T16:04:15 IST" duration-ms="95774" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA.validateCreateDataSourcePostgresTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test Connection failed expected [Test Connection Successful] but found [Can't create connection for dataSource vae]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test Connection failed expected [Test Connection Successful] but found [Can't create connection for dataSource vae]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at com.ae.qa.pagesTenantAdmin.DataSourcesPageTA.validateCreateDataSourcePostgres(DataSourcesPageTA.java:90)
at com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA.validateCreateDataSourcePostgresTest(DataSourcesPageTestTA.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Report tab clicked]]>
            </line>
            <line>
              <![CDATA[DataSource  tab clicked]]>
            </line>
            <line>
              <![CDATA[Data-Source Form opened]]>
            </line>
            <line>
              <![CDATA[Button Clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateDataSourcePostgresTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@189aa67a]" started-at="2023-04-29T16:04:15 IST" name="getResult" finished-at="2023-04-29T16:04:16 IST" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateDataSourcePostgresTest status=FAILURE method=DataSourcesPageTestTA.validateCreateDataSourcePostgresTest(java.lang.reflect.Method)[pri:116, instance:com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA@189aa67a] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.DataSourcesPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:15:48 IST" name="initialization" finished-at="2023-04-29T15:15:52 IST" duration-ms="4342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateCategoryTest(java.lang.reflect.Method)[pri:59, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:15:52 IST" name="ValidateCreateCategoryTest" finished-at="2023-04-29T15:16:36 IST" duration-ms="44378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateCreateCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category name is entered which is only mandatory field]]>
            </line>
            <line>
              <![CDATA[Actual Category created message is :Workflow category created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category created message is :Workflow category created successfully]]>
            </line>
            <line>
              <![CDATA[Category created succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:16:36 IST" name="getResult" finished-at="2023-04-29T15:16:37 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateCreateCategoryTest(java.lang.reflect.Method)[pri:59, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:16:37 IST" name="initialization" finished-at="2023-04-29T15:16:40 IST" duration-ms="3441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditCategoryTest(java.lang.reflect.Method)[pri:60, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:16:40 IST" name="ValidateEditCategoryTest" finished-at="2023-04-29T15:17:24 IST" duration-ms="43873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateEditCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Edit Button corresponding to required category is clicked]]>
            </line>
            <line>
              <![CDATA[Category Description is entered]]>
            </line>
            <line>
              <![CDATA[Actual Category edited message is :Workflow category updated successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category edited message is :Workflow category updated successfully]]>
            </line>
            <line>
              <![CDATA[Category edited succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:17:24 IST" name="getResult" finished-at="2023-04-29T15:17:24 IST" duration-ms="439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateEditCategoryTest(java.lang.reflect.Method)[pri:60, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:17:24 IST" name="initialization" finished-at="2023-04-29T15:17:29 IST" duration-ms="4523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateAssignWFToCategoryTest(java.lang.reflect.Method)[pri:61, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:17:29 IST" name="ValidateAssignWFToCategoryTest" finished-at="2023-04-29T15:18:00 IST" duration-ms="31488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateAssignWFToCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Workflow which needs to move is checked]]>
            </line>
            <line>
              <![CDATA[category in which wf needs to move is selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Actual message is :Workflow(s) category changed successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Workflow(s) category changed successfully]]>
            </line>
            <line>
              <![CDATA[Workflow assigned to category succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateAssignWFToCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:18:00 IST" name="getResult" finished-at="2023-04-29T15:18:01 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateAssignWFToCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateAssignWFToCategoryTest(java.lang.reflect.Method)[pri:61, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:18:01 IST" name="initialization" finished-at="2023-04-29T15:18:06 IST" duration-ms="5379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreateDuplicateCategoryTest(java.lang.reflect.Method)[pri:63, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:18:06 IST" name="ValidateCreateDuplicateCategoryTest" finished-at="2023-04-29T15:18:43 IST" duration-ms="36844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateCreateDuplicateCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category name is entered which is only mandatory field]]>
            </line>
            <line>
              <![CDATA[Actual message is :Duplicate category name [WebGUI]]]>
            </line>
            <line>
              <![CDATA[Expected message is :Duplicate category name [WebGUI]]]>
            </line>
            <line>
              <![CDATA[Category can't be created with duplicate name]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreateDuplicateCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T15:18:43 IST" name="getResult" finished-at="2023-04-29T15:18:43 IST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreateDuplicateCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateCreateDuplicateCategoryTest(java.lang.reflect.Method)[pri:63, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T18:58:55 IST" name="initialization" finished-at="2023-04-29T18:59:03 IST" duration-ms="7299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateRemoveWFFromCategoryTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T18:59:03 IST" name="ValidateRemoveWFFromCategoryTest" finished-at="2023-04-29T18:59:40 IST" duration-ms="37335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateRemoveWFFromCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Categories tab clicked]]>
            </line>
            <line>
              <![CDATA[Category from which wf needs to remove is selected]]>
            </line>
            <line>
              <![CDATA[Workflow assigned to category is removed]]>
            </line>
            <line>
              <![CDATA[Actual message is :Workflow removed from this category successfully]]>
            </line>
            <line>
              <![CDATA[Expected message is :Workflow removed from this category successfully]]>
            </line>
            <line>
              <![CDATA[Workflow removed from category succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateRemoveWFFromCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T18:59:40 IST" name="getResult" finished-at="2023-04-29T18:59:40 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateRemoveWFFromCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateRemoveWFFromCategoryTest(java.lang.reflect.Method)[pri:2000, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T19:08:45 IST" name="initialization" finished-at="2023-04-29T19:08:55 IST" duration-ms="9929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeleteCategoryTest(java.lang.reflect.Method)[pri:2021, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T19:08:55 IST" name="ValidateDeleteCategoryTest" finished-at="2023-04-29T19:09:29 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateCreateCategoryTest" duration-ms="34126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA.ValidateDeleteCategoryTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[Category  tab clicked]]>
            </line>
            <line>
              <![CDATA[Actual Category deleted message is :Workflow category deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Category deleted message is :Workflow category deleted successfully]]>
            </line>
            <line>
              <![CDATA[Category Deleted succesfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeleteCategoryTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9]" started-at="2023-04-29T19:09:29 IST" name="getResult" finished-at="2023-04-29T19:09:29 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeleteCategoryTest status=SUCCESS method=CategoriesPageTestTA.ValidateDeleteCategoryTest(java.lang.reflect.Method)[pri:2021, instance:com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA@10ded6a9] output=User LogIn Succesfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.CategoriesPageTestTA -->
      <class name="com.ae.qa.testcases.IntegrationTypesPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:25:06 IST" name="initialization" finished-at="2023-04-29T16:25:13 IST" duration-ms="7230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationTypesTest(java.lang.reflect.Method)[pri:142, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:25:13 IST" name="validateAddIntegrationTypesTest" finished-at="2023-04-29T16:25:51 IST" duration-ms="37600" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateAddIntegrationTypesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type created successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationTypesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:25:51 IST" name="getResult" finished-at="2023-04-29T16:25:51 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationTypesTest status=SUCCESS method=IntegrationTypesPageTest.validateAddIntegrationTypesTest(java.lang.reflect.Method)[pri:142, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:25:51 IST" name="initialization" finished-at="2023-04-29T16:25:57 IST" duration-ms="5903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationTypesTest(java.lang.reflect.Method)[pri:143, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:25:57 IST" name="validateEditIntegrationTypesTest" finished-at="2023-04-29T16:26:31 IST" duration-ms="33802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateEditIntegrationTypesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Submit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Integration type updated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationTypesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:26:31 IST" name="getResult" finished-at="2023-04-29T16:26:31 IST" duration-ms="497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationTypesTest status=SUCCESS method=IntegrationTypesPageTest.validateEditIntegrationTypesTest(java.lang.reflect.Method)[pri:143, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:39:26 IST" name="initialization" finished-at="2023-04-29T16:39:37 IST" duration-ms="11426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationTypePageTest(java.lang.reflect.Method)[pri:163, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:39:37 IST" name="validateIntegrationTypePageTest" finished-at="2023-04-29T16:40:02 IST" duration-ms="24579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateIntegrationTypePageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Types and Expected page title is: Types]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationTypePageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T16:40:02 IST" name="getResult" finished-at="2023-04-29T16:40:02 IST" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationTypePageTest status=SUCCESS method=IntegrationTypesPageTest.validateIntegrationTypePageTest(java.lang.reflect.Method)[pri:163, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T18:58:09 IST" name="initialization" finished-at="2023-04-29T18:58:19 IST" duration-ms="9859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteIntegrationTypeTest(java.lang.reflect.Method)[pri:1380, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T18:58:19 IST" name="validateDeleteIntegrationTypeTest" finished-at="2023-04-29T18:58:55 IST" duration-ms="35744" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.IntegrationTypesPageTest.validateDeleteIntegrationTypeTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual success msg is: Integration type [RemedyForce] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected success msg is: Integration type [RemedyForce] deleted successfully]]>
            </line>
            <line>
              <![CDATA[Integration type is deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteIntegrationTypeTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f]" started-at="2023-04-29T18:58:55 IST" name="getResult" finished-at="2023-04-29T18:58:55 IST" duration-ms="276" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteIntegrationTypeTest status=SUCCESS method=IntegrationTypesPageTest.validateDeleteIntegrationTypeTest(java.lang.reflect.Method)[pri:1380, instance:com.ae.qa.testcases.IntegrationTypesPageTest@542e560f] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.IntegrationTypesPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604]" started-at="2023-04-29T15:25:59 IST" name="initialization" finished-at="2023-04-29T15:26:07 IST" duration-ms="7450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSingleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:72, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604]" started-at="2023-04-29T15:26:07 IST" name="validateSingleWorkflowAssignmentTest" finished-at="2023-04-29T15:26:38 IST" duration-ms="31294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA.validateSingleWorkflowAssignmentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSingleWorkflowAssignmentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604]" started-at="2023-04-29T15:26:38 IST" name="getResult" finished-at="2023-04-29T15:26:38 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSingleWorkflowAssignmentTest status=SUCCESS method=WorkflowAssignmentPageTestTA.validateSingleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:72, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604]" started-at="2023-04-29T17:07:59 IST" name="initialization" finished-at="2023-04-29T17:08:15 IST" duration-ms="16328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateMultipleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:709, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604]" started-at="2023-04-29T17:08:15 IST" name="validateMultipleWorkflowAssignmentTest" finished-at="2023-04-29T17:08:49 IST" duration-ms="33463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA.validateMultipleWorkflowAssignmentTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflows checkbox is clicked]]>
            </line>
            <line>
              <![CDATA[All workflow are selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateMultipleWorkflowAssignmentTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604]" started-at="2023-04-29T17:08:49 IST" name="getResult" finished-at="2023-04-29T17:08:52 IST" duration-ms="3258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMultipleWorkflowAssignmentTest status=SUCCESS method=WorkflowAssignmentPageTestTA.validateMultipleWorkflowAssignmentTest(java.lang.reflect.Method)[pri:709, instance:com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA@52066604] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.WorkflowAssignmentPageTestTA -->
      <class name="com.ae.qa.testcases.SmtpPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14]" started-at="2023-04-29T14:46:53 IST" name="initialization" finished-at="2023-04-29T14:47:01 IST" duration-ms="7208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddSmtpServerTest(java.lang.reflect.Method)[pri:20, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14]" started-at="2023-04-29T14:47:01 IST" name="validateAddSmtpServerTest" finished-at="2023-04-29T14:47:53 IST" duration-ms="52366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SmtpPageTest.validateAddSmtpServerTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Add smtp config button clicked]]>
            </line>
            <line>
              <![CDATA[Test connection successfully]]>
            </line>
            <line>
              <![CDATA[SMTP configured successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddSmtpServerTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14]" started-at="2023-04-29T14:47:53 IST" name="getResult" finished-at="2023-04-29T14:47:53 IST" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddSmtpServerTest status=SUCCESS method=SmtpPageTest.validateAddSmtpServerTest(java.lang.reflect.Method)[pri:20, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14]" started-at="2023-04-29T16:41:17 IST" name="initialization" finished-at="2023-04-29T16:41:25 IST" duration-ms="8098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSMTPPageTest(java.lang.reflect.Method)[pri:166, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14]" started-at="2023-04-29T16:41:25 IST" name="validateSMTPPageTest" finished-at="2023-04-29T16:41:52 IST" duration-ms="27195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SmtpPageTest.validateSMTPPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Email Configuration and Expected page title is: Email Configuration]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSMTPPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14]" started-at="2023-04-29T16:41:52 IST" name="getResult" finished-at="2023-04-29T16:41:55 IST" duration-ms="2719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSMTPPageTest status=SUCCESS method=SmtpPageTest.validateSMTPPageTest(java.lang.reflect.Method)[pri:166, instance:com.ae.qa.testcases.SmtpPageTest@5b619d14] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SmtpPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@3016fd5e]" started-at="2023-04-29T16:31:16 IST" name="initialization" finished-at="2023-04-29T16:31:22 IST" duration-ms="5562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateConfigureOKTAwidOpenIDTest(java.lang.reflect.Method)[pri:151, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@3016fd5e]" started-at="2023-04-29T16:31:22 IST" name="ValidateConfigureOKTAwidOpenIDTest" finished-at="2023-04-29T16:33:25 IST" duration-ms="122983" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA.ValidateConfigureOKTAwidOpenIDTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.sendKeys(Unknown Source)
at com.ae.qa.pagesTenantAdmin.TenantUserSSOPageTA.ValidateConfigureOKTAwidOpenID(TenantUserSSOPageTA.java:127)
at com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA.ValidateConfigureOKTAwidOpenIDTest(TenantUserSSOPageTestTA.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant created successfully]]>
            </line>
            <line>
              <![CDATA[Below validation is to validate new tenant record is visible in webtable]]>
            </line>
            <line>
              <![CDATA[New Tenant is present in the table-Validated successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Single Sign-on Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateConfigureOKTAwidOpenIDTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@3016fd5e]" started-at="2023-04-29T16:33:25 IST" name="getResult" finished-at="2023-04-29T16:33:25 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateConfigureOKTAwidOpenIDTest status=FAILURE method=TenantUserSSOPageTestTA.ValidateConfigureOKTAwidOpenIDTest(java.lang.reflect.Method)[pri:151, instance:com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA@3016fd5e] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.TenantUserSSOPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@3b00856b]" started-at="2023-04-29T16:30:03 IST" name="initialization" finished-at="2023-04-29T16:30:08 IST" duration-ms="5216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTypeConfBothTATest(java.lang.reflect.Method)[pri:150, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@3b00856b]" started-at="2023-04-29T16:30:08 IST" name="validateTypeConfBothTATest" finished-at="2023-04-29T16:31:16 IST" duration-ms="67588" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA.validateTypeConfBothTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[@name='test-smtp']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:52767}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 349839e00f4dc0105388768fae5596e0
*** Element info: {Using=xpath, value=//button[@name='test-smtp']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[@name='test-smtp']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:52767}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 349839e00f4dc0105388768fae5596e0
*** Element info: {Using=xpath, value=//button[@name='test-smtp']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.click(Unknown Source)
at com.ae.qa.pagesTenantAdmin.IntegrationTypeConfigPageTA.validateTypeConfBothTA(IntegrationTypeConfigPageTA.java:170)
at com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA.validateTypeConfBothTATest(IntegrationTypeConfigPageTestTA.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Type selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Service selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Update response via service checkbox is already selected]]>
            </line>
            <line>
              <![CDATA[Timezone selected]]>
            </line>
            <line>
              <![CDATA[Polling schedule is set]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTypeConfBothTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@3b00856b]" started-at="2023-04-29T16:31:16 IST" name="getResult" finished-at="2023-04-29T16:31:16 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTypeConfBothTATest status=FAILURE method=IntegrationTypeConfigPageTestTA.validateTypeConfBothTATest(java.lang.reflect.Method)[pri:150, instance:com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA@3b00856b] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.IntegrationTypeConfigPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:08:53 IST" name="initialization" finished-at="2023-04-29T17:10:03 IST" duration-ms="69418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateHolidayCalenderTest(java.lang.reflect.Method)[pri:716, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:10:03 IST" name="validateCreateHolidayCalenderTest" finished-at="2023-04-29T17:12:05 IST" duration-ms="121893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:12:05 IST" name="getResult" finished-at="2023-04-29T17:12:15 IST" duration-ms="9359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateCreateHolidayCalenderTest(java.lang.reflect.Method)[pri:716, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:12:15 IST" name="initialization" finished-at="2023-04-29T17:12:46 IST" duration-ms="31655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateHolidayCalenderUpcomingYearTest(java.lang.reflect.Method)[pri:717, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:12:46 IST" name="validateCreateHolidayCalenderUpcomingYearTest" finished-at="2023-04-29T17:12:56 IST" duration-ms="9750" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateHolidayCalenderUpcomingYearTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:55244}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b548474a4c9219e0722aa36eb04d795d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:55244}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b548474a4c9219e0722aa36eb04d795d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489)
at com.ae.qa.pagesTenantAdmin.HolidayCalenderPageTA.ImportHolidayCalender(HolidayCalenderPageTA.java:88)
at com.ae.qa.pagesTenantAdmin.HolidayCalenderPageTA.validateCreateHolidayCalenderUpcomingYear(HolidayCalenderPageTA.java:141)
at com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateHolidayCalenderUpcomingYearTest(HolidayCalenderPageTestTA.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateHolidayCalenderUpcomingYearTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:12:56 IST" name="getResult" finished-at="2023-04-29T17:13:00 IST" duration-ms="4216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateHolidayCalenderUpcomingYearTest status=FAILURE method=HolidayCalenderPageTestTA.validateCreateHolidayCalenderUpcomingYearTest(java.lang.reflect.Method)[pri:717, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:13:00 IST" name="initialization" finished-at="2023-04-29T17:13:13 IST" duration-ms="12840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditHolidayCalenderTest(java.lang.reflect.Method)[pri:718, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:13:13 IST" name="validateEditHolidayCalenderTest" finished-at="2023-04-29T17:14:23 IST" duration-ms="69437" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//table/tr/td[text()='HldyCalenderUpcomingYear']/../td[5]/span[@title='Edit Calendar']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:55288}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 15982afd85ae80bd2c4b93c3a1a16ddc
*** Element info: {Using=xpath, value=//table/tr/td[text()='HldyCalenderUpcomingYear']/../td[5]/span[@title='Edit Calendar']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//table/tr/td[text()='HldyCalenderUpcomingYear']/../td[5]/span[@title='Edit Calendar']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:55288}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 15982afd85ae80bd2c4b93c3a1a16ddc
*** Element info: {Using=xpath, value=//table/tr/td[text()='HldyCalenderUpcomingYear']/../td[5]/span[@title='Edit Calendar']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.ae.qa.pagesTenantAdmin.HolidayCalenderPageTA.validateEditHolidayCalender(HolidayCalenderPageTA.java:169)
at com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditHolidayCalenderTest(HolidayCalenderPageTestTA.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:14:23 IST" name="getResult" finished-at="2023-04-29T17:14:26 IST" duration-ms="3296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditHolidayCalenderTest status=FAILURE method=HolidayCalenderPageTestTA.validateEditHolidayCalenderTest(java.lang.reflect.Method)[pri:718, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:14:26 IST" name="initialization" finished-at="2023-04-29T17:14:46 IST" duration-ms="19926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveHolidayListDatesTest(java.lang.reflect.Method)[pri:719, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:14:46 IST" name="validateRemoveHolidayListDatesTest" finished-at="2023-04-29T17:16:10 IST" duration-ms="83678" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRemoveHolidayListDatesTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <span tabindex="0" menulink="" class="fa fa-edit hand-cursor" title="Edit Calendar"></span> is not clickable at point (1232, 312). Other element would receive the click: <div style="position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(255, 255, 255, 0.4 ); z-index: 1200;">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:55400}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 041d07256bf36c42e06069faa7738a98]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <span tabindex="0" menulink="" class="fa fa-edit hand-cursor" title="Edit Calendar"></span> is not clickable at point (1232, 312). Other element would receive the click: <div style="position: fixed; top: 0; right: 0; bottom: 0; left: 0; background: rgba(255, 255, 255, 0.4 ); z-index: 1200;">...</div>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:55400}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 041d07256bf36c42e06069faa7738a98
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.ae.qa.pagesTenantAdmin.HolidayCalenderPageTA.validateRemoveHolidayListDates(HolidayCalenderPageTA.java:233)
at com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRemoveHolidayListDatesTest(HolidayCalenderPageTestTA.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveHolidayListDatesTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:16:10 IST" name="getResult" finished-at="2023-04-29T17:16:18 IST" duration-ms="8138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveHolidayListDatesTest status=FAILURE method=HolidayCalenderPageTestTA.validateRemoveHolidayListDatesTest(java.lang.reflect.Method)[pri:719, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:16:18 IST" name="initialization" finished-at="2023-04-29T17:16:37 IST" duration-ms="19142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:720, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:16:37 IST" name="validateCreateCloneHolidayCalenderTest" finished-at="2023-04-29T17:17:13 IST" duration-ms="35884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateCreateCloneHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateCloneHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:17:13 IST" name="getResult" finished-at="2023-04-29T17:17:14 IST" duration-ms="1365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCloneHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateCreateCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:720, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:17:14 IST" name="initialization" finished-at="2023-04-29T17:17:48 IST" duration-ms="33793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:721, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:17:48 IST" name="validateEditCloneHolidayCalenderTest" finished-at="2023-04-29T17:18:38 IST" duration-ms="50244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditCloneHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditCloneHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:18:38 IST" name="getResult" finished-at="2023-04-29T17:18:45 IST" duration-ms="6767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditCloneHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateEditCloneHolidayCalenderTest(java.lang.reflect.Method)[pri:721, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:18:45 IST" name="initialization" finished-at="2023-04-29T17:19:04 IST" duration-ms="18208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRenewHoildayCalenderTest(java.lang.reflect.Method)[pri:722, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:19:04 IST" name="validateRenewHoildayCalenderTest" finished-at="2023-04-29T17:20:07 IST" duration-ms="63655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRenewHoildayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRenewHoildayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:20:07 IST" name="getResult" finished-at="2023-04-29T17:20:08 IST" duration-ms="495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRenewHoildayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateRenewHoildayCalenderTest(java.lang.reflect.Method)[pri:722, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:20:08 IST" name="initialization" finished-at="2023-04-29T17:20:23 IST" duration-ms="15507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditRenewHolidayCalenderTest(java.lang.reflect.Method)[pri:723, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:20:23 IST" name="validateEditRenewHolidayCalenderTest" finished-at="2023-04-29T17:21:00 IST" duration-ms="36828" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateEditRenewHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditRenewHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:21:00 IST" name="getResult" finished-at="2023-04-29T17:21:01 IST" duration-ms="481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditRenewHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateEditRenewHolidayCalenderTest(java.lang.reflect.Method)[pri:723, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:21:01 IST" name="initialization" finished-at="2023-04-29T17:21:18 IST" duration-ms="17687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveHoildayDatesRenewTest(java.lang.reflect.Method)[pri:724, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:21:18 IST" name="validateRemoveHoildayDatesRenewTest" finished-at="2023-04-29T17:22:11 IST" duration-ms="52471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateRemoveHoildayDatesRenewTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveHoildayDatesRenewTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:22:11 IST" name="getResult" finished-at="2023-04-29T17:22:12 IST" duration-ms="1283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveHoildayDatesRenewTest status=SUCCESS method=HolidayCalenderPageTestTA.validateRemoveHoildayDatesRenewTest(java.lang.reflect.Method)[pri:724, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:22:12 IST" name="initialization" finished-at="2023-04-29T17:22:25 IST" duration-ms="12985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteHolidayCalenderTest(java.lang.reflect.Method)[pri:725, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:22:25 IST" name="validateDeleteHolidayCalenderTest" finished-at="2023-04-29T17:23:50 IST" duration-ms="84890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateDeleteHolidayCalenderTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Holiday Calender Tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteHolidayCalenderTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:23:50 IST" name="getResult" finished-at="2023-04-29T17:23:50 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteHolidayCalenderTest status=SUCCESS method=HolidayCalenderPageTestTA.validateDeleteHolidayCalenderTest(java.lang.reflect.Method)[pri:725, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:23:51 IST" name="initialization" finished-at="2023-04-29T17:24:05 IST" duration-ms="14787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateHolidayCalenderPageTest(java.lang.reflect.Method)[pri:726, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:24:05 IST" name="validateHolidayCalenderPageTest" finished-at="2023-04-29T17:24:22 IST" duration-ms="17113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA.validateHolidayCalenderPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Holiday Calendar and Expected page title is: Holiday Calendar]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateHolidayCalenderPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c]" started-at="2023-04-29T17:24:22 IST" name="getResult" finished-at="2023-04-29T17:24:24 IST" duration-ms="1097" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateHolidayCalenderPageTest status=SUCCESS method=HolidayCalenderPageTestTA.validateHolidayCalenderPageTest(java.lang.reflect.Method)[pri:726, instance:com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA@35d08e6c] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.HolidayCalenderPageTestTA -->
      <class name="com.ae.qa.testcases.FileManagementPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T16:17:29 IST" name="initialization" finished-at="2023-04-29T16:17:33 IST" duration-ms="4081" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadDriverTest(java.lang.reflect.Method)[pri:132, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T16:17:33 IST" name="validateUploadDriverTest" finished-at="2023-04-29T16:18:10 IST" duration-ms="36850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateUploadDriverTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Upload Button is clicked]]>
            </line>
            <line>
              <![CDATA[Plugin Name is selected]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Chrome driver uploaded successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadDriverTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T16:18:10 IST" name="getResult" finished-at="2023-04-29T16:18:10 IST" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadDriverTest status=SUCCESS method=FileManagementPageTest.validateUploadDriverTest(java.lang.reflect.Method)[pri:132, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T16:40:02 IST" name="initialization" finished-at="2023-04-29T16:40:11 IST" duration-ms="9529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateFileManagmentPageTest(java.lang.reflect.Method)[pri:164, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T16:40:11 IST" name="validateFileManagmentPageTest" finished-at="2023-04-29T16:40:36 IST" duration-ms="25033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateFileManagmentPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Plugin Files and Expected page title is: Plugin Files]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateFileManagmentPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T16:40:36 IST" name="getResult" finished-at="2023-04-29T16:40:38 IST" duration-ms="1635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFileManagmentPageTest status=SUCCESS method=FileManagementPageTest.validateFileManagmentPageTest(java.lang.reflect.Method)[pri:164, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T17:34:43 IST" name="initialization" finished-at="2023-04-29T17:34:53 IST" duration-ms="9914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditUploadDriverTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T17:34:53 IST" name="validateEditUploadDriverTest" finished-at="2023-04-29T17:35:28 IST" duration-ms="34535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateEditUploadDriverTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Submit button is clicked]]>
            </line>
            <line>
              <![CDATA[Chrome driver is edited successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditUploadDriverTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T17:35:28 IST" name="getResult" finished-at="2023-04-29T17:35:28 IST" duration-ms="375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditUploadDriverTest status=SUCCESS method=FileManagementPageTest.validateEditUploadDriverTest(java.lang.reflect.Method)[pri:1004, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T17:35:28 IST" name="initialization" finished-at="2023-04-29T17:35:35 IST" duration-ms="6227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteUploadDriverTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T17:35:35 IST" name="validateDeleteUploadDriverTest" finished-at="2023-04-29T17:36:18 IST" duration-ms="43764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.FileManagementPageTest.validateDeleteUploadDriverTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[File Management tab is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked successfully]]>
            </line>
            <line>
              <![CDATA[Chrome driver is deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteUploadDriverTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6]" started-at="2023-04-29T17:36:18 IST" name="getResult" finished-at="2023-04-29T17:36:19 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteUploadDriverTest status=SUCCESS method=FileManagementPageTest.validateDeleteUploadDriverTest(java.lang.reflect.Method)[pri:1005, instance:com.ae.qa.testcases.FileManagementPageTest@59252cb6] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.FileManagementPageTest -->
      <class name="com.ae.qa.testcases.SystemSettingsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:44:02 IST" name="initialization" finished-at="2023-04-29T14:44:12 IST" duration-ms="10146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAgentServerNotSetTest(java.lang.reflect.Method)[pri:16, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:44:12 IST" name="validateAgentServerNotSetTest" finished-at="2023-04-29T14:45:12 IST" duration-ms="59889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateAgentServerNotSetTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Server Settings are not done, validated successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
            <line>
              <![CDATA[User LogIn Succesfully]]>
            </line>
            <line>
              <![CDATA[User navigated to Agents Tab]]>
            </line>
            <line>
              <![CDATA[When server settings are not done & user try to download agent.Popup is : It seems you have not configured the server URL for this server. Please contact administrator]]>
            </line>
            <line>
              <![CDATA[Agent can't be download due ro server settings,Error validated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAgentServerNotSetTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:45:12 IST" name="getResult" finished-at="2023-04-29T14:45:12 IST" duration-ms="235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAgentServerNotSetTest status=SUCCESS method=SystemSettingsPageTest.validateAgentServerNotSetTest(java.lang.reflect.Method)[pri:16, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:45:12 IST" name="initialization" finished-at="2023-04-29T14:45:21 IST" duration-ms="8989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateInvalidURLTest(java.lang.reflect.Method)[pri:17, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:45:21 IST" name="validateInvalidURLTest" finished-at="2023-04-29T14:45:41 IST" duration-ms="20189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateInvalidURLTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateInvalidURLTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:45:41 IST" name="getResult" finished-at="2023-04-29T14:45:41 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInvalidURLTest status=SUCCESS method=SystemSettingsPageTest.validateInvalidURLTest(java.lang.reflect.Method)[pri:17, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:45:41 IST" name="initialization" finished-at="2023-04-29T14:45:46 IST" duration-ms="4480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateServerUrlTest(java.lang.reflect.Method)[pri:18, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:45:46 IST" name="validateServerUrlTest" finished-at="2023-04-29T14:46:14 IST" duration-ms="28333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateServerUrlTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Settings tab clicked]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
            <line>
              <![CDATA[System Settings saved]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateServerUrlTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:46:14 IST" name="getResult" finished-at="2023-04-29T14:46:15 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateServerUrlTest status=SUCCESS method=SystemSettingsPageTest.validateServerUrlTest(java.lang.reflect.Method)[pri:18, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:46:15 IST" name="initialization" finished-at="2023-04-29T14:46:24 IST" duration-ms="9201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditCleanUpRequest(java.lang.reflect.Method)[pri:19, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:46:24 IST" name="validateEditCleanUpRequest" finished-at="2023-04-29T14:46:53 IST" duration-ms="28887" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateEditCleanUpRequest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Server URL field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Clean Up Requests Hours field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
            <line>
              <![CDATA[System Settings saved]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditCleanUpRequest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T14:46:53 IST" name="getResult" finished-at="2023-04-29T14:46:53 IST" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditCleanUpRequest status=SUCCESS method=SystemSettingsPageTest.validateEditCleanUpRequest(java.lang.reflect.Method)[pri:19, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T16:40:38 IST" name="initialization" finished-at="2023-04-29T16:40:52 IST" duration-ms="14006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSystemSettingsPageTest(java.lang.reflect.Method)[pri:165, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T16:40:52 IST" name="validateSystemSettingsPageTest" finished-at="2023-04-29T16:41:17 IST" duration-ms="24629" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.SystemSettingsPageTest.validateSystemSettingsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: System Settings and Expected page title is: System Settings]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSystemSettingsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8]" started-at="2023-04-29T16:41:17 IST" name="getResult" finished-at="2023-04-29T16:41:17 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSystemSettingsPageTest status=SUCCESS method=SystemSettingsPageTest.validateSystemSettingsPageTest(java.lang.reflect.Method)[pri:165, instance:com.ae.qa.testcases.SystemSettingsPageTest@1f6c9cd8] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.SystemSettingsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:31:58 IST" name="initialization" finished-at="2023-04-29T15:32:04 IST" duration-ms="5755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDailyScheduleTest(java.lang.reflect.Method)[pri:81, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:32:04 IST" name="validateDailyScheduleTest" finished-at="2023-04-29T15:33:08 IST" duration-ms="64724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateDailyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Daily Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDailyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:33:08 IST" name="getResult" finished-at="2023-04-29T15:33:09 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDailyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateDailyScheduleTest(java.lang.reflect.Method)[pri:81, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:33:09 IST" name="initialization" finished-at="2023-04-29T15:33:14 IST" duration-ms="5236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditDailyScheduleTest(java.lang.reflect.Method)[pri:82, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:33:14 IST" name="validateEditDailyScheduleTest" finished-at="2023-04-29T15:33:54 IST" duration-ms="40188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditDailyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[End date changed]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditDailyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:33:54 IST" name="getResult" finished-at="2023-04-29T15:33:54 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditDailyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditDailyScheduleTest(java.lang.reflect.Method)[pri:82, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:33:54 IST" name="initialization" finished-at="2023-04-29T15:33:58 IST" duration-ms="4175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWeeklyScheduleTest(java.lang.reflect.Method)[pri:83, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:33:58 IST" name="validateWeeklyScheduleTest" finished-at="2023-04-29T15:35:23 IST" duration-ms="84464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateWeeklyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Start day selected]]>
            </line>
            <line>
              <![CDATA[End day selected]]>
            </line>
            <line>
              <![CDATA[Schedule type selected]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[End Time is selected]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Weekly Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWeeklyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:35:23 IST" name="getResult" finished-at="2023-04-29T15:35:23 IST" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWeeklyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateWeeklyScheduleTest(java.lang.reflect.Method)[pri:83, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:35:23 IST" name="initialization" finished-at="2023-04-29T15:35:29 IST" duration-ms="5902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateMonthlyScheduleTest(java.lang.reflect.Method)[pri:84, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:35:29 IST" name="validateMonthlyScheduleTest" finished-at="2023-04-29T15:36:52 IST" duration-ms="82806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateMonthlyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[End Time is selected]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Weekly Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateMonthlyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:36:52 IST" name="getResult" finished-at="2023-04-29T15:36:52 IST" duration-ms="442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateMonthlyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateMonthlyScheduleTest(java.lang.reflect.Method)[pri:84, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:36:52 IST" name="initialization" finished-at="2023-04-29T15:36:57 IST" duration-ms="5104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateInfineScheduleTest(java.lang.reflect.Method)[pri:85, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:36:57 IST" name="validateInfineScheduleTest" finished-at="2023-04-29T15:38:11 IST" duration-ms="73949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateInfineScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add new Button clicked]]>
            </line>
            <line>
              <![CDATA[Schedule form details started]]>
            </line>
            <line>
              <![CDATA[Run Schedule Infinitely checbox selected]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is selected]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[Schedule submitted]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[Infinite Weekly Schedule created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateInfineScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:38:11 IST" name="getResult" finished-at="2023-04-29T15:38:11 IST" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInfineScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateInfineScheduleTest(java.lang.reflect.Method)[pri:85, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:38:11 IST" name="initialization" finished-at="2023-04-29T15:38:15 IST" duration-ms="3515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTransferScheduleTest(java.lang.reflect.Method)[pri:87, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:38:15 IST" name="validateTransferScheduleTest" finished-at="2023-04-29T15:38:44 IST" duration-ms="28852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateTransferScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Add Transfer Schedule button is clicked]]>
            </line>
            <line>
              <![CDATA[User from whom schedule needs to transfer is selcted]]>
            </line>
            <line>
              <![CDATA[User to whom schedule needs to is selcted]]>
            </line>
            <line>
              <![CDATA[Transfer button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedules transferred successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedules transferred successfully]]>
            </line>
            <line>
              <![CDATA[Schedule transfered successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTransferScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T15:38:44 IST" name="getResult" finished-at="2023-04-29T15:38:44 IST" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTransferScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateTransferScheduleTest(java.lang.reflect.Method)[pri:87, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T16:43:05 IST" name="initialization" finished-at="2023-04-29T16:43:12 IST" duration-ms="7189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSchedulerPageTATest(java.lang.reflect.Method)[pri:174, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T16:43:12 IST" name="validateSchedulerPageTATest" finished-at="2023-04-29T16:43:28 IST" duration-ms="16235" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateSchedulerPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Scheduler and Expected page title is: Scheduler]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSchedulerPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T16:43:28 IST" name="getResult" finished-at="2023-04-29T16:43:29 IST" duration-ms="1277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSchedulerPageTATest status=SUCCESS method=SchedulerPageTestTA.validateSchedulerPageTATest(java.lang.reflect.Method)[pri:174, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T17:24:24 IST" name="initialization" finished-at="2023-04-29T17:24:33 IST" duration-ms="9325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteScheduleTest(java.lang.reflect.Method)[pri:999, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T17:24:33 IST" name="validateDeleteScheduleTest" finished-at="2023-04-29T17:24:56 IST" duration-ms="23454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateDeleteScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Schedule got disable]]>
            </line>
            <line>
              <![CDATA[Delete schedule button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:For automation deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:For automation deleted successfully]]>
            </line>
            <line>
              <![CDATA[Schedule deleted successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T17:24:56 IST" name="getResult" finished-at="2023-04-29T17:24:58 IST" duration-ms="1816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateDeleteScheduleTest(java.lang.reflect.Method)[pri:999, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:03:18 IST" name="initialization" finished-at="2023-04-29T18:03:30 IST" duration-ms="12069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditWeeklyScheduleTest(java.lang.reflect.Method)[pri:1039, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:03:30 IST" name="validateEditWeeklyScheduleTest" finished-at="2023-04-29T18:04:00 IST" duration-ms="29470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditWeeklyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Repeat time is selcted]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditWeeklyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:04:00 IST" name="getResult" finished-at="2023-04-29T18:04:00 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditWeeklyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditWeeklyScheduleTest(java.lang.reflect.Method)[pri:1039, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:04:00 IST" name="initialization" finished-at="2023-04-29T18:04:07 IST" duration-ms="6355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditMonthlyScheduleTest(java.lang.reflect.Method)[pri:1040, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:04:07 IST" name="validateEditMonthlyScheduleTest" finished-at="2023-04-29T18:04:32 IST" duration-ms="25298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditMonthlyScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditMonthlyScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:04:32 IST" name="getResult" finished-at="2023-04-29T18:04:32 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditMonthlyScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditMonthlyScheduleTest(java.lang.reflect.Method)[pri:1040, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:04:32 IST" name="initialization" finished-at="2023-04-29T18:04:40 IST" duration-ms="8255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditInfineScheduleTest(java.lang.reflect.Method)[pri:1041, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:04:40 IST" name="validateEditInfineScheduleTest" finished-at="2023-04-29T18:05:11 IST" duration-ms="30819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA.validateEditInfineScheduleTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Scheduler tab clicked]]>
            </line>
            <line>
              <![CDATA[Repeat Every checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Submit button clicked]]>
            </line>
            <line>
              <![CDATA[Actual Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Expected Success Msg:Schedule Edited successfully]]>
            </line>
            <line>
              <![CDATA[Schedule edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditInfineScheduleTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74]" started-at="2023-04-29T18:05:11 IST" name="getResult" finished-at="2023-04-29T18:05:11 IST" duration-ms="429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditInfineScheduleTest status=SUCCESS method=SchedulerPageTestTA.validateEditInfineScheduleTest(java.lang.reflect.Method)[pri:1041, instance:com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA@373ebf74] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.SchedulerPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:06:14 IST" name="initialization" finished-at="2023-04-29T15:06:20 IST" duration-ms="6573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingWorkflowAdminTest(java.lang.reflect.Method)[pri:44, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:06:20 IST" name="ValidateCreatingWorkflowAdminTest" finished-at="2023-04-29T15:07:10 IST" duration-ms="49711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingWorkflowAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Workflow Admin]]>
            </line>
            <line>
              <![CDATA[Workflow Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Workflow Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingWorkflowAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:07:10 IST" name="getResult" finished-at="2023-04-29T15:07:10 IST" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingWorkflowAdminTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingWorkflowAdminTest(java.lang.reflect.Method)[pri:44, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:07:10 IST" name="initialization" finished-at="2023-04-29T15:07:16 IST" duration-ms="5843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:45, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:07:16 IST" name="ValidateCreatingTenantAdminTest" finished-at="2023-04-29T15:08:05 IST" duration-ms="49132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingTenantAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant Admin]]>
            </line>
            <line>
              <![CDATA[Tenant Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingTenantAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:08:05 IST" name="getResult" finished-at="2023-04-29T15:08:05 IST" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingTenantAdminTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:45, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:08:05 IST" name="initialization" finished-at="2023-04-29T15:08:11 IST" duration-ms="5456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingUserAdminTest(java.lang.reflect.Method)[pri:46, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:08:11 IST" name="ValidateCreatingUserAdminTest" finished-at="2023-04-29T15:09:00 IST" duration-ms="49432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingUserAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Admin]]>
            </line>
            <line>
              <![CDATA[User Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[User Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingUserAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:09:00 IST" name="getResult" finished-at="2023-04-29T15:09:00 IST" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingUserAdminTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingUserAdminTest(java.lang.reflect.Method)[pri:46, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:09:00 IST" name="initialization" finished-at="2023-04-29T15:09:04 IST" duration-ms="4019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingTenantUserTest(java.lang.reflect.Method)[pri:47, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:09:04 IST" name="ValidateCreatingTenantUserTest" finished-at="2023-04-29T15:09:55 IST" duration-ms="51199" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateCreatingTenantUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingTenantUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:09:55 IST" name="getResult" finished-at="2023-04-29T15:09:56 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingTenantUserTest status=SUCCESS method=TenantUsersPageTestTA.ValidateCreatingTenantUserTest(java.lang.reflect.Method)[pri:47, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:30:00 IST" name="initialization" finished-at="2023-04-29T15:30:06 IST" duration-ms="5540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUnverifiedStatusTest(java.lang.reflect.Method)[pri:79, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:30:06 IST" name="ValidateUnverifiedStatusTest" finished-at="2023-04-29T15:31:09 IST" duration-ms="63819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateUnverifiedStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Status of New Tenant user is :UNVERIFIED]]>
            </line>
            <line>
              <![CDATA[Expected Status of New Tenant user is :UNVERIFIED]]>
            </line>
            <line>
              <![CDATA[Status of newly created user is UNVERIFIED, verified successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUnverifiedStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:31:09 IST" name="getResult" finished-at="2023-04-29T15:31:10 IST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUnverifiedStatusTest status=SUCCESS method=TenantUsersPageTestTA.ValidateUnverifiedStatusTest(java.lang.reflect.Method)[pri:79, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:31:10 IST" name="initialization" finished-at="2023-04-29T15:31:13 IST" duration-ms="3839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateActiveStatusTest(java.lang.reflect.Method)[pri:80, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:31:13 IST" name="ValidateActiveStatusTest" finished-at="2023-04-29T15:31:58 IST" duration-ms="44389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateActiveStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Login into TA to verify status]]>
            </line>
            <line>
              <![CDATA[Actual Status of Tenant user after changing password is :ACTIVE]]>
            </line>
            <line>
              <![CDATA[Expected Status of Tenant user after changing password is :ACTIVE]]>
            </line>
            <line>
              <![CDATA[Status of user whose First time password changed is ACTIVE, verified successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateActiveStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T15:31:58 IST" name="getResult" finished-at="2023-04-29T15:31:58 IST" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateActiveStatusTest status=SUCCESS method=TenantUsersPageTestTA.ValidateActiveStatusTest(java.lang.reflect.Method)[pri:80, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User changed first time password of User Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:12:51 IST" name="initialization" finished-at="2023-04-29T16:12:55 IST" duration-ms="3985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="valiateEnableLockedUserTest(java.lang.reflect.Method)[pri:127, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:12:55 IST" name="valiateEnableLockedUserTest" finished-at="2023-04-29T16:13:27 IST" duration-ms="32459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.valiateEnableLockedUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Locked button clicked]]>
            </line>
            <line>
              <![CDATA[Action is selected to UNLOCK user and next button is clicked]]>
            </line>
            <line>
              <![CDATA[MadhuRani1enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- valiateEnableLockedUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:13:27 IST" name="getResult" finished-at="2023-04-29T16:13:28 IST" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=valiateEnableLockedUserTest status=SUCCESS method=TenantUsersPageTestTA.valiateEnableLockedUserTest(java.lang.reflect.Method)[pri:127, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:47:06 IST" name="initialization" finished-at="2023-04-29T16:47:12 IST" duration-ms="6256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateBulkUserUploadWithEmailTest(java.lang.reflect.Method)[pri:303, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:47:12 IST" name="ValidateBulkUserUploadWithEmailTest" finished-at="2023-04-29T16:48:44 IST" duration-ms="92121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateBulkUserUploadWithEmailTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dropdown Selector button is selected]]>
            </line>
            <line>
              <![CDATA[Native Users is Selected]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Rohil]]>
            </line>
            <line>
              <![CDATA[Omkar]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateBulkUserUploadWithEmailTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:48:44 IST" name="getResult" finished-at="2023-04-29T16:48:45 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateBulkUserUploadWithEmailTest status=SUCCESS method=TenantUsersPageTestTA.ValidateBulkUserUploadWithEmailTest(java.lang.reflect.Method)[pri:303, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:48:45 IST" name="initialization" finished-at="2023-04-29T16:48:55 IST" duration-ms="9966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateBulkUserUploadWithoutEmailTest(java.lang.reflect.Method)[pri:304, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:48:55 IST" name="ValidateBulkUserUploadWithoutEmailTest" finished-at="2023-04-29T16:50:28 IST" duration-ms="93004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateBulkUserUploadWithoutEmailTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Dropdown Selector button is selected]]>
            </line>
            <line>
              <![CDATA[Native Users is Selected]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Suyash]]>
            </line>
            <line>
              <![CDATA[Jitin]]>
            </line>
            <line>
              <![CDATA[Bulk User file is uploaded]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateBulkUserUploadWithoutEmailTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T16:50:28 IST" name="getResult" finished-at="2023-04-29T16:50:28 IST" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateBulkUserUploadWithoutEmailTest status=SUCCESS method=TenantUsersPageTestTA.ValidateBulkUserUploadWithoutEmailTest(java.lang.reflect.Method)[pri:304, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:05:12 IST" name="initialization" finished-at="2023-04-29T18:05:21 IST" duration-ms="9150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUnlockUserAccessApplicationTest(java.lang.reflect.Method)[pri:1043, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:05:21 IST" name="ValidateUnlockUserAccessApplicationTest" finished-at="2023-04-29T18:05:47 IST" duration-ms="26008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateUnlockUserAccessApplicationTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User is able to access the application as per his role]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUnlockUserAccessApplicationTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:05:47 IST" name="getResult" finished-at="2023-04-29T18:05:48 IST" duration-ms="1055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUnlockUserAccessApplicationTest status=SUCCESS method=TenantUsersPageTestTA.ValidateUnlockUserAccessApplicationTest(java.lang.reflect.Method)[pri:1043, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User changed first time password of User Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:05:48 IST" name="initialization" finished-at="2023-04-29T18:05:57 IST" duration-ms="9261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEnableUser(java.lang.reflect.Method)[pri:1044, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:05:57 IST" name="ValidateEnableUser" finished-at="2023-04-29T18:08:46 IST" duration-ms="168049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateEnableUser(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant User]]>
            </line>
            <line>
              <![CDATA[Tenant User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User signed in successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Active button is clicked]]>
            </line>
            <line>
              <![CDATA[Disabled button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Actual Message on screen is: Your account is inaccessible . Please contact your Administrator. and Expected message is: Your account is inaccessible . Please contact your Administrator.]]>
            </line>
            <line>
              <![CDATA[User is disabled so cannot login and appropriate message is been displayed]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Enabled button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User signed in successfully after been Enabled]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEnableUser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:08:46 IST" name="getResult" finished-at="2023-04-29T18:08:46 IST" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEnableUser status=SUCCESS method=TenantUsersPageTestTA.ValidateEnableUser(java.lang.reflect.Method)[pri:1044, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:08:46 IST" name="initialization" finished-at="2023-04-29T18:08:59 IST" duration-ms="13111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDisabledUserTuserTest(java.lang.reflect.Method)[pri:1045, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:08:59 IST" name="ValidateDisabledUserTuserTest" finished-at="2023-04-29T18:10:37 IST" duration-ms="97920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.ValidateDisabledUserTuserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Active button is clicked]]>
            </line>
            <line>
              <![CDATA[Disabled button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDisabledUserTuserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:10:37 IST" name="getResult" finished-at="2023-04-29T18:10:37 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDisabledUserTuserTest status=SUCCESS method=TenantUsersPageTestTA.ValidateDisabledUserTuserTest(java.lang.reflect.Method)[pri:1045, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:10:37 IST" name="initialization" finished-at="2023-04-29T18:10:44 IST" duration-ms="6294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDisabledDeleteTuserTest(java.lang.reflect.Method)[pri:1046, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:10:44 IST" name="validateDisabledDeleteTuserTest" finished-at="2023-04-29T18:11:13 IST" duration-ms="29045" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateDisabledDeleteTuserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant Users tab is clicked]]>
            </line>
            <line>
              <![CDATA[Delete this user checkbox is selected]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDisabledDeleteTuserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:11:13 IST" name="getResult" finished-at="2023-04-29T18:11:13 IST" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisabledDeleteTuserTest status=SUCCESS method=TenantUsersPageTestTA.validateDisabledDeleteTuserTest(java.lang.reflect.Method)[pri:1046, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=Tenant Admin signed in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:11:13 IST" name="initialization" finished-at="2023-04-29T18:11:21 IST" duration-ms="7439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditTenantUserTest(java.lang.reflect.Method)[pri:1047, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:11:21 IST" name="validateEditTenantUserTest" finished-at="2023-04-29T18:13:09 IST" duration-ms="108461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateEditTenantUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Workflow Admin]]>
            </line>
            <line>
              <![CDATA[Workflow Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Workflow Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Current Tenant Role is Workflow Admin]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Users Tab is Clicked]]>
            </line>
            <line>
              <![CDATA[TenantUsers Tab is Clicked]]>
            </line>
            <line>
              <![CDATA[Edit Button is clicked]]>
            </line>
            <line>
              <![CDATA[Email Id is edited successfully]]>
            </line>
            <line>
              <![CDATA[New Role is edited successfully]]>
            </line>
            <line>
              <![CDATA[Save Button is clicked]]>
            </line>
            <line>
              <![CDATA[Tenant User details got edited.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Actual user type after edit Role:- Tenant UserExpected user type after edit Role:- Tenant User]]>
            </line>
            <line>
              <![CDATA[User is edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditTenantUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:13:09 IST" name="getResult" finished-at="2023-04-29T18:13:10 IST" duration-ms="524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditTenantUserTest status=SUCCESS method=TenantUsersPageTestTA.validateEditTenantUserTest(java.lang.reflect.Method)[pri:1047, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:13:10 IST" name="initialization" finished-at="2023-04-29T18:13:17 IST" duration-ms="7374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateActivityMonitorSpaceInUsernameTest(java.lang.reflect.Method)[pri:1048, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:13:17 IST" name="validateCreateActivityMonitorSpaceInUsernameTest" finished-at="2023-04-29T18:14:31 IST" duration-ms="73840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateCreateActivityMonitorSpaceInUsernameTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Activity Monitor]]>
            </line>
            <line>
              <![CDATA[Activity Monitor is created successfully]]>
            </line>
            <line>
              <![CDATA[Activity Monitor created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Activity Monitor role with space in username is created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateActivityMonitorSpaceInUsernameTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:14:31 IST" name="getResult" finished-at="2023-04-29T18:14:31 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateActivityMonitorSpaceInUsernameTest status=SUCCESS method=TenantUsersPageTestTA.validateCreateActivityMonitorSpaceInUsernameTest(java.lang.reflect.Method)[pri:1048, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:14:31 IST" name="initialization" finished-at="2023-04-29T18:14:40 IST" duration-ms="8415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateAgentAdminApostropheLastnameTest(java.lang.reflect.Method)[pri:1049, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:14:40 IST" name="validateCreateAgentAdminApostropheLastnameTest" finished-at="2023-04-29T18:15:54 IST" duration-ms="73847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateCreateAgentAdminApostropheLastnameTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Agent Admin]]>
            </line>
            <line>
              <![CDATA[Agent Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[Agent Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[Agent admin role with Apostrophe in last name is created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateAgentAdminApostropheLastnameTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:15:54 IST" name="getResult" finished-at="2023-04-29T18:15:54 IST" duration-ms="443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateAgentAdminApostropheLastnameTest status=SUCCESS method=TenantUsersPageTestTA.validateCreateAgentAdminApostropheLastnameTest(java.lang.reflect.Method)[pri:1049, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:15:54 IST" name="initialization" finished-at="2023-04-29T18:16:02 IST" duration-ms="8222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateUserAdminEmailidUsernameTest(java.lang.reflect.Method)[pri:1050, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:16:02 IST" name="validateCreateUserAdminEmailidUsernameTest" finished-at="2023-04-29T18:17:17 IST" duration-ms="74344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA.validateCreateUserAdminEmailidUsernameTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Admin]]>
            </line>
            <line>
              <![CDATA[User Admin is created successfully]]>
            </line>
            <line>
              <![CDATA[User Admin created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User changed first time password of User Successfully]]>
            </line>
            <line>
              <![CDATA[User admin role with Email id in username is created successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateUserAdminEmailidUsernameTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf]" started-at="2023-04-29T18:17:17 IST" name="getResult" finished-at="2023-04-29T18:17:17 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateUserAdminEmailidUsernameTest status=SUCCESS method=TenantUsersPageTestTA.validateCreateUserAdminEmailidUsernameTest(java.lang.reflect.Method)[pri:1050, instance:com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA@767e20cf] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.TenantUsersPageTestTA -->
      <class name="com.ae.qa.testcases.TenantUsersPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T14:33:02 IST" name="initialization" finished-at="2023-04-29T14:33:06 IST" duration-ms="3816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:8, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T14:33:06 IST" name="ValidateCreatingTenantAdminTest" finished-at="2023-04-29T14:34:05 IST" duration-ms="59074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantUsersPageTest.ValidateCreatingTenantAdminTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateCreatingTenantAdminTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T14:34:05 IST" name="getResult" finished-at="2023-04-29T14:34:05 IST" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCreatingTenantAdminTest status=SUCCESS method=TenantUsersPageTest.ValidateCreatingTenantAdminTest(java.lang.reflect.Method)[pri:8, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T14:34:05 IST" name="initialization" finished-at="2023-04-29T14:34:09 IST" duration-ms="4062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateEditTenantUserTest(java.lang.reflect.Method)[pri:9, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T14:34:09 IST" name="ValidateEditTenantUserTest" finished-at="2023-04-29T14:36:27 IST" duration-ms="137377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantUsersPageTest.ValidateEditTenantUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new Tenant]]>
            </line>
            <line>
              <![CDATA[User is created successfully]]>
            </line>
            <line>
              <![CDATA[New user is verified and present in the webtable]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Tenant User details got edited.]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateEditTenantUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T14:36:27 IST" name="getResult" finished-at="2023-04-29T14:36:27 IST" duration-ms="136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEditTenantUserTest status=SUCCESS method=TenantUsersPageTest.ValidateEditTenantUserTest(java.lang.reflect.Method)[pri:9, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T16:34:31 IST" name="initialization" finished-at="2023-04-29T16:34:36 IST" duration-ms="5585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTenantUsersPageTest(java.lang.reflect.Method)[pri:154, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T16:34:36 IST" name="validateTenantUsersPageTest" finished-at="2023-04-29T16:35:07 IST" duration-ms="30575" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.TenantUsersPageTest.validateTenantUsersPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Tenant Users and Expected page title is: Tenant Users]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTenantUsersPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a]" started-at="2023-04-29T16:35:07 IST" name="getResult" finished-at="2023-04-29T16:35:07 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTenantUsersPageTest status=SUCCESS method=TenantUsersPageTest.validateTenantUsersPageTest(java.lang.reflect.Method)[pri:154, instance:com.ae.qa.testcases.TenantUsersPageTest@22ffa91a] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.TenantUsersPageTest -->
      <class name="com.ae.qa.testcases.ArtifactsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T14:38:33 IST" name="initialization" finished-at="2023-04-29T14:38:37 IST" duration-ms="3746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadPSTest(java.lang.reflect.Method)[pri:14, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T14:38:37 IST" name="validateUploadPSTest" finished-at="2023-04-29T14:40:20 IST" duration-ms="103501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.validateUploadPSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Upload button is clicked]]>
            </line>
            <line>
              <![CDATA[Upload PS button clicked]]>
            </line>
            <line>
              <![CDATA[Failure message for Invalid Artifact name: Artifact name for Process Studio distribution is case-sensitive. Please enter name as "Process Studio".]]>
            </line>
            <line>
              <![CDATA[Please upload artifacts with valid name]]>
            </line>
            <line>
              <![CDATA[Artifact name has given correctly]]>
            </line>
            <line>
              <![CDATA[Upload PS button clicked]]>
            </line>
            <line>
              <![CDATA[Success message for valid Artifact name: Artifact uploaded successfully]]>
            </line>
            <line>
              <![CDATA[Artifact uploaded successfully]]>
            </line>
            <line>
              <![CDATA[Actual Entity after uploading PS Upload: ARTIFACT]]>
            </line>
            <line>
              <![CDATA[Actual Operation after uploading PS Upload: UPLOAD]]>
            </line>
            <line>
              <![CDATA[Entry and Operation in Logs after uploading PS is verified]]>
            </line>
            <line>
              <![CDATA[Entity after uploading PS is verified]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadPSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T14:40:20 IST" name="getResult" finished-at="2023-04-29T14:40:20 IST" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadPSTest status=SUCCESS method=ArtifactsPageTest.validateUploadPSTest(java.lang.reflect.Method)[pri:14, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe] output=Upload button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T16:19:19 IST" name="initialization" finished-at="2023-04-29T16:19:26 IST" duration-ms="6859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateUpdatePSTest(java.lang.reflect.Method)[pri:135, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T16:19:26 IST" name="ValidateUpdatePSTest" finished-at="2023-04-29T16:20:54 IST" duration-ms="88142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.ValidateUpdatePSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Upload PS button clicked]]>
            </line>
            <line>
              <![CDATA[ Actual message after updating artifact: Artifact updated successfully]]>
            </line>
            <line>
              <![CDATA[Artifact updated successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateUpdatePSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T16:20:54 IST" name="getResult" finished-at="2023-04-29T16:20:55 IST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateUpdatePSTest status=SUCCESS method=ArtifactsPageTest.ValidateUpdatePSTest(java.lang.reflect.Method)[pri:135, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe] output=Edit button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T16:36:11 IST" name="initialization" finished-at="2023-04-29T16:36:18 IST" duration-ms="7106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateArtifactsPageTest(java.lang.reflect.Method)[pri:157, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T16:36:18 IST" name="validateArtifactsPageTest" finished-at="2023-04-29T16:36:43 IST" duration-ms="24617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.validateArtifactsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Artifacts and Expected page title is: Artifacts]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateArtifactsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T16:36:43 IST" name="getResult" finished-at="2023-04-29T16:36:43 IST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateArtifactsPageTest status=SUCCESS method=ArtifactsPageTest.validateArtifactsPageTest(java.lang.reflect.Method)[pri:157, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T19:08:15 IST" name="initialization" finished-at="2023-04-29T19:08:19 IST" duration-ms="3905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDeletePSTest(java.lang.reflect.Method)[pri:2020, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T19:08:19 IST" name="ValidateDeletePSTest" finished-at="2023-04-29T19:08:44 IST" duration-ms="24521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.ArtifactsPageTest.ValidateDeletePSTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Delete button is clicked]]>
            </line>
            <line>
              <![CDATA[Confirmed for deletion of Artifact]]>
            </line>
            <line>
              <![CDATA[ Actual message after deletion of artifact: Artifact <Process Studio> deleted successfully]]>
            </line>
            <line>
              <![CDATA[Artifact deleted successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDeletePSTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe]" started-at="2023-04-29T19:08:44 IST" name="getResult" finished-at="2023-04-29T19:08:45 IST" duration-ms="741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDeletePSTest status=SUCCESS method=ArtifactsPageTest.ValidateDeletePSTest(java.lang.reflect.Method)[pri:2020, instance:com.ae.qa.testcases.ArtifactsPageTest@42721fe] output=Delete button is clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.ArtifactsPageTest -->
      <class name="com.ae.qa.testcases.AuditLogsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:36:27 IST" name="initialization" finished-at="2023-04-29T14:36:32 IST" duration-ms="5009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedownloadingAuditLogs(java.lang.reflect.Method)[pri:10, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:36:32 IST" name="validatedownloadingAuditLogs" finished-at="2023-04-29T14:36:57 IST" duration-ms="25510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validatedownloadingAuditLogs(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Clicked the download button]]>
            </line>
            <line>
              <![CDATA[Audit logs download started Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedownloadingAuditLogs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:36:57 IST" name="getResult" finished-at="2023-04-29T14:36:57 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedownloadingAuditLogs status=SUCCESS method=AuditLogsPageTest.validatedownloadingAuditLogs(java.lang.reflect.Method)[pri:10, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:36:57 IST" name="initialization" finished-at="2023-04-29T14:37:04 IST" duration-ms="6584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInAuditLogs(java.lang.reflect.Method)[pri:11, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:37:04 IST" name="validatecheckColumnsInAuditLogs" finished-at="2023-04-29T14:37:29 IST" duration-ms="25539" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validatecheckColumnsInAuditLogs(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInAuditLogs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:37:29 IST" name="getResult" finished-at="2023-04-29T14:37:30 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInAuditLogs status=SUCCESS method=AuditLogsPageTest.validatecheckColumnsInAuditLogs(java.lang.reflect.Method)[pri:11, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:37:30 IST" name="initialization" finished-at="2023-04-29T14:37:36 IST" duration-ms="6169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInAuditLogs(java.lang.reflect.Method)[pri:12, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:37:36 IST" name="validatedeselectAllInAuditLogs" finished-at="2023-04-29T14:38:01 IST" duration-ms="25445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validatedeselectAllInAuditLogs(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 2]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 2]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Entity and ObjectId.]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInAuditLogs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:38:01 IST" name="getResult" finished-at="2023-04-29T14:38:02 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInAuditLogs status=SUCCESS method=AuditLogsPageTest.validatedeselectAllInAuditLogs(java.lang.reflect.Method)[pri:12, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:38:02 IST" name="initialization" finished-at="2023-04-29T14:38:07 IST" duration-ms="5080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifySpecificColumnTest(java.lang.reflect.Method)[pri:13, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:38:07 IST" name="verifySpecificColumnTest" finished-at="2023-04-29T14:38:33 IST" duration-ms="25813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.verifySpecificColumnTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Entity]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Object Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Description]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Source]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table with Entity and ObjectId.]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifySpecificColumnTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:38:33 IST" name="getResult" finished-at="2023-04-29T14:38:33 IST" duration-ms="264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecificColumnTest status=SUCCESS method=AuditLogsPageTest.verifySpecificColumnTest(java.lang.reflect.Method)[pri:13, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:59:00 IST" name="initialization" finished-at="2023-04-29T14:59:04 IST" duration-ms="4106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="verifycheckLogsTest(java.lang.reflect.Method)[pri:32, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:59:04 IST" name="verifycheckLogsTest" finished-at="2023-04-29T14:59:42 IST" duration-ms="38644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.verifycheckLogsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[configure button is clicked]]>
            </line>
            <line>
              <![CDATA[Started configuring server url]]>
            </line>
            <line>
              <![CDATA[Server URL field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Clean Up Requests Hours field edited Successfully]]>
            </line>
            <line>
              <![CDATA[Verify button is clicked]]>
            </line>
            <line>
              <![CDATA[System Settings saved]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[LOGOUT]]>
            </line>
            <line>
              <![CDATA[UPDATE]]>
            </line>
            <line>
              <![CDATA[AUTHENTICATE]]>
            </line>
            <line>
              <![CDATA[Operations in audit logs validated in table]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifycheckLogsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T14:59:42 IST" name="getResult" finished-at="2023-04-29T14:59:43 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifycheckLogsTest status=SUCCESS method=AuditLogsPageTest.verifycheckLogsTest(java.lang.reflect.Method)[pri:32, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T16:35:38 IST" name="initialization" finished-at="2023-04-29T16:35:44 IST" duration-ms="6253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateLogsPageTest(java.lang.reflect.Method)[pri:156, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T16:35:44 IST" name="validateLogsPageTest" finished-at="2023-04-29T16:36:11 IST" duration-ms="26687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.AuditLogsPageTest.validateLogsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Clicked on audit logs tab]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Audit Logs and Expected page title is: Audit Logs]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateLogsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa]" started-at="2023-04-29T16:36:11 IST" name="getResult" finished-at="2023-04-29T16:36:11 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogsPageTest status=SUCCESS method=AuditLogsPageTest.validateLogsPageTest(java.lang.reflect.Method)[pri:156, instance:com.ae.qa.testcases.AuditLogsPageTest@74960bfa] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.AuditLogsPageTest -->
      <class name="com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:09:56 IST" name="initialization" finished-at="2023-04-29T15:09:59 IST" duration-ms="3703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateCreateUserGroup(java.lang.reflect.Method)[pri:48, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:09:59 IST" name="validateCreateUserGroup" finished-at="2023-04-29T15:10:28 IST" duration-ms="28640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateCreateUserGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Group]]>
            </line>
            <line>
              <![CDATA[Actual Username:User group created successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User group created successfully]]>
            </line>
            <line>
              <![CDATA[New user group is created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateCreateUserGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:10:28 IST" name="getResult" finished-at="2023-04-29T15:10:28 IST" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateUserGroup status=SUCCESS method=UserGroupsPageTestTA.validateCreateUserGroup(java.lang.reflect.Method)[pri:48, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:10:28 IST" name="initialization" finished-at="2023-04-29T15:10:33 IST" duration-ms="4226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditUserGroup(java.lang.reflect.Method)[pri:49, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:10:33 IST" name="validateEditUserGroup" finished-at="2023-04-29T15:10:57 IST" duration-ms="24883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateEditUserGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Edit button is clicked]]>
            </line>
            <line>
              <![CDATA[Description of user group updated]]>
            </line>
            <line>
              <![CDATA[Actual Username:Changes saved to user group]]>
            </line>
            <line>
              <![CDATA[Expected Username:Changes saved to user group]]>
            </line>
            <line>
              <![CDATA[User group got edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditUserGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:10:57 IST" name="getResult" finished-at="2023-04-29T15:10:58 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditUserGroup status=SUCCESS method=UserGroupsPageTestTA.validateEditUserGroup(java.lang.reflect.Method)[pri:49, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:10:58 IST" name="initialization" finished-at="2023-04-29T15:11:03 IST" duration-ms="5362" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddUserToGroup(java.lang.reflect.Method)[pri:50, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:11:03 IST" name="validateAddUserToGroup" finished-at="2023-04-29T15:11:39 IST" duration-ms="36264" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateAddUserToGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Users Tab clicked]]>
            </line>
            <line>
              <![CDATA[UsersGroup Tab clicked]]>
            </line>
            <line>
              <![CDATA[Show Member button is clicked]]>
            </line>
            <line>
              <![CDATA[assigning user1]]>
            </line>
            <line>
              <![CDATA[Actual Username:User(s) added to the group successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User(s) added to the group successfully]]>
            </line>
            <line>
              <![CDATA[User1 assigned and validated]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddUserToGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:11:39 IST" name="getResult" finished-at="2023-04-29T15:11:40 IST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddUserToGroup status=SUCCESS method=UserGroupsPageTestTA.validateAddUserToGroup(java.lang.reflect.Method)[pri:50, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:11:40 IST" name="initialization" finished-at="2023-04-29T15:11:44 IST" duration-ms="4783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRemoveUserFromGroup(java.lang.reflect.Method)[pri:51, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:11:44 IST" name="validateRemoveUserFromGroup" finished-at="2023-04-29T15:12:16 IST" duration-ms="32114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateRemoveUserFromGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab clicked]]>
            </line>
            <line>
              <![CDATA[Users group tab clicked]]>
            </line>
            <line>
              <![CDATA[Show Member button is clicked]]>
            </line>
            <line>
              <![CDATA[Removing user1]]>
            </line>
            <line>
              <![CDATA[Actual Username:User(s) removed from the group successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User(s) removed from the group successfully]]>
            </line>
            <line>
              <![CDATA[User1 removed]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRemoveUserFromGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:12:16 IST" name="getResult" finished-at="2023-04-29T15:12:17 IST" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRemoveUserFromGroup status=SUCCESS method=UserGroupsPageTestTA.validateRemoveUserFromGroup(java.lang.reflect.Method)[pri:51, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:12:17 IST" name="initialization" finished-at="2023-04-29T15:12:21 IST" duration-ms="4009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateDuplicateUserGroupTest(java.lang.reflect.Method)[pri:52, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:12:21 IST" name="ValidateDuplicateUserGroupTest" finished-at="2023-04-29T15:12:45 IST" duration-ms="24859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.ValidateDuplicateUserGroupTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[started creating new User Group]]>
            </line>
            <line>
              <![CDATA[Actual Username:Duplicate user group name [HRGroup]]]>
            </line>
            <line>
              <![CDATA[Expected Username:Duplicate user group name [HRGroup]]]>
            </line>
            <line>
              <![CDATA[User group with duplicate name can not be created]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateDuplicateUserGroupTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T15:12:45 IST" name="getResult" finished-at="2023-04-29T15:12:46 IST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDuplicateUserGroupTest status=SUCCESS method=UserGroupsPageTestTA.ValidateDuplicateUserGroupTest(java.lang.reflect.Method)[pri:52, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T16:58:15 IST" name="initialization" finished-at="2023-04-29T16:58:28 IST" duration-ms="12090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDeleteUserGroup(java.lang.reflect.Method)[pri:560, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T16:58:28 IST" name="validateDeleteUserGroup" finished-at="2023-04-29T16:58:52 IST" duration-ms="24778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA.validateDeleteUserGroup(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Users tab clicked]]>
            </line>
            <line>
              <![CDATA[Users group tab clicked]]>
            </line>
            <line>
              <![CDATA[Delete button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual Username:User group deleted successfully]]>
            </line>
            <line>
              <![CDATA[Expected Username:User group deleted successfully]]>
            </line>
            <line>
              <![CDATA[User group deleted]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDeleteUserGroup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f]" started-at="2023-04-29T16:58:52 IST" name="getResult" finished-at="2023-04-29T16:58:52 IST" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteUserGroup status=SUCCESS method=UserGroupsPageTestTA.validateDeleteUserGroup(java.lang.reflect.Method)[pri:560, instance:com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA@3a3e78f] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.UserGroupsPageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:27:20 IST" name="initialization" finished-at="2023-04-29T16:27:29 IST" duration-ms="9132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateAddIntegrationServicesTATest(java.lang.reflect.Method)[pri:146, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:27:29 IST" name="validateAddIntegrationServicesTATest" finished-at="2023-04-29T16:28:31 IST" duration-ms="61962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateAddIntegrationServicesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: LPT-0919]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: MadhuRani2]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, MadhuRani2]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: 10.81.24.109]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, MadhuRani2, 10.81.24.109]]]>
            </line>
            <line>
              <![CDATA[Actual values in Integration table: 5901]]>
            </line>
            <line>
              <![CDATA[Actual details of Integration service in table are :[LPT-0919, MadhuRani2, 10.81.24.109, 5901]]]>
            </line>
            <line>
              <![CDATA[Expected details of Integration service in table are: [LPT-0919, MadhuRani2, 10.81.24.109, 5901]]]>
            </line>
            <line>
              <![CDATA[Integration service details verified in table]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateAddIntegrationServicesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:28:31 IST" name="getResult" finished-at="2023-04-29T16:28:31 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddIntegrationServicesTATest status=SUCCESS method=IntegrationServicePageTestTA.validateAddIntegrationServicesTATest(java.lang.reflect.Method)[pri:146, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:28:31 IST" name="initialization" finished-at="2023-04-29T16:28:37 IST" duration-ms="5326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditIntegrationServicesTATest(java.lang.reflect.Method)[pri:147, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:28:37 IST" name="validateEditIntegrationServicesTATest" finished-at="2023-04-29T16:29:01 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateAddIntegrationServicesTATest" duration-ms="24430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateEditIntegrationServicesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Edit button clicked, Service with IntService1ForMadhuRani2 name is editing]]>
            </line>
            <line>
              <![CDATA[UserName is edited]]>
            </line>
            <line>
              <![CDATA[Update Button is clicked, now validate the change in table]]>
            </line>
            <line>
              <![CDATA[Actual Machine Name in Integration table: VM-0163 and Expected Machinename in Integrationtable: VM-0163]]>
            </line>
            <line>
              <![CDATA[Integration service edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditIntegrationServicesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:29:01 IST" name="getResult" finished-at="2023-04-29T16:29:01 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditIntegrationServicesTATest status=SUCCESS method=IntegrationServicePageTestTA.validateEditIntegrationServicesTATest(java.lang.reflect.Method)[pri:147, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:29:01 IST" name="initialization" finished-at="2023-04-29T16:29:08 IST" duration-ms="6356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadIntegrationServicesTATest(java.lang.reflect.Method)[pri:148, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:29:08 IST" name="validateDownloadIntegrationServicesTATest" finished-at="2023-04-29T16:29:26 IST" depends-on-methods="com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateAddIntegrationServicesTATest" duration-ms="18008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateDownloadIntegrationServicesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Download button clicked and downloading integrtration service started]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadIntegrationServicesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:29:26 IST" name="getResult" finished-at="2023-04-29T16:29:26 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadIntegrationServicesTATest status=SUCCESS method=IntegrationServicePageTestTA.validateDownloadIntegrationServicesTATest(java.lang.reflect.Method)[pri:148, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:44:25 IST" name="initialization" finished-at="2023-04-29T16:44:32 IST" duration-ms="7391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateIntegrationServicesPageTATest(java.lang.reflect.Method)[pri:195, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:44:32 IST" name="validateIntegrationServicesPageTATest" finished-at="2023-04-29T16:44:51 IST" duration-ms="19143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateIntegrationServicesPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Services and Expected page title is: Services]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateIntegrationServicesPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T16:44:51 IST" name="getResult" finished-at="2023-04-29T16:44:51 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIntegrationServicesPageTATest status=SUCCESS method=IntegrationServicePageTestTA.validateIntegrationServicesPageTATest(java.lang.reflect.Method)[pri:195, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T17:51:59 IST" name="initialization" finished-at="2023-04-29T17:52:05 IST" duration-ms="5942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditConfJobLowerLimitIntegrationServicesTATest(java.lang.reflect.Method)[pri:1029, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T17:52:05 IST" name="validateEditConfJobLowerLimitIntegrationServicesTATest" finished-at="2023-04-29T17:52:31 IST" duration-ms="25789" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateEditConfJobLowerLimitIntegrationServicesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Service Name in Integration table: IntService1ForMadhuRani2 and Expected Servicename in Integrationtable: IntService1ForMadhuRani2]]>
            </line>
            <line>
              <![CDATA[Integration service edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditConfJobLowerLimitIntegrationServicesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T17:52:31 IST" name="getResult" finished-at="2023-04-29T17:52:31 IST" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditConfJobLowerLimitIntegrationServicesTATest status=SUCCESS method=IntegrationServicePageTestTA.validateEditConfJobLowerLimitIntegrationServicesTATest(java.lang.reflect.Method)[pri:1029, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T17:52:31 IST" name="initialization" finished-at="2023-04-29T17:52:36 IST" duration-ms="5194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEditUpdateResponseJobLowerLimitIntegrationServicesTATest(java.lang.reflect.Method)[pri:1030, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T17:52:36 IST" name="validateEditUpdateResponseJobLowerLimitIntegrationServicesTATest" finished-at="2023-04-29T17:53:03 IST" duration-ms="26576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA.validateEditUpdateResponseJobLowerLimitIntegrationServicesTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual Service Name in Integration table: IntService1ForMadhuRani2 and Expected Servicename in Integrationtable: IntService1ForMadhuRani2]]>
            </line>
            <line>
              <![CDATA[Integration service edited successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEditUpdateResponseJobLowerLimitIntegrationServicesTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606]" started-at="2023-04-29T17:53:03 IST" name="getResult" finished-at="2023-04-29T17:53:03 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEditUpdateResponseJobLowerLimitIntegrationServicesTATest status=SUCCESS method=IntegrationServicePageTestTA.validateEditUpdateResponseJobLowerLimitIntegrationServicesTATest(java.lang.reflect.Method)[pri:1030, instance:com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA@1d730606] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.IntegrationServicePageTestTA -->
      <class name="com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:27:11 IST" name="initialization" finished-at="2023-04-29T15:27:19 IST" duration-ms="8035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRequestStatusTest(java.lang.reflect.Method)[pri:74, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:27:19 IST" name="validateRequestStatusTest" finished-at="2023-04-29T15:27:58 IST" duration-ms="39256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRequestStatusTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Additional status details is clicked]]>
            </line>
            <line>
              <![CDATA[Message after execution of wf:Message : Execution Successful]]>
            </line>
            <line>
              <![CDATA[Workflow status is:Complete]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRequestStatusTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:27:58 IST" name="getResult" finished-at="2023-04-29T15:27:59 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRequestStatusTest status=SUCCESS method=RequestsPageTestTA.validateRequestStatusTest(java.lang.reflect.Method)[pri:74, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:40:07 IST" name="initialization" finished-at="2023-04-29T15:40:11 IST" duration-ms="4039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatecheckColumnsInRequests(java.lang.reflect.Method)[pri:91, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:40:11 IST" name="validatecheckColumnsInRequests" finished-at="2023-04-29T15:40:33 IST" duration-ms="21299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validatecheckColumnsInRequests(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[All Column got displayed in records after Checking select All checkbox.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatecheckColumnsInRequests -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:40:33 IST" name="getResult" finished-at="2023-04-29T15:40:34 IST" duration-ms="1241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatecheckColumnsInRequests status=SUCCESS method=RequestsPageTestTA.validatecheckColumnsInRequests(java.lang.reflect.Method)[pri:91, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:40:34 IST" name="initialization" finished-at="2023-04-29T15:40:39 IST" duration-ms="4871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validatedeselectAllInRequests(java.lang.reflect.Method)[pri:92, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:40:39 IST" name="validatedeselectAllInRequests" finished-at="2023-04-29T15:41:00 IST" duration-ms="21307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validatedeselectAllInRequests(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Selected count of No. of colums 3]]>
            </line>
            <line>
              <![CDATA[Total No of columns in table: 3]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Workflow Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All Options got deselected except Id,Workflow Name,Status.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validatedeselectAllInRequests -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:41:00 IST" name="getResult" finished-at="2023-04-29T15:41:02 IST" duration-ms="1345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatedeselectAllInRequests status=SUCCESS method=RequestsPageTestTA.validatedeselectAllInRequests(java.lang.reflect.Method)[pri:92, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:41:02 IST" name="initialization" finished-at="2023-04-29T15:41:07 IST" duration-ms="5657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSpecificColumnInRequests(java.lang.reflect.Method)[pri:93, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:41:07 IST" name="validateSpecificColumnInRequests" finished-at="2023-04-29T15:41:34 IST" duration-ms="27301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateSpecificColumnInRequests(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Select All Checkbox is not already selected, Hence selected twice to deselect it.]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Id]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Workflow Name]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Priority]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Status]]>
            </line>
            <line>
              <![CDATA[Field of Columns: Completed]]>
            </line>
            <line>
              <![CDATA[Column Value found]]>
            </line>
            <line>
              <![CDATA[All columns selected found in table.]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSpecificColumnInRequests -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:41:34 IST" name="getResult" finished-at="2023-04-29T15:41:35 IST" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSpecificColumnInRequests status=SUCCESS method=RequestsPageTestTA.validateSpecificColumnInRequests(java.lang.reflect.Method)[pri:93, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:41:35 IST" name="initialization" finished-at="2023-04-29T15:41:43 IST" duration-ms="7683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDownloadRequestTest(java.lang.reflect.Method)[pri:94, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:41:43 IST" name="validateDownloadRequestTest" finished-at="2023-04-29T15:42:05 IST" duration-ms="22167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateDownloadRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Download button is clicked & request download started]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDownloadRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T15:42:05 IST" name="getResult" finished-at="2023-04-29T15:42:05 IST" duration-ms="399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDownloadRequestTest status=SUCCESS method=RequestsPageTestTA.validateDownloadRequestTest(java.lang.reflect.Method)[pri:94, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T16:43:29 IST" name="initialization" finished-at="2023-04-29T16:43:36 IST" duration-ms="6748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRequestsPageTATest(java.lang.reflect.Method)[pri:183, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T16:43:36 IST" name="validateRequestsPageTATest" finished-at="2023-04-29T16:43:55 IST" duration-ms="19112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRequestsPageTATest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Requests and Expected page title is: Requests]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRequestsPageTATest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T16:43:55 IST" name="getResult" finished-at="2023-04-29T16:43:56 IST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRequestsPageTATest status=SUCCESS method=RequestsPageTestTA.validateRequestsPageTATest(java.lang.reflect.Method)[pri:183, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T17:56:38 IST" name="initialization" finished-at="2023-04-29T17:56:52 IST" duration-ms="13772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRequestFailureReasonTest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T17:56:52 IST" name="validateRequestFailureReasonTest" finished-at="2023-04-29T17:59:31 IST" duration-ms="158711" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRequestFailureReasonTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Additional status details is clicked]]>
            </line>
            <line>
              <![CDATA[Message after execution of wf:Error!]]>
            </line>
            <line>
              <![CDATA[Workflow status is:Failure]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRequestFailureReasonTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T17:59:31 IST" name="getResult" finished-at="2023-04-29T17:59:31 IST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRequestFailureReasonTest status=SUCCESS method=RequestsPageTestTA.validateRequestFailureReasonTest(java.lang.reflect.Method)[pri:1036, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T18:00:09 IST" name="initialization" finished-at="2023-04-29T18:00:19 IST" duration-ms="10628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateRestartRequestTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T18:00:19 IST" name="validateRestartRequestTest" finished-at="2023-04-29T18:00:30 IST" duration-ms="10650" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRestartRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at com.ae.qa.pagesTenantAdmin.RequestsPageTA.validateRestartRequest(RequestsPageTA.java:428)
at com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateRestartRequestTest(RequestsPageTestTA.java:93)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateRestartRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T18:00:30 IST" name="getResult" finished-at="2023-04-29T18:00:31 IST" duration-ms="1342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRestartRequestTest status=FAILURE method=RequestsPageTestTA.validateRestartRequestTest(java.lang.reflect.Method)[pri:1037, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T18:00:34 IST" name="initialization" finished-at="2023-04-29T18:01:03 IST" duration-ms="28946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateTerminateRequestTest(java.lang.reflect.Method)[pri:1038, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T18:01:03 IST" name="validateTerminateRequestTest" finished-at="2023-04-29T18:03:18 IST" duration-ms="134229" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateTerminateRequestTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57746}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ea9fad0fb67cc3bd389798e1595d44b3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:57746}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ea9fad0fb67cc3bd389798e1595d44b3
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy28.getText(Unknown Source)
at com.ae.qa.pagesTenantAdmin.RequestsPageTA.validateTerminateRequest(RequestsPageTA.java:497)
at com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA.validateTerminateRequestTest(RequestsPageTestTA.java:102)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Workflows Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Import button clicked]]>
            </line>
            <line>
              <![CDATA[Is Assisted Workflow checkbox is unselected]]>
            </line>
            <line>
              <![CDATA[Create Button is clicked]]>
            </line>
            <line>
              <![CDATA[Priority is set]]>
            </line>
            <line>
              <![CDATA[Expected Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Maximum Completion Time in Seconds is set]]>
            </line>
            <line>
              <![CDATA[Cleanup Requests older than Hours fields is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution Time is set]]>
            </line>
            <line>
              <![CDATA[Manual Execution time unit is set]]>
            </line>
            <line>
              <![CDATA[Config Parameter is clicked]]>
            </line>
            <line>
              <![CDATA[Config Parameter is entered]]>
            </line>
            <line>
              <![CDATA[Save button is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow updated]]>
            </line>
            <line>
              <![CDATA[Workflow is enabled successfully]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[Tenant Admin signed in successfully]]>
            </line>
            <line>
              <![CDATA[Agents tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow Assignment tab is clicked]]>
            </line>
            <line>
              <![CDATA[Edit button is selected]]>
            </line>
            <line>
              <![CDATA[Workflow is searched]]>
            </line>
            <line>
              <![CDATA[Required wf is selected]]>
            </line>
            <line>
              <![CDATA[Saved the operation]]>
            </line>
            <line>
              <![CDATA[Assignment confirmed]]>
            </line>
            <line>
              <![CDATA[Actual Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Expected Wf Assignment Msg:Assignment saved successfully.]]>
            </line>
            <line>
              <![CDATA[Single workflow is successfully assigned to default agent]]>
            </line>
            <line>
              <![CDATA[User signed out successfully]]>
            </line>
            <line>
              <![CDATA[User logged in successfully]]>
            </line>
            <line>
              <![CDATA[Catalogue Tab is clicked]]>
            </line>
            <line>
              <![CDATA[Workflow whose request needs to be send is selected]]>
            </line>
            <line>
              <![CDATA[Submit request button is clicked]]>
            </line>
            <line>
              <![CDATA[OK button is clicked]]>
            </line>
            <line>
              <![CDATA[Requests Tab is clicked]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateTerminateRequestTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384]" started-at="2023-04-29T18:03:18 IST" name="getResult" finished-at="2023-04-29T18:03:18 IST" duration-ms="695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTerminateRequestTest status=FAILURE method=RequestsPageTestTA.validateTerminateRequestTest(java.lang.reflect.Method)[pri:1038, instance:com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA@56113384] output=User logged in successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcasesTenantAdmin.RequestsPageTestTA -->
      <class name="com.ae.qa.testcases.HomePageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T16:26:31 IST" name="initialization" finished-at="2023-04-29T16:26:39 IST" duration-ms="7639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateSearchFunctionalityTest(java.lang.reflect.Method)[pri:144, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T16:26:39 IST" name="validateSearchFunctionalityTest" finished-at="2023-04-29T16:27:02 IST" duration-ms="22974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.HomePageTest.validateSearchFunctionalityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[User searched for functionality: Logs and Found is: Logs]]>
            </line>
            <line>
              <![CDATA[Search Functionality working properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateSearchFunctionalityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T16:27:02 IST" name="getResult" finished-at="2023-04-29T16:27:02 IST" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchFunctionalityTest status=SUCCESS method=HomePageTest.validateSearchFunctionalityTest(java.lang.reflect.Method)[pri:144, instance:com.ae.qa.testcases.HomePageTest@626c44e7] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T16:59:36 IST" name="initialization" finished-at="2023-04-29T16:59:51 IST" duration-ms="15451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateHomePageForConsumptionTabTest(java.lang.reflect.Method)[pri:700, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T16:59:51 IST" name="validateHomePageForConsumptionTabTest" finished-at="2023-04-29T17:00:58 IST" duration-ms="66547" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.HomePageTest.validateHomePageForConsumptionTabTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()='Home']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54611}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: da260c53559ae4d8c4e1fe871c1cf714
*** Element info: {Using=xpath, value=//span[text()='Home']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[text()='Home']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54611}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: da260c53559ae4d8c4e1fe871c1cf714
*** Element info: {Using=xpath, value=//span[text()='Home']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at com.ae.qa.pages.HomePage.validateHomePageForConsumptionTab(HomePage.java:68)
at com.ae.qa.testcases.HomePageTest.validateHomePageForConsumptionTabTest(HomePageTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateHomePageForConsumptionTabTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T17:00:58 IST" name="getResult" finished-at="2023-04-29T17:00:58 IST" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateHomePageForConsumptionTabTest status=FAILURE method=HomePageTest.validateHomePageForConsumptionTabTest(java.lang.reflect.Method)[pri:700, instance:com.ae.qa.testcases.HomePageTest@626c44e7] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T17:00:58 IST" name="initialization" finished-at="2023-04-29T17:01:13 IST" duration-ms="14253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUploadLicenseTest(java.lang.reflect.Method)[pri:701, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T17:01:13 IST" name="validateUploadLicenseTest" finished-at="2023-04-29T17:02:26 IST" duration-ms="73762" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.HomePageTest.validateUploadLicenseTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='card-body']/h2"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54661}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9b7e3c41d6864e0c0048fbceba14fe81
*** Element info: {Using=xpath, value=//div[@class='card-body']/h2}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='card-body']/h2"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-5VHKQUJ', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:54661}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9b7e3c41d6864e0c0048fbceba14fe81
*** Element info: {Using=xpath, value=//div[@class='card-body']/h2}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.getWrappedElement(Unknown Source)
at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:50)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:484)
at com.ae.qa.pages.HomePage.validateUploadLicense(HomePage.java:86)
at com.ae.qa.testcases.HomePageTest.validateUploadLicenseTest(HomePageTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUploadLicenseTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.HomePageTest@626c44e7]" started-at="2023-04-29T17:02:26 IST" name="getResult" finished-at="2023-04-29T17:02:27 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadLicenseTest status=FAILURE method=HomePageTest.validateUploadLicenseTest(java.lang.reflect.Method)[pri:701, instance:com.ae.qa.testcases.HomePageTest@626c44e7] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.HomePageTest -->
      <class name="com.ae.qa.testcases.WorkflowsPageTest">
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:18:10 IST" name="initialization" finished-at="2023-04-29T16:18:14 IST" duration-ms="3976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateDisableWorkflowsTest(java.lang.reflect.Method)[pri:133, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:18:14 IST" name="validateDisableWorkflowsTest" finished-at="2023-04-29T16:18:44 IST" duration-ms="29319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.WorkflowsPageTest.validateDisableWorkflowsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Opertaion of Disable all workflows is selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Plugin Update checkbox selected]]>
            </line>
            <line>
              <![CDATA[Disable button is selected, now verify message]]>
            </line>
            <line>
              <![CDATA[Message get after disabling workflow: Workflow disabled]]>
            </line>
            <line>
              <![CDATA[Workflow disabled successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateDisableWorkflowsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:18:44 IST" name="getResult" finished-at="2023-04-29T16:18:44 IST" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDisableWorkflowsTest status=SUCCESS method=WorkflowsPageTest.validateDisableWorkflowsTest(java.lang.reflect.Method)[pri:133, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:18:44 IST" name="initialization" finished-at="2023-04-29T16:18:48 IST" duration-ms="4295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateEnableWorkflowsTest(java.lang.reflect.Method)[pri:134, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:18:48 IST" name="validateEnableWorkflowsTest" finished-at="2023-04-29T16:19:19 IST" duration-ms="31001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.WorkflowsPageTest.validateEnableWorkflowsTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Opertaion of Enable all workflows is selected from dropdown]]>
            </line>
            <line>
              <![CDATA[Plugin Update checkbox selected]]>
            </line>
            <line>
              <![CDATA[Enable button is selected, now verify message]]>
            </line>
            <line>
              <![CDATA[Message get after enabling workflow: Workflow enabled successfully]]>
            </line>
            <line>
              <![CDATA[Workflow enabled successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateEnableWorkflowsTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:19:19 IST" name="getResult" finished-at="2023-04-29T16:19:19 IST" duration-ms="172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEnableWorkflowsTest status=SUCCESS method=WorkflowsPageTest.validateEnableWorkflowsTest(java.lang.reflect.Method)[pri:134, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:35:07 IST" name="initialization" finished-at="2023-04-29T16:35:12 IST" duration-ms="5181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateWorkflowsPageTest(java.lang.reflect.Method)[pri:155, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:35:12 IST" name="validateWorkflowsPageTest" finished-at="2023-04-29T16:35:37 IST" duration-ms="24432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.WorkflowsPageTest.validateWorkflowsPageTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Actual page title displayed on screen is: Workflow Operations and Expected page title is: Workflow Operations]]>
            </line>
            <line>
              <![CDATA[Respective Page is clicked and appropriate page is loaded properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateWorkflowsPageTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914]" started-at="2023-04-29T16:35:37 IST" name="getResult" finished-at="2023-04-29T16:35:38 IST" duration-ms="1459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWorkflowsPageTest status=SUCCESS method=WorkflowsPageTest.validateWorkflowsPageTest(java.lang.reflect.Method)[pri:155, instance:com.ae.qa.testcases.WorkflowsPageTest@3243b914] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.ae.qa.testcases.WorkflowsPageTest -->
      <class name="com.ae.qa.testcases.LoginPageTest">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T14:26:34 IST" name="setExtent" finished-at="2023-04-29T14:26:34 IST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T14:26:34 IST" name="initialization" finished-at="2023-04-29T14:26:51 IST" duration-ms="16357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateFirstTimeLoginTest(java.lang.reflect.Method)[pri:1, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T14:26:51 IST" name="ValidateFirstTimeLoginTest" finished-at="2023-04-29T14:27:14 IST" duration-ms="22983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateFirstTimeLoginTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User changed first time password of sysadmin Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateFirstTimeLoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T14:27:14 IST" name="getResult" finished-at="2023-04-29T14:27:15 IST" duration-ms="1054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateFirstTimeLoginTest status=SUCCESS method=LoginPageTest.ValidateFirstTimeLoginTest(java.lang.reflect.Method)[pri:1, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output=User changed first time password of sysadmin Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:02:47 IST" name="initialization" finished-at="2023-04-29T15:02:52 IST" duration-ms="4765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateForgotPswdTest(java.lang.reflect.Method)[pri:38, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:02:52 IST" name="validateForgotPswdTest" finished-at="2023-04-29T15:02:52 IST" duration-ms="827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.validateForgotPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Forgotten password link is Present]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateForgotPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:02:52 IST" name="getResult" finished-at="2023-04-29T15:02:53 IST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateForgotPswdTest status=SUCCESS method=LoginPageTest.validateForgotPswdTest(java.lang.reflect.Method)[pri:38, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output=Forgotten password link is Present]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:02:53 IST" name="initialization" finished-at="2023-04-29T15:02:57 IST" duration-ms="4466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateSettingPwdWOComplexityTest(java.lang.reflect.Method)[pri:39, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:02:57 IST" name="ValidateSettingPwdWOComplexityTest" finished-at="2023-04-29T15:04:03 IST" duration-ms="66320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateSettingPwdWOComplexityTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[User log in Successfully]]>
            </line>
            <line>
              <![CDATA[Forgot password link clicked]]>
            </line>
            <line>
              <![CDATA[Username entered]]>
            </line>
            <line>
              <![CDATA[submitted]]>
            </line>
            <line>
              <![CDATA[security questions submitted]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateSettingPwdWOComplexityTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:04:03 IST" name="getResult" finished-at="2023-04-29T15:04:04 IST" duration-ms="269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateSettingPwdWOComplexityTest status=SUCCESS method=LoginPageTest.ValidateSettingPwdWOComplexityTest(java.lang.reflect.Method)[pri:39, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output=User log in Successfully]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:04:04 IST" name="initialization" finished-at="2023-04-29T15:04:08 IST" duration-ms="4002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateResetPswdTest(java.lang.reflect.Method)[pri:40, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:04:08 IST" name="ValidateResetPswdTest" finished-at="2023-04-29T15:04:54 IST" duration-ms="45934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateResetPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Forgot password link clicked]]>
            </line>
            <line>
              <![CDATA[Username entered]]>
            </line>
            <line>
              <![CDATA[submitted]]>
            </line>
            <line>
              <![CDATA[security questions submitted]]>
            </line>
            <line>
              <![CDATA[Set new password successfully]]>
            </line>
            <line>
              <![CDATA[Password set successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidateResetPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:04:54 IST" name="getResult" finished-at="2023-04-29T15:04:54 IST" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateResetPswdTest status=SUCCESS method=LoginPageTest.ValidateResetPswdTest(java.lang.reflect.Method)[pri:40, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output=Forgot password link clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:04:54 IST" name="initialization" finished-at="2023-04-29T15:04:59 IST" duration-ms="4720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateLoginWithResetPswdTest(java.lang.reflect.Method)[pri:41, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:04:59 IST" name="ValidateLoginWithResetPswdTest" finished-at="2023-04-29T15:05:14 IST" depends-on-methods="com.ae.qa.testcases.LoginPageTest.ValidateResetPswdTest" duration-ms="15594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateLoginWithResetPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLoginWithResetPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T15:05:14 IST" name="getResult" finished-at="2023-04-29T15:05:14 IST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateLoginWithResetPswdTest status=SUCCESS method=LoginPageTest.ValidateLoginWithResetPswdTest(java.lang.reflect.Method)[pri:41, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T16:20:55 IST" name="initialization" finished-at="2023-04-29T16:21:02 IST" duration-ms="6664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="validateUnlockUserWithSecQueAndResetPswdTest(java.lang.reflect.Method)[pri:136, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T16:21:02 IST" name="validateUnlockUserWithSecQueAndResetPswdTest" finished-at="2023-04-29T16:21:48 IST" duration-ms="46272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.validateUnlockUserWithSecQueAndResetPswdTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Forgot password link clicked]]>
            </line>
            <line>
              <![CDATA[Username entered]]>
            </line>
            <line>
              <![CDATA[submitted]]>
            </line>
            <line>
              <![CDATA[security questions submitted]]>
            </line>
            <line>
              <![CDATA[Set new password successfully]]>
            </line>
            <line>
              <![CDATA[Password set successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- validateUnlockUserWithSecQueAndResetPswdTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T16:21:48 IST" name="getResult" finished-at="2023-04-29T16:21:48 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnlockUserWithSecQueAndResetPswdTest status=SUCCESS method=LoginPageTest.validateUnlockUserWithSecQueAndResetPswdTest(java.lang.reflect.Method)[pri:136, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output=Forgot password link clicked]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="initialization()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T16:21:48 IST" name="initialization" finished-at="2023-04-29T16:21:56 IST" duration-ms="7683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method signature="ValidateLoginOfUnlockUserTest(java.lang.reflect.Method)[pri:137, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T16:21:56 IST" name="ValidateLoginOfUnlockUserTest" finished-at="2023-04-29T16:22:11 IST" duration-ms="15616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.ae.qa.testcases.LoginPageTest.ValidateLoginOfUnlockUserTest(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLoginOfUnlockUserTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T16:22:11 IST" name="getResult" finished-at="2023-04-29T16:22:12 IST" duration-ms="760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateLoginOfUnlockUserTest status=SUCCESS method=LoginPageTest.ValidateLoginOfUnlockUserTest(java.lang.reflect.Method)[pri:137, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.ae.qa.testcases.LoginPageTest@33b1c5c5]" started-at="2023-04-29T19:09:53 IST" name="endReport" finished-at="2023-04-29T19:10:00 IST" duration-ms="6663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.ae.qa.testcases.LoginPageTest -->
    </test> <!-- AESanity -->
  </suite> <!-- TestSuite -->
</testng-results>
